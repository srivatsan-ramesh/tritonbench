//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	matmul_kernel_profile   // -- Begin function matmul_kernel_profile
.extern .shared .align 16 .b8 global_smem[];
                                        // @matmul_kernel_profile
.visible .entry matmul_kernel_profile(
	.param .u64 matmul_kernel_profile_param_0,
	.param .u64 matmul_kernel_profile_param_1,
	.param .u64 matmul_kernel_profile_param_2,
	.param .u32 matmul_kernel_profile_param_3,
	.param .u32 matmul_kernel_profile_param_4,
	.param .u32 matmul_kernel_profile_param_5,
	.param .u32 matmul_kernel_profile_param_6,
	.param .u32 matmul_kernel_profile_param_7,
	.param .u32 matmul_kernel_profile_param_8,
	.param .u64 matmul_kernel_profile_param_9
)
.reqntid 1024, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<187>;
	.reg .f32 	%f<231>;
	.reg .b64 	%rd<55>;
	.loc	1 192 0                         // tutorial_profile.py:192:0
$L__func_begin0:
	.loc	1 192 0                         // tutorial_profile.py:192:0

// %bb.0:
	ld.param.u64 	%rd17, [matmul_kernel_profile_param_9];
	ld.param.u32 	%r34, [matmul_kernel_profile_param_8];
	ld.param.u32 	%r33, [matmul_kernel_profile_param_5];
	ld.param.u32 	%r32, [matmul_kernel_profile_param_4];
	ld.param.u32 	%r31, [matmul_kernel_profile_param_3];
	ld.param.u64 	%rd16, [matmul_kernel_profile_param_2];
	ld.param.u64 	%rd15, [matmul_kernel_profile_param_1];
	ld.param.u64 	%rd14, [matmul_kernel_profile_param_0];
$L__tmp0:
	.loc	1 10 5                          // tutorial_profile.py:10:5
	// begin inline asm
	mov.u32 %r35, %clock;
	// end inline asm
	.loc	1 225 24                        // tutorial_profile.py:225:24
	// begin inline asm
	mov.u32 %r36, %ctaid.x;
	// end inline asm
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r45, %r31, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r46, %r45, 31;
	shr.u32 	%r47, %r46, 25;
	add.s32 	%r48, %r45, %r47;
	shr.s32 	%r49, %r48, 7;
$L__tmp2:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r50, %r32, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r51, %r50, 31;
	shr.u32 	%r52, %r51, 25;
	add.s32 	%r53, %r50, %r52;
	shr.s32 	%r54, %r53, 7;
	ld.param.u32 	%r56, [matmul_kernel_profile_param_6];
$L__tmp3:
	.loc	1 228 38                        // tutorial_profile.py:228:38
	shl.b32 	%r57, %r54, 3;
	ld.param.u32 	%r58, [matmul_kernel_profile_param_7];
	.loc	1 229 22                        // tutorial_profile.py:229:22
	div.s32 	%r59, %r36, %r57;
	.loc	1 230 29                        // tutorial_profile.py:230:29
	shl.b32 	%r60, %r59, 3;
	.loc	1 231 35                        // tutorial_profile.py:231:35
	sub.s32 	%r61, %r49, %r60;
	.loc	1 231 48                        // tutorial_profile.py:231:48
	min.s32 	%r63, %r61, 8;
	.loc	1 232 34                        // tutorial_profile.py:232:34
	mul.lo.s32 	%r64, %r59, %r57;
	sub.s32 	%r65, %r36, %r64;
	.loc	1 233 40                        // tutorial_profile.py:233:40
	div.s32 	%r66, %r65, %r63;
	.loc	1 232 54                        // tutorial_profile.py:232:54
	mul.lo.s32 	%r67, %r66, %r63;
	sub.s32 	%r68, %r65, %r67;
	.loc	1 232 27                        // tutorial_profile.py:232:27
	add.s32 	%r69, %r68, %r60;
	.loc	1 242 23                        // tutorial_profile.py:242:23
	shl.b32 	%r70, %r69, 7;
	.loc	1 242 51                        // tutorial_profile.py:242:51
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 31;
	shr.u32 	%r5, %r3, 5;
	shr.u32 	%r6, %r3, 3;
	bfe.u32 	%r71, %r3, 3, 7;
	bfe.u32 	%r72, %r3, 4, 6;
	shl.b32 	%r7, %r3, 3;
	and.b32  	%r8, %r7, 56;
	and.b32  	%r9, %r7, 120;
	.loc	1 242 38                        // tutorial_profile.py:242:38
	or.b32  	%r73, %r70, %r71;
	or.b32  	%r10, %r70, %r72;
	or.b32  	%r11, %r10, 64;
	.loc	1 242 68                        // tutorial_profile.py:242:68
	rem.s32 	%r74, %r73, %r31;
	.loc	1 243 23                        // tutorial_profile.py:243:23
	shl.b32 	%r75, %r66, 7;
	.loc	1 243 38                        // tutorial_profile.py:243:38
	or.b32  	%r76, %r75, %r71;
	or.b32  	%r12, %r75, %r9;
	.loc	1 243 68                        // tutorial_profile.py:243:68
	rem.s32 	%r77, %r76, %r32;
	.loc	1 245 53                        // tutorial_profile.py:245:53
	mad.lo.s32 	%r78, %r74, %r56, %r8;
	.loc	1 245 22                        // tutorial_profile.py:245:22
	cvt.s64.s32 	%rd1, %r78;
	add.s64 	%rd18, %rd14, %rd1;
	.loc	1 246 52                        // tutorial_profile.py:246:52
	mad.lo.s32 	%r79, %r77, %r58, %r8;
	.loc	1 246 22                        // tutorial_profile.py:246:22
	cvt.s64.s32 	%rd2, %r79;
	add.s64 	%rd19, %rd15, %rd2;
$L__tmp4:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r80, %r33, 63;
$L__tmp5:
	.loc	1 254 22                        // tutorial_profile.py:254:22
	setp.lt.s32 	%p5, %r80, 64;
	setp.gt.s32 	%p6, %r80, 63;
	.loc	1 257 51                        // tutorial_profile.py:257:51
	setp.lt.s32 	%p7, %r8, %r33;
	.loc	1 257 20                        // tutorial_profile.py:257:20
	and.b32  	%r84, %r3, 48;
	xor.b32  	%r85, %r8, %r84;
	shl.b32 	%r86, %r71, 6;
	or.b32  	%r87, %r85, %r86;
	mov.u32 	%r88, global_smem;
	add.s32 	%r89, %r88, %r87;
	add.s32 	%r37, %r89, 8192;
	selp.b32 	%r90, 8, 0, %p6;
	selp.b32 	%r40, %r90, 0, %p7;
	mov.pred 	%p1, -1;
	// begin inline asm
	@%p1 cp.async.ca.shared.global [ %r37 + 0 ], [ %rd18 + 0 ], 0x8, %r40;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 258 20                        // tutorial_profile.py:258:20
	add.s32 	%r39, %r89, 32768;
	// begin inline asm
	@%p1 cp.async.ca.shared.global [ %r39 + 0 ], [ %rd19 + 0 ], 0x8, %r40;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 254 22                        // tutorial_profile.py:254:22
	setp.gt.s32 	%p8, %r80, 127;
	.loc	1 262 18                        // tutorial_profile.py:262:18
	add.s64 	%rd20, %rd18, 64;
	.loc	1 263 18                        // tutorial_profile.py:263:18
	add.s64 	%rd21, %rd19, 64;
	.loc	1 257 55                        // tutorial_profile.py:257:55
	add.s32 	%r91, %r33, -64;
	.loc	1 257 51                        // tutorial_profile.py:257:51
	setp.lt.s32 	%p9, %r8, %r91;
	.loc	1 257 20                        // tutorial_profile.py:257:20
	bar.sync 	0;
	add.s32 	%r41, %r89, 16384;
	selp.b32 	%r92, 8, 0, %p9;
	selp.b32 	%r44, %r92, 0, %p8;
	// begin inline asm
	@%p1 cp.async.ca.shared.global [ %r41 + 0 ], [ %rd20 + 0 ], 0x8, %r44;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 258 20                        // tutorial_profile.py:258:20
	add.s32 	%r43, %r89, 40960;
	// begin inline asm
	@%p1 cp.async.ca.shared.global [ %r43 + 0 ], [ %rd21 + 0 ], 0x8, %r44;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	mov.f32 	%f199, 0f00000000;
	mov.b32 	%r181, 0;
	mov.f32 	%f200, %f199;
	mov.f32 	%f201, %f199;
	mov.f32 	%f202, %f199;
	mov.f32 	%f203, %f199;
	mov.f32 	%f204, %f199;
	mov.f32 	%f205, %f199;
	mov.f32 	%f206, %f199;
	mov.f32 	%f207, %f199;
	mov.f32 	%f208, %f199;
	mov.f32 	%f209, %f199;
	mov.f32 	%f210, %f199;
	mov.f32 	%f211, %f199;
	mov.f32 	%f212, %f199;
	mov.f32 	%f213, %f199;
	mov.f32 	%f214, %f199;
	.loc	1 254 22                        // tutorial_profile.py:254:22
	@%p5 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph
	.loc	1 0 22                          // tutorial_profile.py:0:22
	shr.s32 	%r81, %r80, 31;
	shr.u32 	%r82, %r81, 26;
	add.s32 	%r83, %r80, %r82;
	shr.s32 	%r13, %r83, 6;
	add.s32 	%r16, %r13, -2;
	and.b32  	%r17, %r5, 134217724;
	shr.u32 	%r96, %r7, 4;
	and.b32  	%r97, %r96, 384;
	cvt.u64.u32 	%rd22, %r97;
	or.b64  	%rd3, %rd22, -9223371899382267904;
	or.b64  	%rd4, %rd22, -9223371899382267902;
	add.s32 	%r182, %r33, -128;
	.loc	1 254 22                        // tutorial_profile.py:254:22
	add.s64 	%rd23, %rd2, %rd15;
	add.s64 	%rd53, %rd23, 128;
	add.s64 	%rd24, %rd1, %rd14;
	add.s64 	%rd52, %rd24, 128;
	mov.f32 	%f160, 0f00000000;
	mov.b32 	%r184, 1;
	mov.b32 	%r183, -1;
	mov.f32 	%f159, 0f00000001;
	mov.f32 	%f158, 0f00000040;
	mov.f32 	%f199, %f160;
	mov.f32 	%f200, %f160;
	mov.f32 	%f201, %f160;
	mov.f32 	%f202, %f160;
	mov.f32 	%f203, %f160;
	mov.f32 	%f204, %f160;
	mov.f32 	%f205, %f160;
	mov.f32 	%f206, %f160;
	mov.f32 	%f207, %f160;
	mov.f32 	%f208, %f160;
	mov.f32 	%f209, %f160;
	mov.f32 	%f210, %f160;
	mov.f32 	%f211, %f160;
	mov.f32 	%f212, %f160;
	mov.f32 	%f213, %f160;
	mov.f32 	%f214, %f160;
	mov.u32 	%r185, %r181;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	setp.lt.s32 	%p14, %r185, %r16;
	add.s32 	%r102, %r183, 1;
	setp.lt.s32 	%p15, %r102, 3;
	selp.b32 	%r183, %r102, 0, %p15;
	.loc	1 257 20                        // tutorial_profile.py:257:20
	shl.b32 	%r103, %r183, 13;
	add.s32 	%r105, %r88, %r103;
	add.s32 	%r106, %r105, 8192;
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	.loc	1 258 20                        // tutorial_profile.py:258:20
	add.s32 	%r107, %r105, 32768;
	.loc	1 260 35                        // tutorial_profile.py:260:35
	shfl.sync.idx.b32	%r108, %r17, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r109, %r108, 6;
	and.b32  	%r110, %r109, 448;
	cvt.u64.u32 	%rd31, %r110;
	shr.u32 	%r111, %r106, 4;
	cvt.u64.u32 	%rd32, %r111;
	and.b64  	%rd33, %rd32, 16383;
	add.s64 	%rd34, %rd33, %rd31;
	or.b64  	%rd25, %rd34, -9223371899382267904;
	shr.u32 	%r112, %r107, 4;
	cvt.u64.u32 	%rd35, %r112;
	and.b64  	%rd36, %rd35, 16383;
	add.s64 	%rd26, %rd3, %rd36;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k32.f32.e4m3.e4m3 {%f199,%f200,%f201,%f202,%f203,%f204,%f205,%f206,%f207,%f208,%f209,%f210,%f211,%f212,%f213,%f214}, %rd25, %rd26, %p1, 1, 1;
	// end inline asm
	add.s64 	%rd27, %rd34, -9223371899382267902;
	add.s64 	%rd28, %rd4, %rd36;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k32.f32.e4m3.e4m3 {%f199,%f200,%f201,%f202,%f203,%f204,%f205,%f206,%f207,%f208,%f209,%f210,%f211,%f212,%f213,%f214}, %rd27, %rd28, %p1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%f131, %r106;
	mov.b32 	%f136, %r107;
	mov.f32 	%f140, %f160;
	mov.f32 	%f137, %f159;
	mov.f32 	%f132, %f158;
	mov.f32 	%f134, %f160;
	mov.f32 	%f135, %f160;
	mov.f32 	%f139, %f160;
	mov.f32 	%f138, %f158;
	mov.f32 	%f133, %f159;
	// begin inline asm
	// wait for regs: %f199,%f200,%f201,%f202,%f203,%f204,%f205,%f206,%f207,%f208,%f209,%f210,%f211,%f212,%f213,%f214,%f131,%f132,%f133,%f134,%f135,%f136,%f137,%f138,%f139,%f140
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 254 22                        // tutorial_profile.py:254:22
	add.s32 	%r113, %r184, 1;
	setp.lt.s32 	%p16, %r113, 3;
	selp.b32 	%r184, %r113, 0, %p16;
	.loc	1 257 51                        // tutorial_profile.py:257:51
	setp.lt.s32 	%p17, %r8, %r182;
	.loc	1 257 20                        // tutorial_profile.py:257:20
	shl.b32 	%r114, %r184, 13;
	bar.sync 	0;
	add.s32 	%r98, %r37, %r114;
	selp.b32 	%r115, 8, 0, %p17;
	selp.b32 	%r101, %r115, 0, %p14;
	// begin inline asm
	@%p1 cp.async.ca.shared.global [ %r98 + 0 ], [ %rd52 + 0 ], 0x8, %r101;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 258 20                        // tutorial_profile.py:258:20
	add.s32 	%r100, %r39, %r114;
	// begin inline asm
	@%p1 cp.async.ca.shared.global [ %r100 + 0 ], [ %rd53 + 0 ], 0x8, %r101;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 254 22                        // tutorial_profile.py:254:22
	add.s32 	%r185, %r185, 1;
	add.s64 	%rd53, %rd53, 64;
	add.s64 	%rd52, %rd52, 64;
	add.s32 	%r182, %r182, -64;
	setp.ne.s32 	%p18, %r13, %r185;
	@%p18 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	// begin inline asm
	// wait for regs: %f199,%f200,%f201,%f202,%f203,%f204,%f205,%f206,%f207,%f208,%f209,%f210,%f211,%f212,%f213,%f214
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	.loc	1 268 23                        // tutorial_profile.py:268:23
	cvt.rn.f16.f32 	%rs1, %f200;
	cvt.rn.f16.f32 	%rs2, %f199;
	mov.b32 	%r134, {%rs2, %rs1};
	cvt.rn.f16.f32 	%rs3, %f202;
	cvt.rn.f16.f32 	%rs4, %f201;
	mov.b32 	%r135, {%rs4, %rs3};
	cvt.rn.f16.f32 	%rs5, %f204;
	cvt.rn.f16.f32 	%rs6, %f203;
	mov.b32 	%r136, {%rs6, %rs5};
	cvt.rn.f16.f32 	%rs7, %f206;
	cvt.rn.f16.f32 	%rs8, %f205;
	mov.b32 	%r137, {%rs8, %rs7};
	cvt.rn.f16.f32 	%rs9, %f208;
	cvt.rn.f16.f32 	%rs10, %f207;
	mov.b32 	%r138, {%rs10, %rs9};
	cvt.rn.f16.f32 	%rs11, %f210;
	cvt.rn.f16.f32 	%rs12, %f209;
	mov.b32 	%r139, {%rs12, %rs11};
	cvt.rn.f16.f32 	%rs13, %f212;
	cvt.rn.f16.f32 	%rs14, %f211;
	mov.b32 	%r140, {%rs14, %rs13};
	cvt.rn.f16.f32 	%rs15, %f214;
	cvt.rn.f16.f32 	%rs16, %f213;
	mov.b32 	%r141, {%rs16, %rs15};
	.loc	1 274 33                        // tutorial_profile.py:274:33
	mul.lo.s32 	%r142, %r10, %r34;
	shl.b32 	%r143, %r34, 6;
	add.s32 	%r144, %r142, %r143;
	.loc	1 274 21                        // tutorial_profile.py:274:21
	mul.wide.s32 	%rd39, %r142, 2;
	add.s64 	%rd40, %rd16, %rd39;
	mul.wide.s32 	%rd41, %r144, 2;
	add.s64 	%rd42, %rd16, %rd41;
	.loc	1 274 52                        // tutorial_profile.py:274:52
	mul.wide.s32 	%rd43, %r12, 2;
	add.s64 	%rd37, %rd40, %rd43;
	add.s64 	%rd38, %rd42, %rd43;
	.loc	1 275 33                        // tutorial_profile.py:275:33
	setp.lt.s32 	%p23, %r10, %r31;
	setp.lt.s32 	%p24, %r11, %r31;
	.loc	1 275 58                        // tutorial_profile.py:275:58
	setp.lt.s32 	%p25, %r12, %r32;
	.loc	1 275 39                        // tutorial_profile.py:275:39
	and.pred  	%p19, %p23, %p25;
	and.pred  	%p20, %p24, %p25;
	.loc	1 276 21                        // tutorial_profile.py:276:21
	shr.u32 	%r145, %r4, 2;
	shl.b32 	%r146, %r3, 1;
	and.b32  	%r147, %r146, 6;
	shl.b32 	%r148, %r5, 4;
	and.b32  	%r149, %r148, 112;
	or.b32  	%r150, %r149, %r145;
	and.b32  	%r151, %r6, 96;
	or.b32  	%r152, %r147, %r151;
	mad.lo.s32 	%r153, %r150, 136, %r152;
	shl.b32 	%r154, %r153, 1;
	add.s32 	%r156, %r88, 8192;
	add.s32 	%r157, %r156, %r154;
	st.shared.b32 	[%r157], %r134;
	st.shared.b32 	[%r157+2176], %r135;
	st.shared.b32 	[%r157+16], %r136;
	st.shared.b32 	[%r157+2192], %r137;
	st.shared.b32 	[%r157+32], %r138;
	st.shared.b32 	[%r157+2208], %r139;
	st.shared.b32 	[%r157+48], %r140;
	st.shared.b32 	[%r157+2224], %r141;
	bar.sync 	0;
	shr.u32 	%r158, %r4, 4;
	shl.b32 	%r159, %r5, 1;
	and.b32  	%r160, %r159, 62;
	or.b32  	%r161, %r160, %r158;
	mad.lo.s32 	%r162, %r161, 136, %r9;
	shl.b32 	%r163, %r162, 1;
	add.s32 	%r164, %r156, %r163;
	ld.shared.v4.u32 	{%r120, %r121, %r122, %r123}, [%r164+17408];
	ld.shared.v4.u32 	{%r116, %r117, %r118, %r119}, [%r164];
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd37 + 0 ], { %r116, %r117, %r118, %r119 };
	// end inline asm
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd38 + 0 ], { %r120, %r121, %r122, %r123 };
	// end inline asm
	.loc	1 181 5                         // tutorial_profile.py:181:5
	// begin inline asm
	mov.u32 %r124, %clock;
	// end inline asm
	.loc	1 10 5                          // tutorial_profile.py:10:5
	and.b32  	%r165, %r3, 127;
	setp.eq.s32 	%p21, %r165, 0;
	and.b32  	%r167, %r7, -1024;
	add.s32 	%r125, %r88, %r167;
	// begin inline asm
	@%p21 st.shared.v2.b32 [ %r125 + 0 ], { %r181, %r35 };
	// end inline asm
	.loc	1 181 5                         // tutorial_profile.py:181:5
	add.s32 	%r128, %r125, 8;
	mov.b32 	%r129, -2147483648;
	// begin inline asm
	@%p21 st.shared.v2.b32 [ %r128 + 0 ], { %r129, %r124 };
	// end inline asm
	.loc	1 192 0                         // tutorial_profile.py:192:0
	bar.sync 	0;
	setp.ne.s32 	%p26, %r3, 0;
	// begin inline asm
	mov.u32 %r131, %ctaid.y;
	// end inline asm
	// begin inline asm
	mov.u32 %r132, %ctaid.z;
	// end inline asm
	// begin inline asm
	mov.u32 %r133, %smid;
	// end inline asm
	mov.u32 	%r168, %nctaid.x;
	mov.u32 	%r169, %nctaid.y;
	mad.lo.s32 	%r170, %r132, %r169, %r131;
	mad.lo.s32 	%r27, %r170, %r168, %r36;
	mul.lo.s32 	%r28, %r27, 2114;
	add.s32 	%r171, %r159, %r28;
	add.s32 	%r172, %r171, 2;
	mul.wide.s32 	%rd44, %r172, 4;
	add.s64 	%rd45, %rd17, %rd44;
	st.global.u32 	[%rd45], %r133;
	mov.b32 	%r173, 4;
	st.global.u32 	[%rd45+4], %r173;
	@%p26 bra 	$L__BB0_6;
// %bb.4:
	mul.wide.s32 	%rd47, %r28, 4;
	add.s64 	%rd48, %rd17, %rd47;
	mov.b32 	%r175, -559038737;
	st.global.u32 	[%rd48], %r175;
	st.global.u32 	[%rd48+4], %r27;
	add.s32 	%r186, %r88, 4;
	cvt.u64.u32 	%rd11, %r28;
	mov.u64 	%rd54, -2;
$L__BB0_5:                              // =>This Inner Loop Header: Depth=1
	add.s64 	%rd49, %rd11, %rd54;
	ld.shared.v2.u32 	{%r177, %r178}, [%r186+-4];
	cvt.u32.u64 	%r179, %rd49;
	add.s32 	%r180, %r179, 68;
	mul.wide.s32 	%rd50, %r180, 4;
	add.s64 	%rd51, %rd17, %rd50;
	st.global.u32 	[%rd51], %r177;
	st.global.u32 	[%rd51+4], %r178;
	add.s64 	%rd54, %rd54, 2;
	add.s32 	%r186, %r186, 8;
	setp.lt.u64 	%p27, %rd54, 2046;
	@%p27 bra 	$L__BB0_5;
$L__BB0_6:                              // %.loopexit
	.loc	1 276 4                         // tutorial_profile.py:276:4
	ret;
$L__tmp6:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/srir/tritonbench/tritonbench/operators/fp8_gemm/tutorial_profile.py"
	.file	2 "/home/srir/triton/python/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 116                                 // DW_AT_name
.b8 117
.b8 116
.b8 111
.b8 114
.b8 105
.b8 97
.b8 108
.b8 95
.b8 112
.b8 114
.b8 111
.b8 102
.b8 105
.b8 108
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 115
.b8 114
.b8 105
.b8 114
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 47
.b8 111
.b8 112
.b8 101
.b8 114
.b8 97
.b8 116
.b8 111
.b8 114
.b8 115
.b8 47
.b8 102
.b8 112
.b8 56
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x18 DW_TAG_subprogram
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 95
.b8 112
.b8 114
.b8 111
.b8 102
.b8 105
.b8 108
.b8 101
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7b:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x90:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 226                                 // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xa8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 227                                 // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 254                                 // DW_AT_call_line
.b8 33                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
