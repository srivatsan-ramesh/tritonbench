; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @matmul_kernel_profile(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, ptr addrspace(1) nocapture writeonly %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm sideeffect "mov.u32 $0, %clock;", "=r"() #3, !dbg !10
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !11
  %13 = add i32 %3, 127, !dbg !12
  %14 = sdiv i32 %13, 128, !dbg !16
  %15 = add i32 %4, 255, !dbg !17
  %16 = sdiv i32 %15, 256, !dbg !19
  %17 = shl nsw i32 %16, 3, !dbg !20
  %.frozen = freeze i32 %12, !dbg !21
  %.frozen186 = freeze i32 %17, !dbg !21
  %18 = sdiv i32 %.frozen, %.frozen186, !dbg !21
  %19 = shl i32 %18, 3, !dbg !22
  %20 = sub i32 %14, %19, !dbg !23
  %21 = tail call i32 @llvm.smin.i32(i32 %20, i32 8), !dbg !24
  %22 = mul i32 %18, %.frozen186, !dbg !25
  %.decomposed = sub i32 %.frozen, %22, !dbg !25
  %.frozen187 = freeze i32 %21, !dbg !26
  %23 = sdiv i32 %.decomposed, %.frozen187, !dbg !26
  %24 = mul i32 %23, %.frozen187, !dbg !27
  %.decomposed188 = sub i32 %.decomposed, %24, !dbg !27
  %25 = add i32 %.decomposed188, %19, !dbg !28
  %26 = shl i32 %25, 7, !dbg !29
  %27 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !30
  %28 = and i32 %27, 31, !dbg !30
  %29 = lshr i32 %27, 5, !dbg !30
  %30 = lshr i32 %27, 3, !dbg !30
  %31 = and i32 %30, 127, !dbg !30
  %32 = and i32 %29, 31, !dbg !30
  %33 = or disjoint i32 %26, %31, !dbg !31
  %34 = or disjoint i32 %26, %32, !dbg !31
  %35 = or disjoint i32 %34, 32, !dbg !31
  %36 = or disjoint i32 %34, 64, !dbg !31
  %37 = or disjoint i32 %34, 96, !dbg !31
  %38 = srem i32 %33, %3, !dbg !32
  %39 = shl i32 %23, 8, !dbg !33
  %40 = lshr i32 %27, 2, !dbg !34
  %41 = and i32 %40, 255, !dbg !34
  %42 = shl i32 %27, 3, !dbg !34
  %43 = and i32 %42, 56, !dbg !34
  %44 = and i32 %42, 248, !dbg !34
  %45 = or disjoint i32 %39, %41, !dbg !35
  %46 = or disjoint i32 %39, %44, !dbg !35
  %47 = srem i32 %45, %4, !dbg !36
  %48 = mul i32 %38, %6, !dbg !37
  %49 = add i32 %48, %43, !dbg !38
  %50 = sext i32 %49 to i64, !dbg !39
  %51 = getelementptr i8, ptr addrspace(1) %0, i64 %50, !dbg !39
  %52 = shl i32 %27, 4, !dbg !40
  %53 = and i32 %52, 48, !dbg !40
  %54 = mul i32 %47, %7, !dbg !41
  %55 = add i32 %54, %53, !dbg !42
  %56 = sext i32 %55 to i64, !dbg !43
  %57 = getelementptr i8, ptr addrspace(1) %1, i64 %56, !dbg !43
  %58 = add i32 %5, 63, !dbg !44
  %59 = sdiv i32 %58, 64, !dbg !46
  %60 = icmp sgt i32 %58, 63, !dbg !47
  %61 = icmp slt i32 %43, %5, !dbg !48
  %62 = and i1 %61, %60, !dbg !47
  %63 = and i32 %27, 48, !dbg !49
  %64 = xor i32 %43, %63, !dbg !49
  %65 = shl nuw nsw i32 %31, 6, !dbg !49
  %66 = or disjoint i32 %64, %65, !dbg !49
  %67 = zext nneg i32 %66 to i64, !dbg !49
  %68 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %67, !dbg !49
  %69 = select i1 %62, i32 8, i32 0, !dbg !49
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %68, ptr addrspace(1) %51, i32 %69, i1 true) #3, !dbg !49
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !49
  %70 = icmp slt i32 %53, %5, !dbg !50
  %71 = and i1 %70, %60, !dbg !47
  %72 = shl i32 %27, 1, !dbg !51
  %73 = xor i32 %72, %52, !dbg !51
  %74 = and i32 %73, 48, !dbg !51
  %75 = shl nuw nsw i32 %41, 6, !dbg !51
  %76 = or disjoint i32 %74, %75, !dbg !51
  %77 = zext nneg i32 %76 to i64, !dbg !51
  %78 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 26624), i64 %77, !dbg !51
  %79 = select i1 %71, i32 16, i32 0, !dbg !51
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %78, ptr addrspace(1) %57, i32 %79, i1 true) #3, !dbg !51
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !51
  %80 = icmp sgt i32 %58, 127, !dbg !47
  %81 = getelementptr i8, ptr addrspace(1) %51, i64 64, !dbg !52
  %82 = getelementptr i8, ptr addrspace(1) %57, i64 64, !dbg !53
  %83 = add i32 %5, -64, !dbg !54
  %84 = icmp slt i32 %43, %83, !dbg !48
  %85 = and i1 %80, %84, !dbg !47
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %86 = getelementptr inbounds i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 10240), i64 %67, !dbg !49
  %87 = select i1 %85, i32 8, i32 0, !dbg !49
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %86, ptr addrspace(1) %81, i32 %87, i1 true) #3, !dbg !49
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !49
  %88 = icmp slt i32 %53, %83, !dbg !50
  %89 = and i1 %80, %88, !dbg !47
  %90 = getelementptr inbounds i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 43008), i64 %77, !dbg !51
  %91 = select i1 %89, i32 16, i32 0, !dbg !51
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %90, ptr addrspace(1) %82, i32 %91, i1 true) #3, !dbg !51
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !51
  br i1 %60, label %.lr.ph, label %._crit_edge, !dbg !47

.lr.ph:                                           ; preds = %10
  %92 = add nsw i32 %59, -2
  %93 = and i32 %29, 134217724
  %94 = and i32 %27, 768
  %95 = zext nneg i32 %94 to i64
  %96 = or disjoint i64 %95, -9223371899348713472
  %97 = or disjoint i64 %95, -9223371899348713470
  %.neg86 = add nsw i32 %5, -128
  br label %98, !dbg !47

98:                                               ; preds = %.lr.ph, %98
  %99 = phi i32 [ -1, %.lr.ph ], [ %137, %98 ]
  %100 = phi i32 [ 1, %.lr.ph ], [ %263, %98 ]
  %.pn5590 = phi ptr addrspace(1) [ %82, %.lr.ph ], [ %260, %98 ]
  %.pn2389 = phi ptr addrspace(1) [ %81, %.lr.ph ], [ %259, %98 ]
  %101 = phi float [ 0.000000e+00, %.lr.ph ], [ %227, %98 ]
  %102 = phi float [ 0.000000e+00, %.lr.ph ], [ %228, %98 ]
  %103 = phi float [ 0.000000e+00, %.lr.ph ], [ %229, %98 ]
  %104 = phi float [ 0.000000e+00, %.lr.ph ], [ %230, %98 ]
  %105 = phi float [ 0.000000e+00, %.lr.ph ], [ %231, %98 ]
  %106 = phi float [ 0.000000e+00, %.lr.ph ], [ %232, %98 ]
  %107 = phi float [ 0.000000e+00, %.lr.ph ], [ %233, %98 ]
  %108 = phi float [ 0.000000e+00, %.lr.ph ], [ %234, %98 ]
  %109 = phi float [ 0.000000e+00, %.lr.ph ], [ %235, %98 ]
  %110 = phi float [ 0.000000e+00, %.lr.ph ], [ %236, %98 ]
  %111 = phi float [ 0.000000e+00, %.lr.ph ], [ %237, %98 ]
  %112 = phi float [ 0.000000e+00, %.lr.ph ], [ %238, %98 ]
  %113 = phi float [ 0.000000e+00, %.lr.ph ], [ %239, %98 ]
  %114 = phi float [ 0.000000e+00, %.lr.ph ], [ %240, %98 ]
  %115 = phi float [ 0.000000e+00, %.lr.ph ], [ %241, %98 ]
  %116 = phi float [ 0.000000e+00, %.lr.ph ], [ %242, %98 ]
  %117 = phi float [ 0.000000e+00, %.lr.ph ], [ %243, %98 ]
  %118 = phi float [ 0.000000e+00, %.lr.ph ], [ %244, %98 ]
  %119 = phi float [ 0.000000e+00, %.lr.ph ], [ %245, %98 ]
  %120 = phi float [ 0.000000e+00, %.lr.ph ], [ %246, %98 ]
  %121 = phi float [ 0.000000e+00, %.lr.ph ], [ %247, %98 ]
  %122 = phi float [ 0.000000e+00, %.lr.ph ], [ %248, %98 ]
  %123 = phi float [ 0.000000e+00, %.lr.ph ], [ %249, %98 ]
  %124 = phi float [ 0.000000e+00, %.lr.ph ], [ %250, %98 ]
  %125 = phi float [ 0.000000e+00, %.lr.ph ], [ %251, %98 ]
  %126 = phi float [ 0.000000e+00, %.lr.ph ], [ %252, %98 ]
  %127 = phi float [ 0.000000e+00, %.lr.ph ], [ %253, %98 ]
  %128 = phi float [ 0.000000e+00, %.lr.ph ], [ %254, %98 ]
  %129 = phi float [ 0.000000e+00, %.lr.ph ], [ %255, %98 ]
  %130 = phi float [ 0.000000e+00, %.lr.ph ], [ %256, %98 ]
  %131 = phi float [ 0.000000e+00, %.lr.ph ], [ %257, %98 ]
  %132 = phi float [ 0.000000e+00, %.lr.ph ], [ %258, %98 ]
  %133 = phi i32 [ 0, %.lr.ph ], [ %276, %98 ]
  %134 = icmp slt i32 %133, %92, !dbg !47
  %135 = add i32 %99, 1, !dbg !47
  %136 = icmp slt i32 %135, 3, !dbg !47
  %137 = select i1 %136, i32 %135, i32 0, !dbg !47
  %138 = shl i32 %137, 13, !dbg !49
  %139 = sext i32 %138 to i64, !dbg !49
  %140 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %139, !dbg !49
  tail call void asm sideeffect "cp.async.wait_group 0x2;", ""() #3, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %141 = shl i32 %137, 14, !dbg !51
  %142 = sext i32 %141 to i64, !dbg !51
  %143 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 26624), i64 %142, !dbg !51
  %144 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %93, i32 0, i32 31), !dbg !55
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #3, !dbg !55
  %145 = shl i32 %144, 6, !dbg !55
  %146 = and i32 %145, 448, !dbg !55
  %147 = zext nneg i32 %146 to i64, !dbg !55
  %148 = ptrtoint ptr addrspace(3) %140 to i64, !dbg !55
  %149 = lshr exact i64 %148, 4, !dbg !55
  %150 = and i64 %149, 16383, !dbg !55
  %151 = or disjoint i64 %150, -9223371899382267904, !dbg !55
  %152 = add nuw nsw i64 %151, %147, !dbg !55
  %153 = ptrtoint ptr addrspace(3) %143 to i64, !dbg !55
  %154 = lshr exact i64 %153, 4, !dbg !55
  %155 = and i64 %154, 16383, !dbg !55
  %156 = add nuw nsw i64 %96, %155, !dbg !55
  %157 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k32.f32.e4m3.e4m3 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %101, float %102, float %103, float %104, float %105, float %106, float %107, float %108, float %109, float %110, float %111, float %112, float %113, float %114, float %115, float %116, float %117, float %118, float %119, float %120, float %121, float %122, float %123, float %124, float %125, float %126, float %127, float %128, float %129, float %130, float %131, float %132, i64 %152, i64 %156, i1 true) #3, !dbg !55
  %158 = add nuw nsw i64 %150, -9223371899382267902, !dbg !55
  %159 = add nuw nsw i64 %158, %147, !dbg !55
  %160 = add nuw nsw i64 %97, %155, !dbg !55
  %161 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 0, !dbg !55
  %162 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 1, !dbg !55
  %163 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 2, !dbg !55
  %164 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 3, !dbg !55
  %165 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 4, !dbg !55
  %166 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 5, !dbg !55
  %167 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 6, !dbg !55
  %168 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 7, !dbg !55
  %169 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 8, !dbg !55
  %170 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 9, !dbg !55
  %171 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 10, !dbg !55
  %172 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 11, !dbg !55
  %173 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 12, !dbg !55
  %174 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 13, !dbg !55
  %175 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 14, !dbg !55
  %176 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 15, !dbg !55
  %177 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 16, !dbg !55
  %178 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 17, !dbg !55
  %179 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 18, !dbg !55
  %180 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 19, !dbg !55
  %181 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 20, !dbg !55
  %182 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 21, !dbg !55
  %183 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 22, !dbg !55
  %184 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 23, !dbg !55
  %185 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 24, !dbg !55
  %186 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 25, !dbg !55
  %187 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 26, !dbg !55
  %188 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 27, !dbg !55
  %189 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 28, !dbg !55
  %190 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 29, !dbg !55
  %191 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 30, !dbg !55
  %192 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %157, 31, !dbg !55
  %193 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k32.f32.e4m3.e4m3 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %161, float %162, float %163, float %164, float %165, float %166, float %167, float %168, float %169, float %170, float %171, float %172, float %173, float %174, float %175, float %176, float %177, float %178, float %179, float %180, float %181, float %182, float %183, float %184, float %185, float %186, float %187, float %188, float %189, float %190, float %191, float %192, i64 %159, i64 %160, i1 true) #3, !dbg !55
  %194 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 0, !dbg !55
  %195 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 1, !dbg !55
  %196 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 2, !dbg !55
  %197 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 3, !dbg !55
  %198 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 4, !dbg !55
  %199 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 5, !dbg !55
  %200 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 6, !dbg !55
  %201 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 7, !dbg !55
  %202 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 8, !dbg !55
  %203 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 9, !dbg !55
  %204 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 10, !dbg !55
  %205 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 11, !dbg !55
  %206 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 12, !dbg !55
  %207 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 13, !dbg !55
  %208 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 14, !dbg !55
  %209 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 15, !dbg !55
  %210 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 16, !dbg !55
  %211 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 17, !dbg !55
  %212 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 18, !dbg !55
  %213 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 19, !dbg !55
  %214 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 20, !dbg !55
  %215 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 21, !dbg !55
  %216 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 22, !dbg !55
  %217 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 23, !dbg !55
  %218 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 24, !dbg !55
  %219 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 25, !dbg !55
  %220 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 26, !dbg !55
  %221 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 27, !dbg !55
  %222 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 28, !dbg !55
  %223 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 29, !dbg !55
  %224 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 30, !dbg !55
  %225 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %193, 31, !dbg !55
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #3, !dbg !55
  %226 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41\0A\09wgmma.wait_group.sync.aligned 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41"(float %194, float %195, float %196, float %197, float %198, float %199, float %200, float %201, float %202, float %203, float %204, float %205, float %206, float %207, float %208, float %209, float %210, float %211, float %212, float %213, float %214, float %215, float %216, float %217, float %218, float %219, float %220, float %221, float %222, float %223, float %224, float %225, ptr addrspace(3) %140, i32 64, i32 1, i32 0, i32 0, ptr addrspace(3) %143, i32 1, i32 64, i32 0, i32 0) #3, !dbg !55
  %227 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 0, !dbg !55
  %228 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 1, !dbg !55
  %229 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 2, !dbg !55
  %230 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 3, !dbg !55
  %231 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 4, !dbg !55
  %232 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 5, !dbg !55
  %233 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 6, !dbg !55
  %234 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 7, !dbg !55
  %235 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 8, !dbg !55
  %236 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 9, !dbg !55
  %237 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 10, !dbg !55
  %238 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 11, !dbg !55
  %239 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 12, !dbg !55
  %240 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 13, !dbg !55
  %241 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 14, !dbg !55
  %242 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 15, !dbg !55
  %243 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 16, !dbg !55
  %244 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 17, !dbg !55
  %245 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 18, !dbg !55
  %246 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 19, !dbg !55
  %247 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 20, !dbg !55
  %248 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 21, !dbg !55
  %249 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 22, !dbg !55
  %250 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 23, !dbg !55
  %251 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 24, !dbg !55
  %252 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 25, !dbg !55
  %253 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 26, !dbg !55
  %254 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 27, !dbg !55
  %255 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 28, !dbg !55
  %256 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 29, !dbg !55
  %257 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 30, !dbg !55
  %258 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, i32, i32, ptr addrspace(3), i32, i32, i32, i32 } %226, 31, !dbg !55
  %259 = getelementptr i8, ptr addrspace(1) %.pn2389, i64 64, !dbg !52
  %260 = getelementptr i8, ptr addrspace(1) %.pn5590, i64 64, !dbg !53
  %261 = add i32 %100, 1, !dbg !47
  %262 = icmp slt i32 %261, 3, !dbg !47
  %263 = select i1 %262, i32 %261, i32 0, !dbg !47
  %264 = shl i32 %133, 6, !dbg !54
  %265 = sub i32 %.neg86, %264, !dbg !54
  %266 = icmp slt i32 %43, %265, !dbg !48
  %267 = shl i32 %263, 13, !dbg !49
  %268 = sext i32 %267 to i64, !dbg !49
  %269 = and i1 %134, %266, !dbg !47
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %gep = getelementptr i8, ptr addrspace(3) %68, i64 %268, !dbg !49
  %270 = select i1 %269, i32 8, i32 0, !dbg !49
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %gep, ptr addrspace(1) %259, i32 %270, i1 true) #3, !dbg !49
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !49
  %271 = icmp slt i32 %53, %265, !dbg !50
  %272 = shl i32 %263, 14, !dbg !51
  %273 = sext i32 %272 to i64, !dbg !51
  %274 = and i1 %134, %271, !dbg !47
  %gep88 = getelementptr i8, ptr addrspace(3) %78, i64 %273, !dbg !51
  %275 = select i1 %274, i32 16, i32 0, !dbg !51
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %gep88, ptr addrspace(1) %260, i32 %275, i1 true) #3, !dbg !51
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !51
  %276 = add nuw nsw i32 %133, 1, !dbg !47
  %exitcond.not = icmp eq i32 %276, %59, !dbg !47
  br i1 %exitcond.not, label %._crit_edge, label %98, !dbg !47

._crit_edge:                                      ; preds = %98, %10
  %277 = phi float [ 0.000000e+00, %10 ], [ %227, %98 ], !dbg !56
  %278 = phi float [ 0.000000e+00, %10 ], [ %228, %98 ], !dbg !56
  %279 = phi float [ 0.000000e+00, %10 ], [ %229, %98 ], !dbg !56
  %280 = phi float [ 0.000000e+00, %10 ], [ %230, %98 ], !dbg !56
  %281 = phi float [ 0.000000e+00, %10 ], [ %231, %98 ], !dbg !56
  %282 = phi float [ 0.000000e+00, %10 ], [ %232, %98 ], !dbg !56
  %283 = phi float [ 0.000000e+00, %10 ], [ %233, %98 ], !dbg !56
  %284 = phi float [ 0.000000e+00, %10 ], [ %234, %98 ], !dbg !56
  %285 = phi float [ 0.000000e+00, %10 ], [ %235, %98 ], !dbg !56
  %286 = phi float [ 0.000000e+00, %10 ], [ %236, %98 ], !dbg !56
  %287 = phi float [ 0.000000e+00, %10 ], [ %237, %98 ], !dbg !56
  %288 = phi float [ 0.000000e+00, %10 ], [ %238, %98 ], !dbg !56
  %289 = phi float [ 0.000000e+00, %10 ], [ %239, %98 ], !dbg !56
  %290 = phi float [ 0.000000e+00, %10 ], [ %240, %98 ], !dbg !56
  %291 = phi float [ 0.000000e+00, %10 ], [ %241, %98 ], !dbg !56
  %292 = phi float [ 0.000000e+00, %10 ], [ %242, %98 ], !dbg !56
  %293 = phi float [ 0.000000e+00, %10 ], [ %243, %98 ], !dbg !56
  %294 = phi float [ 0.000000e+00, %10 ], [ %244, %98 ], !dbg !56
  %295 = phi float [ 0.000000e+00, %10 ], [ %245, %98 ], !dbg !56
  %296 = phi float [ 0.000000e+00, %10 ], [ %246, %98 ], !dbg !56
  %297 = phi float [ 0.000000e+00, %10 ], [ %247, %98 ], !dbg !56
  %298 = phi float [ 0.000000e+00, %10 ], [ %248, %98 ], !dbg !56
  %299 = phi float [ 0.000000e+00, %10 ], [ %249, %98 ], !dbg !56
  %300 = phi float [ 0.000000e+00, %10 ], [ %250, %98 ], !dbg !56
  %301 = phi float [ 0.000000e+00, %10 ], [ %251, %98 ], !dbg !56
  %302 = phi float [ 0.000000e+00, %10 ], [ %252, %98 ], !dbg !56
  %303 = phi float [ 0.000000e+00, %10 ], [ %253, %98 ], !dbg !56
  %304 = phi float [ 0.000000e+00, %10 ], [ %254, %98 ], !dbg !56
  %305 = phi float [ 0.000000e+00, %10 ], [ %255, %98 ], !dbg !56
  %306 = phi float [ 0.000000e+00, %10 ], [ %256, %98 ], !dbg !56
  %307 = phi float [ 0.000000e+00, %10 ], [ %257, %98 ], !dbg !56
  %308 = phi float [ 0.000000e+00, %10 ], [ %258, %98 ], !dbg !56
  %309 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %277, float %278, float %279, float %280, float %281, float %282, float %283, float %284, float %285, float %286, float %287, float %288, float %289, float %290, float %291, float %292, float %293, float %294, float %295, float %296, float %297, float %298, float %299, float %300, float %301, float %302, float %303, float %304, float %305, float %306, float %307, float %308) #3, !dbg !47
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !47
  tail call void @llvm.nvvm.barrier0(), !dbg !47
  %310 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 0, !dbg !57
  %311 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 1, !dbg !57
  %312 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 2, !dbg !57
  %313 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 3, !dbg !57
  %314 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 4, !dbg !57
  %315 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 5, !dbg !57
  %316 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 6, !dbg !57
  %317 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 7, !dbg !57
  %318 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 8, !dbg !57
  %319 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 9, !dbg !57
  %320 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 10, !dbg !57
  %321 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 11, !dbg !57
  %322 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 12, !dbg !57
  %323 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 13, !dbg !57
  %324 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 14, !dbg !57
  %325 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 15, !dbg !57
  %326 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 16, !dbg !57
  %327 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 17, !dbg !57
  %328 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 18, !dbg !57
  %329 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 19, !dbg !57
  %330 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 20, !dbg !57
  %331 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 21, !dbg !57
  %332 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 22, !dbg !57
  %333 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 23, !dbg !57
  %334 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 24, !dbg !57
  %335 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 25, !dbg !57
  %336 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 26, !dbg !57
  %337 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 27, !dbg !57
  %338 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 28, !dbg !57
  %339 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 29, !dbg !57
  %340 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 30, !dbg !57
  %341 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %309, 31, !dbg !57
  %342 = insertelement <2 x float> poison, float %310, i64 0, !dbg !57
  %343 = insertelement <2 x float> %342, float %311, i64 1, !dbg !57
  %344 = fptrunc <2 x float> %343 to <2 x half>, !dbg !57
  %345 = insertelement <2 x float> poison, float %312, i64 0, !dbg !57
  %346 = insertelement <2 x float> %345, float %313, i64 1, !dbg !57
  %347 = fptrunc <2 x float> %346 to <2 x half>, !dbg !57
  %348 = insertelement <2 x float> poison, float %314, i64 0, !dbg !57
  %349 = insertelement <2 x float> %348, float %315, i64 1, !dbg !57
  %350 = fptrunc <2 x float> %349 to <2 x half>, !dbg !57
  %351 = insertelement <2 x float> poison, float %316, i64 0, !dbg !57
  %352 = insertelement <2 x float> %351, float %317, i64 1, !dbg !57
  %353 = fptrunc <2 x float> %352 to <2 x half>, !dbg !57
  %354 = insertelement <2 x float> poison, float %318, i64 0, !dbg !57
  %355 = insertelement <2 x float> %354, float %319, i64 1, !dbg !57
  %356 = fptrunc <2 x float> %355 to <2 x half>, !dbg !57
  %357 = insertelement <2 x float> poison, float %320, i64 0, !dbg !57
  %358 = insertelement <2 x float> %357, float %321, i64 1, !dbg !57
  %359 = fptrunc <2 x float> %358 to <2 x half>, !dbg !57
  %360 = insertelement <2 x float> poison, float %322, i64 0, !dbg !57
  %361 = insertelement <2 x float> %360, float %323, i64 1, !dbg !57
  %362 = fptrunc <2 x float> %361 to <2 x half>, !dbg !57
  %363 = insertelement <2 x float> poison, float %324, i64 0, !dbg !57
  %364 = insertelement <2 x float> %363, float %325, i64 1, !dbg !57
  %365 = fptrunc <2 x float> %364 to <2 x half>, !dbg !57
  %366 = insertelement <2 x float> poison, float %326, i64 0, !dbg !57
  %367 = insertelement <2 x float> %366, float %327, i64 1, !dbg !57
  %368 = fptrunc <2 x float> %367 to <2 x half>, !dbg !57
  %369 = insertelement <2 x float> poison, float %328, i64 0, !dbg !57
  %370 = insertelement <2 x float> %369, float %329, i64 1, !dbg !57
  %371 = fptrunc <2 x float> %370 to <2 x half>, !dbg !57
  %372 = insertelement <2 x float> poison, float %330, i64 0, !dbg !57
  %373 = insertelement <2 x float> %372, float %331, i64 1, !dbg !57
  %374 = fptrunc <2 x float> %373 to <2 x half>, !dbg !57
  %375 = insertelement <2 x float> poison, float %332, i64 0, !dbg !57
  %376 = insertelement <2 x float> %375, float %333, i64 1, !dbg !57
  %377 = fptrunc <2 x float> %376 to <2 x half>, !dbg !57
  %378 = insertelement <2 x float> poison, float %334, i64 0, !dbg !57
  %379 = insertelement <2 x float> %378, float %335, i64 1, !dbg !57
  %380 = fptrunc <2 x float> %379 to <2 x half>, !dbg !57
  %381 = insertelement <2 x float> poison, float %336, i64 0, !dbg !57
  %382 = insertelement <2 x float> %381, float %337, i64 1, !dbg !57
  %383 = fptrunc <2 x float> %382 to <2 x half>, !dbg !57
  %384 = insertelement <2 x float> poison, float %338, i64 0, !dbg !57
  %385 = insertelement <2 x float> %384, float %339, i64 1, !dbg !57
  %386 = fptrunc <2 x float> %385 to <2 x half>, !dbg !57
  %387 = insertelement <2 x float> poison, float %340, i64 0, !dbg !57
  %388 = insertelement <2 x float> %387, float %341, i64 1, !dbg !57
  %389 = fptrunc <2 x float> %388 to <2 x half>, !dbg !57
  %390 = mul i32 %34, %8, !dbg !58
  %391 = mul i32 %8, %35, !dbg !58
  %392 = mul i32 %8, %36, !dbg !58
  %393 = mul i32 %8, %37, !dbg !58
  %394 = sext i32 %390 to i64, !dbg !59
  %395 = getelementptr half, ptr addrspace(1) %2, i64 %394, !dbg !59
  %396 = sext i32 %391 to i64, !dbg !59
  %397 = getelementptr half, ptr addrspace(1) %2, i64 %396, !dbg !59
  %398 = sext i32 %392 to i64, !dbg !59
  %399 = getelementptr half, ptr addrspace(1) %2, i64 %398, !dbg !59
  %400 = sext i32 %393 to i64, !dbg !59
  %401 = getelementptr half, ptr addrspace(1) %2, i64 %400, !dbg !59
  %402 = sext i32 %46 to i64, !dbg !60
  %403 = getelementptr half, ptr addrspace(1) %395, i64 %402, !dbg !60
  %404 = getelementptr half, ptr addrspace(1) %397, i64 %402, !dbg !60
  %405 = getelementptr half, ptr addrspace(1) %399, i64 %402, !dbg !60
  %406 = getelementptr half, ptr addrspace(1) %401, i64 %402, !dbg !60
  %407 = icmp slt i32 %34, %3, !dbg !61
  %408 = icmp slt i32 %35, %3, !dbg !61
  %409 = icmp slt i32 %36, %3, !dbg !61
  %410 = icmp slt i32 %37, %3, !dbg !61
  %411 = icmp slt i32 %46, %4, !dbg !62
  %412 = and i1 %407, %411, !dbg !63
  %413 = and i1 %408, %411, !dbg !63
  %414 = and i1 %409, %411, !dbg !63
  %415 = and i1 %410, %411, !dbg !63
  %416 = lshr i32 %28, 2, !dbg !64
  %417 = and i32 %72, 6, !dbg !64
  %418 = shl nuw nsw i32 %29, 4, !dbg !64
  %419 = and i32 %418, 112, !dbg !64
  %420 = or disjoint i32 %419, %416, !dbg !64
  %421 = and i32 %40, 192, !dbg !64
  %422 = or disjoint i32 %417, %421, !dbg !64
  %423 = mul nuw nsw i32 %420, 264, !dbg !64
  %424 = add nuw nsw i32 %423, %422, !dbg !64
  %425 = zext nneg i32 %424 to i64, !dbg !64
  %426 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %425, !dbg !64
  store <2 x half> %344, ptr addrspace(3) %426, align 4, !dbg !64
  %427 = add nuw nsw i32 %423, 2112, !dbg !64
  %428 = add nuw nsw i32 %427, %422, !dbg !64
  %429 = zext nneg i32 %428 to i64, !dbg !64
  %430 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %429, !dbg !64
  store <2 x half> %347, ptr addrspace(3) %430, align 4, !dbg !64
  %431 = or disjoint i32 %422, 8, !dbg !64
  %432 = add nuw nsw i32 %423, %431, !dbg !64
  %433 = zext nneg i32 %432 to i64, !dbg !64
  %434 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %433, !dbg !64
  store <2 x half> %350, ptr addrspace(3) %434, align 4, !dbg !64
  %435 = add nuw nsw i32 %427, %431, !dbg !64
  %436 = zext nneg i32 %435 to i64, !dbg !64
  %437 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %436, !dbg !64
  store <2 x half> %353, ptr addrspace(3) %437, align 4, !dbg !64
  %438 = or disjoint i32 %422, 16, !dbg !64
  %439 = add nuw nsw i32 %423, %438, !dbg !64
  %440 = zext nneg i32 %439 to i64, !dbg !64
  %441 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %440, !dbg !64
  store <2 x half> %356, ptr addrspace(3) %441, align 4, !dbg !64
  %442 = add nuw nsw i32 %427, %438, !dbg !64
  %443 = zext nneg i32 %442 to i64, !dbg !64
  %444 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %443, !dbg !64
  store <2 x half> %359, ptr addrspace(3) %444, align 4, !dbg !64
  %445 = or disjoint i32 %422, 24, !dbg !64
  %446 = add nuw nsw i32 %423, %445, !dbg !64
  %447 = zext nneg i32 %446 to i64, !dbg !64
  %448 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %447, !dbg !64
  store <2 x half> %362, ptr addrspace(3) %448, align 4, !dbg !64
  %449 = add nuw nsw i32 %427, %445, !dbg !64
  %450 = zext nneg i32 %449 to i64, !dbg !64
  %451 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %450, !dbg !64
  store <2 x half> %365, ptr addrspace(3) %451, align 4, !dbg !64
  %452 = or disjoint i32 %422, 32, !dbg !64
  %453 = add nuw nsw i32 %423, %452, !dbg !64
  %454 = zext nneg i32 %453 to i64, !dbg !64
  %455 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %454, !dbg !64
  store <2 x half> %368, ptr addrspace(3) %455, align 4, !dbg !64
  %456 = add nuw nsw i32 %427, %452, !dbg !64
  %457 = zext nneg i32 %456 to i64, !dbg !64
  %458 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %457, !dbg !64
  store <2 x half> %371, ptr addrspace(3) %458, align 4, !dbg !64
  %459 = or disjoint i32 %422, 40, !dbg !64
  %460 = add nuw nsw i32 %423, %459, !dbg !64
  %461 = zext nneg i32 %460 to i64, !dbg !64
  %462 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %461, !dbg !64
  store <2 x half> %374, ptr addrspace(3) %462, align 4, !dbg !64
  %463 = add nuw nsw i32 %427, %459, !dbg !64
  %464 = zext nneg i32 %463 to i64, !dbg !64
  %465 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %464, !dbg !64
  store <2 x half> %377, ptr addrspace(3) %465, align 4, !dbg !64
  %466 = or disjoint i32 %422, 48, !dbg !64
  %467 = add nuw nsw i32 %423, %466, !dbg !64
  %468 = zext nneg i32 %467 to i64, !dbg !64
  %469 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %468, !dbg !64
  store <2 x half> %380, ptr addrspace(3) %469, align 4, !dbg !64
  %470 = add nuw nsw i32 %427, %466, !dbg !64
  %471 = zext nneg i32 %470 to i64, !dbg !64
  %472 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %471, !dbg !64
  store <2 x half> %383, ptr addrspace(3) %472, align 4, !dbg !64
  %473 = or disjoint i32 %422, 56, !dbg !64
  %474 = add nuw nsw i32 %423, %473, !dbg !64
  %475 = zext nneg i32 %474 to i64, !dbg !64
  %476 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %475, !dbg !64
  store <2 x half> %386, ptr addrspace(3) %476, align 4, !dbg !64
  %477 = add nuw nsw i32 %427, %473, !dbg !64
  %478 = zext nneg i32 %477 to i64, !dbg !64
  %479 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %478, !dbg !64
  store <2 x half> %389, ptr addrspace(3) %479, align 4, !dbg !64
  tail call void @llvm.nvvm.barrier0(), !dbg !64
  %480 = shl nuw nsw i32 %28, 3, !dbg !64
  %481 = mul nuw nsw i32 %32, 264, !dbg !64
  %482 = add nuw nsw i32 %481, %480, !dbg !64
  %483 = zext nneg i32 %482 to i64, !dbg !64
  %484 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %483, !dbg !64
  %485 = getelementptr i8, ptr addrspace(3) %484, i64 16896, !dbg !64
  %486 = load <4 x i32>, ptr addrspace(3) %485, align 16, !dbg !64
  %487 = getelementptr i8, ptr addrspace(3) %484, i64 33792, !dbg !64
  %488 = load <4 x i32>, ptr addrspace(3) %487, align 16, !dbg !64
  %489 = getelementptr i8, ptr addrspace(3) %484, i64 50688, !dbg !64
  %490 = load <4 x i32>, ptr addrspace(3) %489, align 16, !dbg !64
  %.extract = load i32, ptr addrspace(3) %484, align 16, !dbg !64
  %491 = getelementptr inbounds i8, ptr addrspace(3) %484, i64 4, !dbg !64
  %.extract57 = load i32, ptr addrspace(3) %491, align 4, !dbg !64
  %492 = getelementptr inbounds i8, ptr addrspace(3) %484, i64 8, !dbg !64
  %.extract59 = load i32, ptr addrspace(3) %492, align 8, !dbg !64
  %493 = getelementptr inbounds i8, ptr addrspace(3) %484, i64 12, !dbg !64
  %.extract61 = load i32, ptr addrspace(3) %493, align 4, !dbg !64
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract57, i32 %.extract59, i32 %.extract61, ptr addrspace(1) %403, i1 %412) #3, !dbg !64
  %.extract63 = extractelement <4 x i32> %486, i64 0, !dbg !64
  %.extract65 = extractelement <4 x i32> %486, i64 1, !dbg !64
  %.extract67 = extractelement <4 x i32> %486, i64 2, !dbg !64
  %.extract69 = extractelement <4 x i32> %486, i64 3, !dbg !64
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract63, i32 %.extract65, i32 %.extract67, i32 %.extract69, ptr addrspace(1) %404, i1 %413) #3, !dbg !64
  %.extract71 = extractelement <4 x i32> %488, i64 0, !dbg !64
  %.extract73 = extractelement <4 x i32> %488, i64 1, !dbg !64
  %.extract75 = extractelement <4 x i32> %488, i64 2, !dbg !64
  %.extract77 = extractelement <4 x i32> %488, i64 3, !dbg !64
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract71, i32 %.extract73, i32 %.extract75, i32 %.extract77, ptr addrspace(1) %405, i1 %414) #3, !dbg !64
  %.extract79 = extractelement <4 x i32> %490, i64 0, !dbg !64
  %.extract81 = extractelement <4 x i32> %490, i64 1, !dbg !64
  %.extract83 = extractelement <4 x i32> %490, i64 2, !dbg !64
  %.extract85 = extractelement <4 x i32> %490, i64 3, !dbg !64
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract79, i32 %.extract81, i32 %.extract83, i32 %.extract85, ptr addrspace(1) %406, i1 %415) #3, !dbg !64
  %494 = tail call i32 asm sideeffect "mov.u32 $0, %clock;", "=r"() #3, !dbg !65
  %495 = and i32 %27, 127, !dbg !10
  %496 = icmp eq i32 %495, 0, !dbg !10
  %497 = lshr i32 %27, 1, !dbg !10
  %498 = and i32 %497, 2147483584, !dbg !10
  %499 = zext nneg i32 %498 to i64, !dbg !10
  %500 = getelementptr i32, ptr addrspace(3) @global_smem, i64 %499, !dbg !10
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %500, i32 0, i32 %11, i1 %496) #3, !dbg !10
  %501 = or disjoint i32 %498, 2, !dbg !65
  %502 = zext nneg i32 %501 to i64, !dbg !65
  %503 = getelementptr i32, ptr addrspace(3) @global_smem, i64 %502, !dbg !65
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %503, i32 -2147483648, i32 %494, i1 %496) #3, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !66
  %504 = icmp eq i32 %27, 0, !dbg !66
  %505 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #3, !dbg !66
  %506 = tail call i32 asm "mov.u32 $0, %ctaid.z;", "=r"() #3, !dbg !66
  %507 = tail call i32 asm "mov.u32 $0, %smid;", "=r"() #3, !dbg !66
  %508 = tail call i32 @llvm.nvvm.read.ptx.sreg.nctaid.x(), !dbg !66
  %509 = tail call i32 @llvm.nvvm.read.ptx.sreg.nctaid.y(), !dbg !66
  %510 = mul i32 %506, %509, !dbg !66
  %reass.add = add i32 %510, %505
  %reass.mul = mul i32 %reass.add, %508
  %511 = add i32 %reass.mul, %12, !dbg !66
  %512 = mul i32 %511, 578, !dbg !66
  %513 = shl nuw nsw i32 %29, 1, !dbg !66
  %514 = add nuw nsw i32 %513, 2, !dbg !66
  %515 = add i32 %514, %512, !dbg !66
  %516 = or disjoint i32 %515, 1, !dbg !66
  %517 = sext i32 %515 to i64, !dbg !66
  %518 = getelementptr i32, ptr addrspace(1) %9, i64 %517, !dbg !66
  store i32 %507, ptr addrspace(1) %518, align 4, !dbg !66
  %519 = sext i32 %516 to i64, !dbg !66
  %520 = getelementptr i32, ptr addrspace(1) %9, i64 %519, !dbg !66
  store i32 4, ptr addrspace(1) %520, align 4, !dbg !66
  br i1 %504, label %521, label %.loopexit, !dbg !66

521:                                              ; preds = %._crit_edge
  %522 = sext i32 %512 to i64, !dbg !66
  %523 = getelementptr i32, ptr addrspace(1) %9, i64 %522, !dbg !66
  store i32 -559038737, ptr addrspace(1) %523, align 4, !dbg !66
  %524 = or disjoint i32 %512, 1, !dbg !66
  %525 = sext i32 %524 to i64, !dbg !66
  %526 = getelementptr i32, ptr addrspace(1) %9, i64 %525, !dbg !66
  store i32 %511, ptr addrspace(1) %526, align 4, !dbg !66
  %527 = add i32 %512, 66, !dbg !66
  br label %528, !dbg !66

528:                                              ; preds = %528, %521
  %indvars.iv = phi i64 [ %indvars.iv.next, %528 ], [ 0, %521 ], !dbg !66
  %529 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !66
  %530 = add i32 %527, %529, !dbg !66
  %531 = or disjoint i32 %530, 1, !dbg !66
  %532 = or disjoint i64 %indvars.iv, 1, !dbg !66
  %533 = getelementptr i32, ptr addrspace(3) @global_smem, i64 %indvars.iv, !dbg !66
  %534 = load i32, ptr addrspace(3) %533, align 8, !dbg !66
  %535 = sext i32 %530 to i64, !dbg !66
  %536 = getelementptr i32, ptr addrspace(1) %9, i64 %535, !dbg !66
  store i32 %534, ptr addrspace(1) %536, align 4, !dbg !66
  %537 = getelementptr i32, ptr addrspace(3) @global_smem, i64 %532, !dbg !66
  %538 = load i32, ptr addrspace(3) %537, align 4, !dbg !66
  %539 = sext i32 %531 to i64, !dbg !66
  %540 = getelementptr i32, ptr addrspace(1) %9, i64 %539, !dbg !66
  store i32 %538, ptr addrspace(1) %540, align 4, !dbg !66
  %541 = icmp ult i64 %indvars.iv, 510, !dbg !66
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 2, !dbg !66
  br i1 %541, label %528, label %.loopexit, !dbg !66

.loopexit:                                        ; preds = %528, %._crit_edge
  ret void, !dbg !67
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.nctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.nctaid.y() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "tutorial_profile.py", directory: "/home/srir/tritonbench/tritonbench/operators/fp8_gemm")
!4 = !{ptr @matmul_kernel_profile, !"kernel", i32 1}
!5 = !{ptr @matmul_kernel_profile, !"reqntidx", i32 1024}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "matmul_kernel_profile", linkageName: "matmul_kernel_profile", scope: !3, file: !3, line: 192, type: !8, scopeLine: 192, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 10, column: 5, scope: !7)
!11 = !DILocation(line: 225, column: 24, scope: !7)
!12 = !DILocation(line: 40, column: 22, scope: !13, inlinedAt: !15)
!13 = distinct !DILexicalBlockFile(scope: !7, file: !14, discriminator: 0)
!14 = !DIFile(filename: "standard.py", directory: "/home/srir/triton/python/triton/language")
!15 = !DILocation(line: 226, column: 27, scope: !7)
!16 = !DILocation(line: 40, column: 28, scope: !13, inlinedAt: !15)
!17 = !DILocation(line: 40, column: 22, scope: !13, inlinedAt: !18)
!18 = !DILocation(line: 227, column: 27, scope: !7)
!19 = !DILocation(line: 40, column: 28, scope: !13, inlinedAt: !18)
!20 = !DILocation(line: 228, column: 38, scope: !7)
!21 = !DILocation(line: 229, column: 22, scope: !7)
!22 = !DILocation(line: 230, column: 29, scope: !7)
!23 = !DILocation(line: 231, column: 35, scope: !7)
!24 = !DILocation(line: 231, column: 48, scope: !7)
!25 = !DILocation(line: 232, column: 34, scope: !7)
!26 = !DILocation(line: 233, column: 40, scope: !7)
!27 = !DILocation(line: 232, column: 54, scope: !7)
!28 = !DILocation(line: 232, column: 27, scope: !7)
!29 = !DILocation(line: 242, column: 23, scope: !7)
!30 = !DILocation(line: 242, column: 51, scope: !7)
!31 = !DILocation(line: 242, column: 38, scope: !7)
!32 = !DILocation(line: 242, column: 68, scope: !7)
!33 = !DILocation(line: 243, column: 23, scope: !7)
!34 = !DILocation(line: 243, column: 51, scope: !7)
!35 = !DILocation(line: 243, column: 38, scope: !7)
!36 = !DILocation(line: 243, column: 68, scope: !7)
!37 = !DILocation(line: 245, column: 41, scope: !7)
!38 = !DILocation(line: 245, column: 53, scope: !7)
!39 = !DILocation(line: 245, column: 22, scope: !7)
!40 = !DILocation(line: 246, column: 29, scope: !7)
!41 = !DILocation(line: 246, column: 71, scope: !7)
!42 = !DILocation(line: 246, column: 52, scope: !7)
!43 = !DILocation(line: 246, column: 22, scope: !7)
!44 = !DILocation(line: 40, column: 22, scope: !13, inlinedAt: !45)
!45 = !DILocation(line: 254, column: 33, scope: !7)
!46 = !DILocation(line: 40, column: 28, scope: !13, inlinedAt: !45)
!47 = !DILocation(line: 254, column: 22, scope: !7)
!48 = !DILocation(line: 257, column: 51, scope: !7)
!49 = !DILocation(line: 257, column: 20, scope: !7)
!50 = !DILocation(line: 258, column: 51, scope: !7)
!51 = !DILocation(line: 258, column: 20, scope: !7)
!52 = !DILocation(line: 262, column: 18, scope: !7)
!53 = !DILocation(line: 263, column: 18, scope: !7)
!54 = !DILocation(line: 257, column: 55, scope: !7)
!55 = !DILocation(line: 260, column: 35, scope: !7)
!56 = !DILocation(line: 123, column: 68, scope: !7)
!57 = !DILocation(line: 268, column: 23, scope: !7)
!58 = !DILocation(line: 274, column: 33, scope: !7)
!59 = !DILocation(line: 274, column: 21, scope: !7)
!60 = !DILocation(line: 274, column: 52, scope: !7)
!61 = !DILocation(line: 275, column: 33, scope: !7)
!62 = !DILocation(line: 275, column: 58, scope: !7)
!63 = !DILocation(line: 275, column: 39, scope: !7)
!64 = !DILocation(line: 276, column: 21, scope: !7)
!65 = !DILocation(line: 183, column: 5, scope: !7)
!66 = !DILocation(line: 192, scope: !7)
!67 = !DILocation(line: 276, column: 4, scope: !7)
