//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	matmul_kernel_profile   // -- Begin function matmul_kernel_profile
.extern .shared .align 16 .b8 global_smem[];
                                        // @matmul_kernel_profile
.visible .entry matmul_kernel_profile(
	.param .u64 matmul_kernel_profile_param_0,
	.param .u64 matmul_kernel_profile_param_1,
	.param .u64 matmul_kernel_profile_param_2,
	.param .u32 matmul_kernel_profile_param_3,
	.param .u32 matmul_kernel_profile_param_4,
	.param .u32 matmul_kernel_profile_param_5,
	.param .u32 matmul_kernel_profile_param_6,
	.param .u32 matmul_kernel_profile_param_7,
	.param .u32 matmul_kernel_profile_param_8,
	.param .u64 matmul_kernel_profile_param_9
)
.reqntid 1024, 1, 1
{
	.reg .pred 	%p<35>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<218>;
	.reg .f32 	%f<439>;
	.reg .b64 	%rd<61>;
	.loc	1 192 0                         // tutorial_profile.py:192:0
$L__func_begin0:
	.loc	1 192 0                         // tutorial_profile.py:192:0

// %bb.0:
	ld.param.u64 	%rd17, [matmul_kernel_profile_param_9];
	ld.param.u32 	%r37, [matmul_kernel_profile_param_8];
	ld.param.u32 	%r36, [matmul_kernel_profile_param_5];
	ld.param.u32 	%r35, [matmul_kernel_profile_param_4];
	ld.param.u32 	%r34, [matmul_kernel_profile_param_3];
	ld.param.u64 	%rd16, [matmul_kernel_profile_param_2];
	ld.param.u64 	%rd15, [matmul_kernel_profile_param_1];
	ld.param.u64 	%rd14, [matmul_kernel_profile_param_0];
$L__tmp0:
	.loc	1 10 5                          // tutorial_profile.py:10:5
	// begin inline asm
	mov.u32 %r38, %clock;
	// end inline asm
	.loc	1 225 24                        // tutorial_profile.py:225:24
	// begin inline asm
	mov.u32 %r39, %ctaid.x;
	// end inline asm
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r48, %r34, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r49, %r48, 31;
	shr.u32 	%r50, %r49, 25;
	add.s32 	%r51, %r48, %r50;
	shr.s32 	%r52, %r51, 7;
$L__tmp2:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r53, %r35, 255;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r54, %r53, 31;
	shr.u32 	%r55, %r54, 24;
	add.s32 	%r56, %r53, %r55;
	shr.s32 	%r57, %r56, 8;
	ld.param.u32 	%r59, [matmul_kernel_profile_param_6];
$L__tmp3:
	.loc	1 228 38                        // tutorial_profile.py:228:38
	shl.b32 	%r60, %r57, 3;
	ld.param.u32 	%r61, [matmul_kernel_profile_param_7];
	.loc	1 229 22                        // tutorial_profile.py:229:22
	div.s32 	%r62, %r39, %r60;
	.loc	1 230 29                        // tutorial_profile.py:230:29
	shl.b32 	%r63, %r62, 3;
	.loc	1 231 35                        // tutorial_profile.py:231:35
	sub.s32 	%r64, %r52, %r63;
	.loc	1 231 48                        // tutorial_profile.py:231:48
	min.s32 	%r66, %r64, 8;
	.loc	1 232 34                        // tutorial_profile.py:232:34
	mul.lo.s32 	%r67, %r62, %r60;
	sub.s32 	%r68, %r39, %r67;
	.loc	1 233 40                        // tutorial_profile.py:233:40
	div.s32 	%r69, %r68, %r66;
	.loc	1 232 54                        // tutorial_profile.py:232:54
	mul.lo.s32 	%r70, %r69, %r66;
	sub.s32 	%r71, %r68, %r70;
	.loc	1 232 27                        // tutorial_profile.py:232:27
	add.s32 	%r72, %r71, %r63;
	.loc	1 242 23                        // tutorial_profile.py:242:23
	shl.b32 	%r73, %r72, 7;
	.loc	1 242 51                        // tutorial_profile.py:242:51
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 31;
	shr.u32 	%r5, %r3, 5;
	bfe.u32 	%r74, %r3, 3, 7;
	bfe.u32 	%r6, %r3, 5, 5;
	.loc	1 242 38                        // tutorial_profile.py:242:38
	or.b32  	%r75, %r73, %r74;
	or.b32  	%r7, %r73, %r6;
	or.b32  	%r8, %r7, 32;
	or.b32  	%r9, %r7, 64;
	or.b32  	%r10, %r7, 96;
	.loc	1 242 68                        // tutorial_profile.py:242:68
	rem.s32 	%r76, %r75, %r34;
	.loc	1 243 23                        // tutorial_profile.py:243:23
	shl.b32 	%r77, %r69, 8;
	.loc	1 243 51                        // tutorial_profile.py:243:51
	shr.u32 	%r11, %r3, 2;
	bfe.u32 	%r78, %r3, 2, 8;
	shl.b32 	%r79, %r3, 3;
	and.b32  	%r12, %r79, 56;
	and.b32  	%r80, %r79, 248;
	.loc	1 243 38                        // tutorial_profile.py:243:38
	or.b32  	%r81, %r77, %r78;
	or.b32  	%r13, %r77, %r80;
	.loc	1 243 68                        // tutorial_profile.py:243:68
	rem.s32 	%r82, %r81, %r35;
	.loc	1 245 53                        // tutorial_profile.py:245:53
	mad.lo.s32 	%r83, %r76, %r59, %r12;
	.loc	1 245 22                        // tutorial_profile.py:245:22
	cvt.s64.s32 	%rd1, %r83;
	add.s64 	%rd18, %rd14, %rd1;
	.loc	1 246 29                        // tutorial_profile.py:246:29
	shl.b32 	%r84, %r3, 4;
	and.b32  	%r14, %r84, 48;
	.loc	1 246 52                        // tutorial_profile.py:246:52
	mad.lo.s32 	%r85, %r82, %r61, %r14;
	.loc	1 246 22                        // tutorial_profile.py:246:22
	cvt.s64.s32 	%rd2, %r85;
	add.s64 	%rd19, %rd15, %rd2;
$L__tmp4:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r86, %r36, 63;
$L__tmp5:
	.loc	1 254 22                        // tutorial_profile.py:254:22
	setp.lt.s32 	%p5, %r86, 64;
	setp.gt.s32 	%p6, %r86, 63;
	.loc	1 257 51                        // tutorial_profile.py:257:51
	setp.lt.s32 	%p7, %r12, %r36;
	.loc	1 257 20                        // tutorial_profile.py:257:20
	and.b32  	%r90, %r3, 48;
	xor.b32  	%r91, %r12, %r90;
	shl.b32 	%r92, %r74, 6;
	or.b32  	%r93, %r91, %r92;
	mov.u32 	%r94, global_smem;
	add.s32 	%r95, %r94, %r93;
	add.s32 	%r40, %r95, 2048;
	selp.b32 	%r96, 8, 0, %p6;
	selp.b32 	%r41, %r96, 0, %p7;
	mov.pred 	%p1, -1;
	// begin inline asm
	@%p1 cp.async.ca.shared.global [ %r40 + 0 ], [ %rd18 + 0 ], 0x8, %r41;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 258 51                        // tutorial_profile.py:258:51
	setp.lt.s32 	%p8, %r14, %r36;
	.loc	1 258 20                        // tutorial_profile.py:258:20
	shl.b32 	%r17, %r3, 1;
	xor.b32  	%r97, %r17, %r84;
	and.b32  	%r98, %r97, 48;
	shl.b32 	%r99, %r78, 6;
	or.b32  	%r100, %r98, %r99;
	add.s32 	%r101, %r94, %r100;
	add.s32 	%r42, %r101, 26624;
	selp.b32 	%r102, 16, 0, %p6;
	selp.b32 	%r43, %r102, 0, %p8;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r42 + 0 ], [ %rd19 + 0 ], 0x10, %r43;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 254 22                        // tutorial_profile.py:254:22
	setp.gt.s32 	%p9, %r86, 127;
	.loc	1 262 18                        // tutorial_profile.py:262:18
	add.s64 	%rd20, %rd18, 64;
	.loc	1 263 18                        // tutorial_profile.py:263:18
	add.s64 	%rd21, %rd19, 64;
	.loc	1 257 55                        // tutorial_profile.py:257:55
	add.s32 	%r103, %r36, -64;
	.loc	1 257 51                        // tutorial_profile.py:257:51
	setp.lt.s32 	%p10, %r12, %r103;
	.loc	1 257 20                        // tutorial_profile.py:257:20
	bar.sync 	0;
	add.s32 	%r44, %r95, 10240;
	selp.b32 	%r104, 8, 0, %p10;
	selp.b32 	%r45, %r104, 0, %p9;
	// begin inline asm
	@%p1 cp.async.ca.shared.global [ %r44 + 0 ], [ %rd20 + 0 ], 0x8, %r45;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 258 51                        // tutorial_profile.py:258:51
	setp.lt.s32 	%p11, %r14, %r103;
	.loc	1 258 20                        // tutorial_profile.py:258:20
	add.s32 	%r46, %r101, 43008;
	selp.b32 	%r105, 16, 0, %p11;
	selp.b32 	%r47, %r105, 0, %p9;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r46 + 0 ], [ %rd21 + 0 ], 0x10, %r47;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	mov.f32 	%f375, 0f00000000;
	mov.b32 	%r212, 0;
	mov.f32 	%f376, %f375;
	mov.f32 	%f377, %f375;
	mov.f32 	%f378, %f375;
	mov.f32 	%f379, %f375;
	mov.f32 	%f380, %f375;
	mov.f32 	%f381, %f375;
	mov.f32 	%f382, %f375;
	mov.f32 	%f383, %f375;
	mov.f32 	%f384, %f375;
	mov.f32 	%f385, %f375;
	mov.f32 	%f386, %f375;
	mov.f32 	%f387, %f375;
	mov.f32 	%f388, %f375;
	mov.f32 	%f389, %f375;
	mov.f32 	%f390, %f375;
	mov.f32 	%f391, %f375;
	mov.f32 	%f392, %f375;
	mov.f32 	%f393, %f375;
	mov.f32 	%f394, %f375;
	mov.f32 	%f395, %f375;
	mov.f32 	%f396, %f375;
	mov.f32 	%f397, %f375;
	mov.f32 	%f398, %f375;
	mov.f32 	%f399, %f375;
	mov.f32 	%f400, %f375;
	mov.f32 	%f401, %f375;
	mov.f32 	%f402, %f375;
	mov.f32 	%f403, %f375;
	mov.f32 	%f404, %f375;
	mov.f32 	%f405, %f375;
	mov.f32 	%f406, %f375;
	.loc	1 254 22                        // tutorial_profile.py:254:22
	@%p5 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph
	.loc	1 0 22                          // tutorial_profile.py:0:22
	shr.s32 	%r87, %r86, 31;
	shr.u32 	%r88, %r87, 26;
	add.s32 	%r89, %r86, %r88;
	shr.s32 	%r15, %r89, 6;
	add.s32 	%r19, %r15, -2;
	and.b32  	%r20, %r5, 134217724;
	and.b32  	%r109, %r3, 768;
	cvt.u64.u32 	%rd22, %r109;
	or.b64  	%rd3, %rd22, -9223371899348713472;
	or.b64  	%rd4, %rd22, -9223371899348713470;
	add.s32 	%r213, %r36, -128;
	.loc	1 254 22                        // tutorial_profile.py:254:22
	add.s64 	%rd23, %rd2, %rd15;
	add.s64 	%rd59, %rd23, 128;
	add.s64 	%rd24, %rd1, %rd14;
	add.s64 	%rd58, %rd24, 128;
	mov.f32 	%f304, 0f00000000;
	mov.b32 	%r215, 1;
	mov.b32 	%r214, -1;
	mov.f32 	%f303, 0f00000001;
	mov.f32 	%f302, 0f00000040;
	mov.f32 	%f375, %f304;
	mov.f32 	%f376, %f304;
	mov.f32 	%f377, %f304;
	mov.f32 	%f378, %f304;
	mov.f32 	%f379, %f304;
	mov.f32 	%f380, %f304;
	mov.f32 	%f381, %f304;
	mov.f32 	%f382, %f304;
	mov.f32 	%f383, %f304;
	mov.f32 	%f384, %f304;
	mov.f32 	%f385, %f304;
	mov.f32 	%f386, %f304;
	mov.f32 	%f387, %f304;
	mov.f32 	%f388, %f304;
	mov.f32 	%f389, %f304;
	mov.f32 	%f390, %f304;
	mov.f32 	%f391, %f304;
	mov.f32 	%f392, %f304;
	mov.f32 	%f393, %f304;
	mov.f32 	%f394, %f304;
	mov.f32 	%f395, %f304;
	mov.f32 	%f396, %f304;
	mov.f32 	%f397, %f304;
	mov.f32 	%f398, %f304;
	mov.f32 	%f399, %f304;
	mov.f32 	%f400, %f304;
	mov.f32 	%f401, %f304;
	mov.f32 	%f402, %f304;
	mov.f32 	%f403, %f304;
	mov.f32 	%f404, %f304;
	mov.f32 	%f405, %f304;
	mov.f32 	%f406, %f304;
	mov.u32 	%r216, %r212;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	setp.lt.s32 	%p16, %r216, %r19;
	add.s32 	%r114, %r214, 1;
	setp.lt.s32 	%p17, %r114, 3;
	selp.b32 	%r214, %r114, 0, %p17;
	.loc	1 257 20                        // tutorial_profile.py:257:20
	shl.b32 	%r115, %r214, 13;
	add.s32 	%r117, %r94, %r115;
	add.s32 	%r118, %r117, 2048;
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	.loc	1 258 20                        // tutorial_profile.py:258:20
	shl.b32 	%r119, %r214, 14;
	add.s32 	%r120, %r94, %r119;
	add.s32 	%r121, %r120, 26624;
	.loc	1 260 35                        // tutorial_profile.py:260:35
	shfl.sync.idx.b32	%r122, %r20, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r123, %r122, 6;
	and.b32  	%r124, %r123, 448;
	cvt.u64.u32 	%rd31, %r124;
	shr.u32 	%r125, %r118, 4;
	cvt.u64.u32 	%rd32, %r125;
	and.b64  	%rd33, %rd32, 16383;
	add.s64 	%rd34, %rd33, %rd31;
	or.b64  	%rd25, %rd34, -9223371899382267904;
	shr.u32 	%r126, %r121, 4;
	cvt.u64.u32 	%rd35, %r126;
	and.b64  	%rd36, %rd35, 16383;
	add.s64 	%rd26, %rd3, %rd36;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k32.f32.e4m3.e4m3 {%f375,%f376,%f377,%f378,%f379,%f380,%f381,%f382,%f383,%f384,%f385,%f386,%f387,%f388,%f389,%f390,%f391,%f392,%f393,%f394,%f395,%f396,%f397,%f398,%f399,%f400,%f401,%f402,%f403,%f404,%f405,%f406}, %rd25, %rd26, %p1, 1, 1;
	// end inline asm
	add.s64 	%rd27, %rd34, -9223371899382267902;
	add.s64 	%rd28, %rd4, %rd36;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k32.f32.e4m3.e4m3 {%f375,%f376,%f377,%f378,%f379,%f380,%f381,%f382,%f383,%f384,%f385,%f386,%f387,%f388,%f389,%f390,%f391,%f392,%f393,%f394,%f395,%f396,%f397,%f398,%f399,%f400,%f401,%f402,%f403,%f404,%f405,%f406}, %rd27, %rd28, %p1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%f259, %r118;
	mov.b32 	%f264, %r121;
	mov.f32 	%f266, %f302;
	mov.f32 	%f261, %f303;
	mov.f32 	%f268, %f304;
	mov.f32 	%f265, %f303;
	mov.f32 	%f260, %f302;
	mov.f32 	%f262, %f304;
	mov.f32 	%f263, %f304;
	mov.f32 	%f267, %f304;
	// begin inline asm
	// wait for regs: %f375,%f376,%f377,%f378,%f379,%f380,%f381,%f382,%f383,%f384,%f385,%f386,%f387,%f388,%f389,%f390,%f391,%f392,%f393,%f394,%f395,%f396,%f397,%f398,%f399,%f400,%f401,%f402,%f403,%f404,%f405,%f406,%f259,%f260,%f261,%f262,%f263,%f264,%f265,%f266,%f267,%f268
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 254 22                        // tutorial_profile.py:254:22
	add.s32 	%r127, %r215, 1;
	setp.lt.s32 	%p18, %r127, 3;
	selp.b32 	%r215, %r127, 0, %p18;
	.loc	1 257 51                        // tutorial_profile.py:257:51
	setp.lt.s32 	%p19, %r12, %r213;
	.loc	1 257 20                        // tutorial_profile.py:257:20
	shl.b32 	%r128, %r215, 13;
	bar.sync 	0;
	add.s32 	%r110, %r40, %r128;
	selp.b32 	%r129, 8, 0, %p19;
	selp.b32 	%r111, %r129, 0, %p16;
	// begin inline asm
	@%p1 cp.async.ca.shared.global [ %r110 + 0 ], [ %rd58 + 0 ], 0x8, %r111;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 258 51                        // tutorial_profile.py:258:51
	setp.lt.s32 	%p20, %r14, %r213;
	.loc	1 258 20                        // tutorial_profile.py:258:20
	shl.b32 	%r130, %r215, 14;
	add.s32 	%r112, %r42, %r130;
	selp.b32 	%r131, 16, 0, %p20;
	selp.b32 	%r113, %r131, 0, %p16;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r112 + 0 ], [ %rd59 + 0 ], 0x10, %r113;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 254 22                        // tutorial_profile.py:254:22
	add.s32 	%r216, %r216, 1;
	add.s64 	%rd59, %rd59, 64;
	add.s64 	%rd58, %rd58, 64;
	add.s32 	%r213, %r213, -64;
	setp.ne.s32 	%p21, %r15, %r216;
	@%p21 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	// begin inline asm
	// wait for regs: %f375,%f376,%f377,%f378,%f379,%f380,%f381,%f382,%f383,%f384,%f385,%f386,%f387,%f388,%f389,%f390,%f391,%f392,%f393,%f394,%f395,%f396,%f397,%f398,%f399,%f400,%f401,%f402,%f403,%f404,%f405,%f406
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	.loc	1 268 23                        // tutorial_profile.py:268:23
	cvt.rn.f16.f32 	%rs1, %f376;
	cvt.rn.f16.f32 	%rs2, %f375;
	mov.b32 	%r158, {%rs2, %rs1};
	cvt.rn.f16.f32 	%rs3, %f378;
	cvt.rn.f16.f32 	%rs4, %f377;
	mov.b32 	%r159, {%rs4, %rs3};
	cvt.rn.f16.f32 	%rs5, %f380;
	cvt.rn.f16.f32 	%rs6, %f379;
	mov.b32 	%r160, {%rs6, %rs5};
	cvt.rn.f16.f32 	%rs7, %f382;
	cvt.rn.f16.f32 	%rs8, %f381;
	mov.b32 	%r161, {%rs8, %rs7};
	cvt.rn.f16.f32 	%rs9, %f384;
	cvt.rn.f16.f32 	%rs10, %f383;
	mov.b32 	%r162, {%rs10, %rs9};
	cvt.rn.f16.f32 	%rs11, %f386;
	cvt.rn.f16.f32 	%rs12, %f385;
	mov.b32 	%r163, {%rs12, %rs11};
	cvt.rn.f16.f32 	%rs13, %f388;
	cvt.rn.f16.f32 	%rs14, %f387;
	mov.b32 	%r164, {%rs14, %rs13};
	cvt.rn.f16.f32 	%rs15, %f390;
	cvt.rn.f16.f32 	%rs16, %f389;
	mov.b32 	%r165, {%rs16, %rs15};
	cvt.rn.f16.f32 	%rs17, %f392;
	cvt.rn.f16.f32 	%rs18, %f391;
	mov.b32 	%r166, {%rs18, %rs17};
	cvt.rn.f16.f32 	%rs19, %f394;
	cvt.rn.f16.f32 	%rs20, %f393;
	mov.b32 	%r167, {%rs20, %rs19};
	cvt.rn.f16.f32 	%rs21, %f396;
	cvt.rn.f16.f32 	%rs22, %f395;
	mov.b32 	%r168, {%rs22, %rs21};
	cvt.rn.f16.f32 	%rs23, %f398;
	cvt.rn.f16.f32 	%rs24, %f397;
	mov.b32 	%r169, {%rs24, %rs23};
	cvt.rn.f16.f32 	%rs25, %f400;
	cvt.rn.f16.f32 	%rs26, %f399;
	mov.b32 	%r170, {%rs26, %rs25};
	cvt.rn.f16.f32 	%rs27, %f402;
	cvt.rn.f16.f32 	%rs28, %f401;
	mov.b32 	%r171, {%rs28, %rs27};
	cvt.rn.f16.f32 	%rs29, %f404;
	cvt.rn.f16.f32 	%rs30, %f403;
	mov.b32 	%r172, {%rs30, %rs29};
	cvt.rn.f16.f32 	%rs31, %f406;
	cvt.rn.f16.f32 	%rs32, %f405;
	mov.b32 	%r173, {%rs32, %rs31};
	.loc	1 274 33                        // tutorial_profile.py:274:33
	mul.lo.s32 	%r174, %r7, %r37;
	shl.b32 	%r175, %r37, 5;
	add.s32 	%r176, %r174, %r175;
	add.s32 	%r177, %r176, %r175;
	add.s32 	%r178, %r177, %r175;
	.loc	1 274 21                        // tutorial_profile.py:274:21
	mul.wide.s32 	%rd41, %r174, 2;
	add.s64 	%rd42, %rd16, %rd41;
	mul.wide.s32 	%rd43, %r176, 2;
	add.s64 	%rd44, %rd16, %rd43;
	mul.wide.s32 	%rd45, %r177, 2;
	add.s64 	%rd46, %rd16, %rd45;
	mul.wide.s32 	%rd47, %r178, 2;
	add.s64 	%rd48, %rd16, %rd47;
	.loc	1 274 52                        // tutorial_profile.py:274:52
	mul.wide.s32 	%rd49, %r13, 2;
	add.s64 	%rd37, %rd42, %rd49;
	add.s64 	%rd38, %rd44, %rd49;
	add.s64 	%rd39, %rd46, %rd49;
	add.s64 	%rd40, %rd48, %rd49;
	.loc	1 275 33                        // tutorial_profile.py:275:33
	setp.lt.s32 	%p28, %r7, %r34;
	setp.lt.s32 	%p29, %r8, %r34;
	setp.lt.s32 	%p30, %r9, %r34;
	setp.lt.s32 	%p31, %r10, %r34;
	.loc	1 275 58                        // tutorial_profile.py:275:58
	setp.lt.s32 	%p32, %r13, %r35;
	.loc	1 275 39                        // tutorial_profile.py:275:39
	and.pred  	%p22, %p28, %p32;
	and.pred  	%p23, %p29, %p32;
	and.pred  	%p24, %p30, %p32;
	and.pred  	%p25, %p31, %p32;
	.loc	1 276 21                        // tutorial_profile.py:276:21
	shr.u32 	%r179, %r4, 2;
	and.b32  	%r180, %r17, 6;
	shl.b32 	%r181, %r5, 4;
	and.b32  	%r182, %r181, 112;
	or.b32  	%r183, %r182, %r179;
	and.b32  	%r184, %r11, 192;
	or.b32  	%r185, %r180, %r184;
	mad.lo.s32 	%r186, %r183, 264, %r185;
	shl.b32 	%r187, %r186, 1;
	add.s32 	%r189, %r94, 2048;
	add.s32 	%r190, %r189, %r187;
	st.shared.b32 	[%r190], %r158;
	st.shared.b32 	[%r190+4224], %r159;
	st.shared.b32 	[%r190+16], %r160;
	st.shared.b32 	[%r190+4240], %r161;
	st.shared.b32 	[%r190+32], %r162;
	st.shared.b32 	[%r190+4256], %r163;
	st.shared.b32 	[%r190+48], %r164;
	st.shared.b32 	[%r190+4272], %r165;
	st.shared.b32 	[%r190+64], %r166;
	st.shared.b32 	[%r190+4288], %r167;
	st.shared.b32 	[%r190+80], %r168;
	st.shared.b32 	[%r190+4304], %r169;
	st.shared.b32 	[%r190+96], %r170;
	st.shared.b32 	[%r190+4320], %r171;
	st.shared.b32 	[%r190+112], %r172;
	st.shared.b32 	[%r190+4336], %r173;
	bar.sync 	0;
	shl.b32 	%r191, %r4, 3;
	mad.lo.s32 	%r192, %r6, 264, %r191;
	shl.b32 	%r193, %r192, 1;
	add.s32 	%r194, %r189, %r193;
	ld.shared.v4.u32 	{%r136, %r137, %r138, %r139}, [%r194+16896];
	ld.shared.v4.u32 	{%r140, %r141, %r142, %r143}, [%r194+33792];
	ld.shared.v4.u32 	{%r144, %r145, %r146, %r147}, [%r194+50688];
	ld.shared.v4.u32 	{%r132, %r133, %r134, %r135}, [%r194];
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd37 + 0 ], { %r132, %r133, %r134, %r135 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd38 + 0 ], { %r136, %r137, %r138, %r139 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd39 + 0 ], { %r140, %r141, %r142, %r143 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd40 + 0 ], { %r144, %r145, %r146, %r147 };
	// end inline asm
	.loc	1 183 5                         // tutorial_profile.py:183:5
	// begin inline asm
	mov.u32 %r148, %clock;
	// end inline asm
	.loc	1 10 5                          // tutorial_profile.py:10:5
	and.b32  	%r195, %r3, 127;
	setp.eq.s32 	%p26, %r195, 0;
	and.b32  	%r197, %r17, -256;
	add.s32 	%r149, %r94, %r197;
	// begin inline asm
	@%p26 st.shared.v2.b32 [ %r149 + 0 ], { %r212, %r38 };
	// end inline asm
	.loc	1 183 5                         // tutorial_profile.py:183:5
	add.s32 	%r152, %r149, 8;
	mov.b32 	%r153, -2147483648;
	// begin inline asm
	@%p26 st.shared.v2.b32 [ %r152 + 0 ], { %r153, %r148 };
	// end inline asm
	.loc	1 192 0                         // tutorial_profile.py:192:0
	bar.sync 	0;
	setp.ne.s32 	%p33, %r3, 0;
	// begin inline asm
	mov.u32 %r155, %ctaid.y;
	// end inline asm
	// begin inline asm
	mov.u32 %r156, %ctaid.z;
	// end inline asm
	// begin inline asm
	mov.u32 %r157, %smid;
	// end inline asm
	mov.u32 	%r198, %nctaid.x;
	mov.u32 	%r199, %nctaid.y;
	mad.lo.s32 	%r200, %r156, %r199, %r155;
	mad.lo.s32 	%r30, %r200, %r198, %r39;
	mul.lo.s32 	%r31, %r30, 578;
	shl.b32 	%r201, %r5, 1;
	add.s32 	%r202, %r201, %r31;
	add.s32 	%r203, %r202, 2;
	mul.wide.s32 	%rd50, %r203, 4;
	add.s64 	%rd51, %rd17, %rd50;
	st.global.u32 	[%rd51], %r157;
	mov.b32 	%r204, 4;
	st.global.u32 	[%rd51+4], %r204;
	@%p33 bra 	$L__BB0_6;
// %bb.4:
	mul.wide.s32 	%rd53, %r31, 4;
	add.s64 	%rd54, %rd17, %rd53;
	mov.b32 	%r206, -559038737;
	st.global.u32 	[%rd54], %r206;
	st.global.u32 	[%rd54+4], %r30;
	add.s32 	%r217, %r94, 4;
	cvt.u64.u32 	%rd11, %r31;
	mov.u64 	%rd60, -2;
$L__BB0_5:                              // =>This Inner Loop Header: Depth=1
	add.s64 	%rd55, %rd11, %rd60;
	ld.shared.v2.u32 	{%r208, %r209}, [%r217+-4];
	cvt.u32.u64 	%r210, %rd55;
	add.s32 	%r211, %r210, 68;
	mul.wide.s32 	%rd56, %r211, 4;
	add.s64 	%rd57, %rd17, %rd56;
	st.global.u32 	[%rd57], %r208;
	st.global.u32 	[%rd57+4], %r209;
	add.s64 	%rd60, %rd60, 2;
	add.s32 	%r217, %r217, 8;
	setp.lt.u64 	%p34, %rd60, 510;
	@%p34 bra 	$L__BB0_5;
$L__BB0_6:                              // %.loopexit
	.loc	1 276 4                         // tutorial_profile.py:276:4
	ret;
$L__tmp6:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/srir/tritonbench/tritonbench/operators/fp8_gemm/tutorial_profile.py"
	.file	2 "/home/srir/triton/python/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 116                                 // DW_AT_name
.b8 117
.b8 116
.b8 111
.b8 114
.b8 105
.b8 97
.b8 108
.b8 95
.b8 112
.b8 114
.b8 111
.b8 102
.b8 105
.b8 108
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 115
.b8 114
.b8 105
.b8 114
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 47
.b8 111
.b8 112
.b8 101
.b8 114
.b8 97
.b8 116
.b8 111
.b8 114
.b8 115
.b8 47
.b8 102
.b8 112
.b8 56
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x18 DW_TAG_subprogram
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 95
.b8 112
.b8 114
.b8 111
.b8 102
.b8 105
.b8 108
.b8 101
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7b:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x90:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 226                                 // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xa8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 227                                 // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 254                                 // DW_AT_call_line
.b8 33                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
