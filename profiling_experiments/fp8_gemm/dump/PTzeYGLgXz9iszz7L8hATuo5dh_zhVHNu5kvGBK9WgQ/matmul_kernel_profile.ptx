//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	matmul_kernel_profile   // -- Begin function matmul_kernel_profile
.extern .shared .align 16 .b8 global_smem[];
                                        // @matmul_kernel_profile
.visible .entry matmul_kernel_profile(
	.param .u64 matmul_kernel_profile_param_0,
	.param .u64 matmul_kernel_profile_param_1,
	.param .u64 matmul_kernel_profile_param_2,
	.param .u32 matmul_kernel_profile_param_3,
	.param .u32 matmul_kernel_profile_param_4,
	.param .u32 matmul_kernel_profile_param_5,
	.param .u32 matmul_kernel_profile_param_6,
	.param .u32 matmul_kernel_profile_param_7,
	.param .u32 matmul_kernel_profile_param_8,
	.param .u64 matmul_kernel_profile_param_9
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<43>;
	.reg .b16 	%rs<65>;
	.reg .b32 	%r<264>;
	.reg .f32 	%f<855>;
	.reg .b64 	%rd<82>;
	.loc	1 192 0                         // tutorial_profile.py:192:0
$L__func_begin0:
	.loc	1 192 0                         // tutorial_profile.py:192:0

// %bb.0:
	ld.param.u64 	%rd21, [matmul_kernel_profile_param_9];
	ld.param.u32 	%r40, [matmul_kernel_profile_param_8];
	ld.param.u32 	%r39, [matmul_kernel_profile_param_5];
	ld.param.u32 	%r38, [matmul_kernel_profile_param_4];
	ld.param.u32 	%r37, [matmul_kernel_profile_param_3];
	ld.param.u64 	%rd20, [matmul_kernel_profile_param_2];
	ld.param.u64 	%rd19, [matmul_kernel_profile_param_1];
	ld.param.u64 	%rd18, [matmul_kernel_profile_param_0];
$L__tmp0:
	.loc	1 10 5                          // tutorial_profile.py:10:5
	// begin inline asm
	mov.u32 %r41, %clock;
	// end inline asm
	.loc	1 225 24                        // tutorial_profile.py:225:24
	// begin inline asm
	mov.u32 %r42, %ctaid.x;
	// end inline asm
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r55, %r37, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r56, %r55, 31;
	shr.u32 	%r57, %r56, 25;
	add.s32 	%r58, %r55, %r57;
	shr.s32 	%r59, %r58, 7;
$L__tmp2:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r60, %r38, 255;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r61, %r60, 31;
	shr.u32 	%r62, %r61, 24;
	add.s32 	%r63, %r60, %r62;
	shr.s32 	%r64, %r63, 8;
	ld.param.u32 	%r66, [matmul_kernel_profile_param_6];
$L__tmp3:
	.loc	1 228 38                        // tutorial_profile.py:228:38
	shl.b32 	%r67, %r64, 3;
	ld.param.u32 	%r68, [matmul_kernel_profile_param_7];
	.loc	1 229 22                        // tutorial_profile.py:229:22
	div.s32 	%r69, %r42, %r67;
	.loc	1 230 29                        // tutorial_profile.py:230:29
	shl.b32 	%r70, %r69, 3;
	.loc	1 231 35                        // tutorial_profile.py:231:35
	sub.s32 	%r71, %r59, %r70;
	.loc	1 231 48                        // tutorial_profile.py:231:48
	min.s32 	%r73, %r71, 8;
	.loc	1 232 34                        // tutorial_profile.py:232:34
	mul.lo.s32 	%r74, %r69, %r67;
	sub.s32 	%r75, %r42, %r74;
	.loc	1 233 40                        // tutorial_profile.py:233:40
	div.s32 	%r76, %r75, %r73;
	.loc	1 232 54                        // tutorial_profile.py:232:54
	mul.lo.s32 	%r77, %r76, %r73;
	sub.s32 	%r78, %r75, %r77;
	.loc	1 232 27                        // tutorial_profile.py:232:27
	add.s32 	%r79, %r78, %r70;
	.loc	1 242 23                        // tutorial_profile.py:242:23
	shl.b32 	%r80, %r79, 7;
	.loc	1 242 51                        // tutorial_profile.py:242:51
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 31;
	shr.u32 	%r5, %r3, 5;
	bfe.u32 	%r81, %r3, 2, 7;
	bfe.u32 	%r6, %r3, 5, 4;
	.loc	1 242 38                        // tutorial_profile.py:242:38
	or.b32  	%r82, %r80, %r81;
	or.b32  	%r7, %r80, %r6;
	or.b32  	%r8, %r7, 16;
	or.b32  	%r9, %r7, 32;
	or.b32  	%r10, %r7, 48;
	or.b32  	%r11, %r7, 64;
	or.b32  	%r12, %r7, 80;
	or.b32  	%r13, %r7, 96;
	or.b32  	%r14, %r7, 112;
	.loc	1 242 68                        // tutorial_profile.py:242:68
	rem.s32 	%r83, %r82, %r37;
	.loc	1 243 23                        // tutorial_profile.py:243:23
	shl.b32 	%r84, %r76, 8;
	.loc	1 243 51                        // tutorial_profile.py:243:51
	shl.b32 	%r85, %r3, 3;
	and.b32  	%r86, %r85, 248;
	.loc	1 243 38                        // tutorial_profile.py:243:38
	or.b32  	%r87, %r84, %r81;
	or.b32  	%r88, %r87, 128;
	or.b32  	%r15, %r84, %r86;
	.loc	1 243 68                        // tutorial_profile.py:243:68
	rem.s32 	%r89, %r87, %r38;
	rem.s32 	%r90, %r88, %r38;
	.loc	1 245 60                        // tutorial_profile.py:245:60
	shl.b32 	%r91, %r3, 4;
	and.b32  	%r16, %r91, 48;
	.loc	1 245 53                        // tutorial_profile.py:245:53
	mad.lo.s32 	%r92, %r83, %r66, %r16;
	.loc	1 245 22                        // tutorial_profile.py:245:22
	cvt.s64.s32 	%rd1, %r92;
	add.s64 	%rd22, %rd18, %rd1;
	.loc	1 246 52                        // tutorial_profile.py:246:52
	mad.lo.s32 	%r93, %r89, %r68, %r16;
	mad.lo.s32 	%r94, %r90, %r68, %r16;
	.loc	1 246 22                        // tutorial_profile.py:246:22
	cvt.s64.s32 	%rd2, %r93;
	add.s64 	%rd23, %rd19, %rd2;
	cvt.s64.s32 	%rd3, %r94;
	add.s64 	%rd24, %rd19, %rd3;
$L__tmp4:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r95, %r39, 63;
$L__tmp5:
	.loc	1 254 22                        // tutorial_profile.py:254:22
	setp.lt.s32 	%p7, %r95, 64;
	setp.gt.s32 	%p8, %r95, 63;
	.loc	1 257 51                        // tutorial_profile.py:257:51
	setp.lt.s32 	%p9, %r16, %r39;
	.loc	1 257 20                        // tutorial_profile.py:257:20
	shl.b32 	%r18, %r3, 1;
	xor.b32  	%r99, %r18, %r91;
	and.b32  	%r100, %r99, 48;
	shl.b32 	%r101, %r81, 6;
	or.b32  	%r19, %r100, %r101;
	mov.u32 	%r102, global_smem;
	add.s32 	%r103, %r102, %r19;
	add.s32 	%r43, %r103, 2048;
	selp.b32 	%r104, 16, 0, %p8;
	selp.b32 	%r46, %r104, 0, %p9;
	mov.pred 	%p1, -1;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r43 + 0 ], [ %rd22 + 0 ], 0x10, %r46;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 258 20                        // tutorial_profile.py:258:20
	add.s32 	%r105, %r102, 26624;
	add.s32 	%r45, %r105, %r19;
	and.b32  	%r106, %r91, 8128;
	or.b32  	%r21, %r106, %r100;
	add.s32 	%r107, %r105, %r21;
	add.s32 	%r47, %r107, 8192;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r45 + 0 ], [ %rd23 + 0 ], 0x10, %r46;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r47 + 0 ], [ %rd24 + 0 ], 0x10, %r46;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 254 22                        // tutorial_profile.py:254:22
	setp.gt.s32 	%p10, %r95, 127;
	.loc	1 262 18                        // tutorial_profile.py:262:18
	add.s64 	%rd25, %rd22, 64;
	.loc	1 263 18                        // tutorial_profile.py:263:18
	add.s64 	%rd26, %rd23, 64;
	add.s64 	%rd27, %rd24, 64;
	.loc	1 257 55                        // tutorial_profile.py:257:55
	add.s32 	%r108, %r39, -64;
	.loc	1 257 51                        // tutorial_profile.py:257:51
	setp.lt.s32 	%p11, %r16, %r108;
	.loc	1 257 20                        // tutorial_profile.py:257:20
	bar.sync 	0;
	add.s32 	%r49, %r103, 10240;
	selp.b32 	%r109, 16, 0, %p11;
	selp.b32 	%r52, %r109, 0, %p10;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r49 + 0 ], [ %rd25 + 0 ], 0x10, %r52;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 258 20                        // tutorial_profile.py:258:20
	add.s32 	%r110, %r102, 43008;
	add.s32 	%r51, %r110, %r19;
	add.s32 	%r111, %r110, %r21;
	add.s32 	%r53, %r111, 8192;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r51 + 0 ], [ %rd26 + 0 ], 0x10, %r52;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r53 + 0 ], [ %rd27 + 0 ], 0x10, %r52;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	mov.f32 	%f727, 0f00000000;
	mov.b32 	%r258, 0;
	mov.f32 	%f728, %f727;
	mov.f32 	%f729, %f727;
	mov.f32 	%f730, %f727;
	mov.f32 	%f731, %f727;
	mov.f32 	%f732, %f727;
	mov.f32 	%f733, %f727;
	mov.f32 	%f734, %f727;
	mov.f32 	%f735, %f727;
	mov.f32 	%f736, %f727;
	mov.f32 	%f737, %f727;
	mov.f32 	%f738, %f727;
	mov.f32 	%f739, %f727;
	mov.f32 	%f740, %f727;
	mov.f32 	%f741, %f727;
	mov.f32 	%f742, %f727;
	mov.f32 	%f743, %f727;
	mov.f32 	%f744, %f727;
	mov.f32 	%f745, %f727;
	mov.f32 	%f746, %f727;
	mov.f32 	%f747, %f727;
	mov.f32 	%f748, %f727;
	mov.f32 	%f749, %f727;
	mov.f32 	%f750, %f727;
	mov.f32 	%f751, %f727;
	mov.f32 	%f752, %f727;
	mov.f32 	%f753, %f727;
	mov.f32 	%f754, %f727;
	mov.f32 	%f755, %f727;
	mov.f32 	%f756, %f727;
	mov.f32 	%f757, %f727;
	mov.f32 	%f758, %f727;
	mov.f32 	%f759, %f727;
	mov.f32 	%f760, %f727;
	mov.f32 	%f761, %f727;
	mov.f32 	%f762, %f727;
	mov.f32 	%f763, %f727;
	mov.f32 	%f764, %f727;
	mov.f32 	%f765, %f727;
	mov.f32 	%f766, %f727;
	mov.f32 	%f767, %f727;
	mov.f32 	%f768, %f727;
	mov.f32 	%f769, %f727;
	mov.f32 	%f770, %f727;
	mov.f32 	%f771, %f727;
	mov.f32 	%f772, %f727;
	mov.f32 	%f773, %f727;
	mov.f32 	%f774, %f727;
	mov.f32 	%f775, %f727;
	mov.f32 	%f776, %f727;
	mov.f32 	%f777, %f727;
	mov.f32 	%f778, %f727;
	mov.f32 	%f779, %f727;
	mov.f32 	%f780, %f727;
	mov.f32 	%f781, %f727;
	mov.f32 	%f782, %f727;
	mov.f32 	%f783, %f727;
	mov.f32 	%f784, %f727;
	mov.f32 	%f785, %f727;
	mov.f32 	%f786, %f727;
	mov.f32 	%f787, %f727;
	mov.f32 	%f788, %f727;
	mov.f32 	%f789, %f727;
	mov.f32 	%f790, %f727;
	.loc	1 254 22                        // tutorial_profile.py:254:22
	@%p7 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph
	.loc	1 0 22                          // tutorial_profile.py:0:22
	shr.s32 	%r96, %r95, 31;
	shr.u32 	%r97, %r96, 26;
	add.s32 	%r98, %r95, %r97;
	shr.s32 	%r17, %r98, 6;
	add.s32 	%r22, %r17, -2;
	and.b32  	%r23, %r5, 134217724;
	and.b32  	%r115, %r18, 512;
	cvt.u64.u32 	%rd28, %r115;
	or.b64  	%rd4, %rd28, -9223371899348713472;
	or.b64  	%rd5, %rd28, -9223371899348713470;
	add.s32 	%r259, %r39, -128;
	.loc	1 254 22                        // tutorial_profile.py:254:22
	add.s64 	%rd29, %rd3, %rd19;
	add.s64 	%rd80, %rd29, 128;
	add.s64 	%rd30, %rd2, %rd19;
	add.s64 	%rd79, %rd30, 128;
	add.s64 	%rd31, %rd1, %rd18;
	add.s64 	%rd78, %rd31, 128;
	mov.f32 	%f592, 0f00000000;
	mov.b32 	%r261, 1;
	mov.b32 	%r260, -1;
	mov.f32 	%f591, 0f00000001;
	mov.f32 	%f590, 0f00000040;
	mov.f32 	%f727, %f592;
	mov.f32 	%f728, %f592;
	mov.f32 	%f729, %f592;
	mov.f32 	%f730, %f592;
	mov.f32 	%f731, %f592;
	mov.f32 	%f732, %f592;
	mov.f32 	%f733, %f592;
	mov.f32 	%f734, %f592;
	mov.f32 	%f735, %f592;
	mov.f32 	%f736, %f592;
	mov.f32 	%f737, %f592;
	mov.f32 	%f738, %f592;
	mov.f32 	%f739, %f592;
	mov.f32 	%f740, %f592;
	mov.f32 	%f741, %f592;
	mov.f32 	%f742, %f592;
	mov.f32 	%f743, %f592;
	mov.f32 	%f744, %f592;
	mov.f32 	%f745, %f592;
	mov.f32 	%f746, %f592;
	mov.f32 	%f747, %f592;
	mov.f32 	%f748, %f592;
	mov.f32 	%f749, %f592;
	mov.f32 	%f750, %f592;
	mov.f32 	%f751, %f592;
	mov.f32 	%f752, %f592;
	mov.f32 	%f753, %f592;
	mov.f32 	%f754, %f592;
	mov.f32 	%f755, %f592;
	mov.f32 	%f756, %f592;
	mov.f32 	%f757, %f592;
	mov.f32 	%f758, %f592;
	mov.f32 	%f759, %f592;
	mov.f32 	%f760, %f592;
	mov.f32 	%f761, %f592;
	mov.f32 	%f762, %f592;
	mov.f32 	%f763, %f592;
	mov.f32 	%f764, %f592;
	mov.f32 	%f765, %f592;
	mov.f32 	%f766, %f592;
	mov.f32 	%f767, %f592;
	mov.f32 	%f768, %f592;
	mov.f32 	%f769, %f592;
	mov.f32 	%f770, %f592;
	mov.f32 	%f771, %f592;
	mov.f32 	%f772, %f592;
	mov.f32 	%f773, %f592;
	mov.f32 	%f774, %f592;
	mov.f32 	%f775, %f592;
	mov.f32 	%f776, %f592;
	mov.f32 	%f777, %f592;
	mov.f32 	%f778, %f592;
	mov.f32 	%f779, %f592;
	mov.f32 	%f780, %f592;
	mov.f32 	%f781, %f592;
	mov.f32 	%f782, %f592;
	mov.f32 	%f783, %f592;
	mov.f32 	%f784, %f592;
	mov.f32 	%f785, %f592;
	mov.f32 	%f786, %f592;
	mov.f32 	%f787, %f592;
	mov.f32 	%f788, %f592;
	mov.f32 	%f789, %f592;
	mov.f32 	%f790, %f592;
	mov.u32 	%r262, %r258;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	setp.lt.s32 	%p17, %r262, %r22;
	add.s32 	%r122, %r260, 1;
	setp.lt.s32 	%p18, %r122, 3;
	selp.b32 	%r260, %r122, 0, %p18;
	.loc	1 257 20                        // tutorial_profile.py:257:20
	shl.b32 	%r123, %r260, 13;
	add.s32 	%r125, %r102, %r123;
	add.s32 	%r126, %r125, 2048;
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	.loc	1 258 20                        // tutorial_profile.py:258:20
	shl.b32 	%r127, %r260, 14;
	add.s32 	%r129, %r105, %r127;
	.loc	1 260 35                        // tutorial_profile.py:260:35
	shfl.sync.idx.b32	%r130, %r23, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r131, %r130, 6;
	and.b32  	%r132, %r131, 448;
	cvt.u64.u32 	%rd39, %r132;
	shr.u32 	%r133, %r126, 4;
	cvt.u64.u32 	%rd40, %r133;
	and.b64  	%rd41, %rd40, 16383;
	add.s64 	%rd42, %rd41, %rd39;
	or.b64  	%rd32, %rd42, -9223371899382267904;
	shr.u32 	%r134, %r129, 4;
	cvt.u64.u32 	%rd43, %r134;
	and.b64  	%rd44, %rd43, 16383;
	add.s64 	%rd33, %rd4, %rd44;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k32.f32.e4m3.e4m3 {%f727,%f728,%f729,%f730,%f731,%f732,%f733,%f734,%f735,%f736,%f737,%f738,%f739,%f740,%f741,%f742,%f743,%f744,%f745,%f746,%f747,%f748,%f749,%f750,%f751,%f752,%f753,%f754,%f755,%f756,%f757,%f758,%f759,%f760,%f761,%f762,%f763,%f764,%f765,%f766,%f767,%f768,%f769,%f770,%f771,%f772,%f773,%f774,%f775,%f776,%f777,%f778,%f779,%f780,%f781,%f782,%f783,%f784,%f785,%f786,%f787,%f788,%f789,%f790}, %rd32, %rd33, %p1, 1, 1;
	// end inline asm
	add.s64 	%rd34, %rd42, -9223371899382267902;
	add.s64 	%rd35, %rd5, %rd44;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k32.f32.e4m3.e4m3 {%f727,%f728,%f729,%f730,%f731,%f732,%f733,%f734,%f735,%f736,%f737,%f738,%f739,%f740,%f741,%f742,%f743,%f744,%f745,%f746,%f747,%f748,%f749,%f750,%f751,%f752,%f753,%f754,%f755,%f756,%f757,%f758,%f759,%f760,%f761,%f762,%f763,%f764,%f765,%f766,%f767,%f768,%f769,%f770,%f771,%f772,%f773,%f774,%f775,%f776,%f777,%f778,%f779,%f780,%f781,%f782,%f783,%f784,%f785,%f786,%f787,%f788,%f789,%f790}, %rd34, %rd35, %p1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%f520, %r129;
	mov.b32 	%f515, %r126;
	mov.f32 	%f518, %f592;
	mov.f32 	%f519, %f592;
	mov.f32 	%f523, %f592;
	mov.f32 	%f522, %f590;
	mov.f32 	%f524, %f592;
	mov.f32 	%f516, %f590;
	mov.f32 	%f517, %f591;
	mov.f32 	%f521, %f591;
	// begin inline asm
	// wait for regs: %f727,%f728,%f729,%f730,%f731,%f732,%f733,%f734,%f735,%f736,%f737,%f738,%f739,%f740,%f741,%f742,%f743,%f744,%f745,%f746,%f747,%f748,%f749,%f750,%f751,%f752,%f753,%f754,%f755,%f756,%f757,%f758,%f759,%f760,%f761,%f762,%f763,%f764,%f765,%f766,%f767,%f768,%f769,%f770,%f771,%f772,%f773,%f774,%f775,%f776,%f777,%f778,%f779,%f780,%f781,%f782,%f783,%f784,%f785,%f786,%f787,%f788,%f789,%f790,%f515,%f516,%f517,%f518,%f519,%f520,%f521,%f522,%f523,%f524
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 254 22                        // tutorial_profile.py:254:22
	add.s32 	%r135, %r261, 1;
	setp.lt.s32 	%p19, %r135, 3;
	selp.b32 	%r261, %r135, 0, %p19;
	.loc	1 257 51                        // tutorial_profile.py:257:51
	setp.lt.s32 	%p20, %r16, %r259;
	.loc	1 257 20                        // tutorial_profile.py:257:20
	shl.b32 	%r136, %r261, 13;
	bar.sync 	0;
	add.s32 	%r116, %r43, %r136;
	selp.b32 	%r137, 16, 0, %p20;
	selp.b32 	%r119, %r137, 0, %p17;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r116 + 0 ], [ %rd78 + 0 ], 0x10, %r119;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 258 20                        // tutorial_profile.py:258:20
	shl.b32 	%r138, %r261, 14;
	add.s32 	%r139, %r105, %r138;
	add.s32 	%r118, %r139, %r19;
	add.s32 	%r140, %r139, %r21;
	add.s32 	%r120, %r140, 8192;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r118 + 0 ], [ %rd79 + 0 ], 0x10, %r119;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r120 + 0 ], [ %rd80 + 0 ], 0x10, %r119;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 254 22                        // tutorial_profile.py:254:22
	add.s32 	%r262, %r262, 1;
	add.s64 	%rd80, %rd80, 64;
	add.s64 	%rd79, %rd79, 64;
	add.s64 	%rd78, %rd78, 64;
	add.s32 	%r259, %r259, -64;
	setp.ne.s32 	%p21, %r17, %r262;
	@%p21 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	// begin inline asm
	// wait for regs: %f727,%f728,%f729,%f730,%f731,%f732,%f733,%f734,%f735,%f736,%f737,%f738,%f739,%f740,%f741,%f742,%f743,%f744,%f745,%f746,%f747,%f748,%f749,%f750,%f751,%f752,%f753,%f754,%f755,%f756,%f757,%f758,%f759,%f760,%f761,%f762,%f763,%f764,%f765,%f766,%f767,%f768,%f769,%f770,%f771,%f772,%f773,%f774,%f775,%f776,%f777,%f778,%f779,%f780,%f781,%f782,%f783,%f784,%f785,%f786,%f787,%f788,%f789,%f790
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	.loc	1 268 23                        // tutorial_profile.py:268:23
	cvt.rn.f16.f32 	%rs1, %f728;
	cvt.rn.f16.f32 	%rs2, %f727;
	mov.b32 	%r183, {%rs2, %rs1};
	cvt.rn.f16.f32 	%rs3, %f730;
	cvt.rn.f16.f32 	%rs4, %f729;
	mov.b32 	%r184, {%rs4, %rs3};
	cvt.rn.f16.f32 	%rs5, %f732;
	cvt.rn.f16.f32 	%rs6, %f731;
	mov.b32 	%r185, {%rs6, %rs5};
	cvt.rn.f16.f32 	%rs7, %f734;
	cvt.rn.f16.f32 	%rs8, %f733;
	mov.b32 	%r186, {%rs8, %rs7};
	cvt.rn.f16.f32 	%rs9, %f736;
	cvt.rn.f16.f32 	%rs10, %f735;
	mov.b32 	%r187, {%rs10, %rs9};
	cvt.rn.f16.f32 	%rs11, %f738;
	cvt.rn.f16.f32 	%rs12, %f737;
	mov.b32 	%r188, {%rs12, %rs11};
	cvt.rn.f16.f32 	%rs13, %f740;
	cvt.rn.f16.f32 	%rs14, %f739;
	mov.b32 	%r189, {%rs14, %rs13};
	cvt.rn.f16.f32 	%rs15, %f742;
	cvt.rn.f16.f32 	%rs16, %f741;
	mov.b32 	%r190, {%rs16, %rs15};
	cvt.rn.f16.f32 	%rs17, %f744;
	cvt.rn.f16.f32 	%rs18, %f743;
	mov.b32 	%r191, {%rs18, %rs17};
	cvt.rn.f16.f32 	%rs19, %f746;
	cvt.rn.f16.f32 	%rs20, %f745;
	mov.b32 	%r192, {%rs20, %rs19};
	cvt.rn.f16.f32 	%rs21, %f748;
	cvt.rn.f16.f32 	%rs22, %f747;
	mov.b32 	%r193, {%rs22, %rs21};
	cvt.rn.f16.f32 	%rs23, %f750;
	cvt.rn.f16.f32 	%rs24, %f749;
	mov.b32 	%r194, {%rs24, %rs23};
	cvt.rn.f16.f32 	%rs25, %f752;
	cvt.rn.f16.f32 	%rs26, %f751;
	mov.b32 	%r195, {%rs26, %rs25};
	cvt.rn.f16.f32 	%rs27, %f754;
	cvt.rn.f16.f32 	%rs28, %f753;
	mov.b32 	%r196, {%rs28, %rs27};
	cvt.rn.f16.f32 	%rs29, %f756;
	cvt.rn.f16.f32 	%rs30, %f755;
	mov.b32 	%r197, {%rs30, %rs29};
	cvt.rn.f16.f32 	%rs31, %f758;
	cvt.rn.f16.f32 	%rs32, %f757;
	mov.b32 	%r198, {%rs32, %rs31};
	cvt.rn.f16.f32 	%rs33, %f760;
	cvt.rn.f16.f32 	%rs34, %f759;
	mov.b32 	%r199, {%rs34, %rs33};
	cvt.rn.f16.f32 	%rs35, %f762;
	cvt.rn.f16.f32 	%rs36, %f761;
	mov.b32 	%r200, {%rs36, %rs35};
	cvt.rn.f16.f32 	%rs37, %f764;
	cvt.rn.f16.f32 	%rs38, %f763;
	mov.b32 	%r201, {%rs38, %rs37};
	cvt.rn.f16.f32 	%rs39, %f766;
	cvt.rn.f16.f32 	%rs40, %f765;
	mov.b32 	%r202, {%rs40, %rs39};
	cvt.rn.f16.f32 	%rs41, %f768;
	cvt.rn.f16.f32 	%rs42, %f767;
	mov.b32 	%r203, {%rs42, %rs41};
	cvt.rn.f16.f32 	%rs43, %f770;
	cvt.rn.f16.f32 	%rs44, %f769;
	mov.b32 	%r204, {%rs44, %rs43};
	cvt.rn.f16.f32 	%rs45, %f772;
	cvt.rn.f16.f32 	%rs46, %f771;
	mov.b32 	%r205, {%rs46, %rs45};
	cvt.rn.f16.f32 	%rs47, %f774;
	cvt.rn.f16.f32 	%rs48, %f773;
	mov.b32 	%r206, {%rs48, %rs47};
	cvt.rn.f16.f32 	%rs49, %f776;
	cvt.rn.f16.f32 	%rs50, %f775;
	mov.b32 	%r207, {%rs50, %rs49};
	cvt.rn.f16.f32 	%rs51, %f778;
	cvt.rn.f16.f32 	%rs52, %f777;
	mov.b32 	%r208, {%rs52, %rs51};
	cvt.rn.f16.f32 	%rs53, %f780;
	cvt.rn.f16.f32 	%rs54, %f779;
	mov.b32 	%r209, {%rs54, %rs53};
	cvt.rn.f16.f32 	%rs55, %f782;
	cvt.rn.f16.f32 	%rs56, %f781;
	mov.b32 	%r210, {%rs56, %rs55};
	cvt.rn.f16.f32 	%rs57, %f784;
	cvt.rn.f16.f32 	%rs58, %f783;
	mov.b32 	%r211, {%rs58, %rs57};
	cvt.rn.f16.f32 	%rs59, %f786;
	cvt.rn.f16.f32 	%rs60, %f785;
	mov.b32 	%r212, {%rs60, %rs59};
	cvt.rn.f16.f32 	%rs61, %f788;
	cvt.rn.f16.f32 	%rs62, %f787;
	mov.b32 	%r213, {%rs62, %rs61};
	cvt.rn.f16.f32 	%rs63, %f790;
	cvt.rn.f16.f32 	%rs64, %f789;
	mov.b32 	%r214, {%rs64, %rs63};
	.loc	1 274 33                        // tutorial_profile.py:274:33
	mul.lo.s32 	%r215, %r7, %r40;
	shl.b32 	%r216, %r40, 4;
	add.s32 	%r217, %r215, %r216;
	add.s32 	%r218, %r217, %r216;
	add.s32 	%r219, %r218, %r216;
	add.s32 	%r220, %r219, %r216;
	add.s32 	%r221, %r220, %r216;
	add.s32 	%r222, %r221, %r216;
	add.s32 	%r223, %r222, %r216;
	.loc	1 274 21                        // tutorial_profile.py:274:21
	mul.wide.s32 	%rd53, %r215, 2;
	add.s64 	%rd54, %rd20, %rd53;
	mul.wide.s32 	%rd55, %r217, 2;
	add.s64 	%rd56, %rd20, %rd55;
	mul.wide.s32 	%rd57, %r218, 2;
	add.s64 	%rd58, %rd20, %rd57;
	mul.wide.s32 	%rd59, %r219, 2;
	add.s64 	%rd60, %rd20, %rd59;
	mul.wide.s32 	%rd61, %r220, 2;
	add.s64 	%rd62, %rd20, %rd61;
	mul.wide.s32 	%rd63, %r221, 2;
	add.s64 	%rd64, %rd20, %rd63;
	mul.wide.s32 	%rd65, %r222, 2;
	add.s64 	%rd66, %rd20, %rd65;
	mul.wide.s32 	%rd67, %r223, 2;
	add.s64 	%rd68, %rd20, %rd67;
	.loc	1 274 52                        // tutorial_profile.py:274:52
	mul.wide.s32 	%rd69, %r15, 2;
	add.s64 	%rd45, %rd54, %rd69;
	add.s64 	%rd46, %rd56, %rd69;
	add.s64 	%rd47, %rd58, %rd69;
	add.s64 	%rd48, %rd60, %rd69;
	add.s64 	%rd49, %rd62, %rd69;
	add.s64 	%rd50, %rd64, %rd69;
	add.s64 	%rd51, %rd66, %rd69;
	add.s64 	%rd52, %rd68, %rd69;
	.loc	1 275 33                        // tutorial_profile.py:275:33
	setp.lt.s32 	%p32, %r7, %r37;
	setp.lt.s32 	%p33, %r8, %r37;
	setp.lt.s32 	%p34, %r9, %r37;
	setp.lt.s32 	%p35, %r10, %r37;
	setp.lt.s32 	%p36, %r11, %r37;
	setp.lt.s32 	%p37, %r12, %r37;
	setp.lt.s32 	%p38, %r13, %r37;
	setp.lt.s32 	%p39, %r14, %r37;
	.loc	1 275 58                        // tutorial_profile.py:275:58
	setp.lt.s32 	%p40, %r15, %r38;
	.loc	1 275 39                        // tutorial_profile.py:275:39
	and.pred  	%p22, %p32, %p40;
	and.pred  	%p23, %p33, %p40;
	and.pred  	%p24, %p34, %p40;
	and.pred  	%p25, %p35, %p40;
	and.pred  	%p26, %p36, %p40;
	and.pred  	%p27, %p37, %p40;
	and.pred  	%p28, %p38, %p40;
	and.pred  	%p29, %p39, %p40;
	.loc	1 276 21                        // tutorial_profile.py:276:21
	shr.u32 	%r224, %r4, 2;
	and.b32  	%r225, %r18, 6;
	shl.b32 	%r226, %r5, 4;
	and.b32  	%r227, %r226, 112;
	or.b32  	%r228, %r227, %r224;
	shr.u32 	%r229, %r3, 1;
	and.b32  	%r230, %r229, 128;
	or.b32  	%r231, %r225, %r230;
	mad.lo.s32 	%r232, %r228, 264, %r231;
	shl.b32 	%r233, %r232, 1;
	add.s32 	%r235, %r102, 2048;
	add.s32 	%r236, %r235, %r233;
	st.shared.b32 	[%r236], %r183;
	st.shared.b32 	[%r236+4224], %r184;
	st.shared.b32 	[%r236+16], %r185;
	st.shared.b32 	[%r236+4240], %r186;
	st.shared.b32 	[%r236+32], %r187;
	st.shared.b32 	[%r236+4256], %r188;
	st.shared.b32 	[%r236+48], %r189;
	st.shared.b32 	[%r236+4272], %r190;
	st.shared.b32 	[%r236+64], %r191;
	st.shared.b32 	[%r236+4288], %r192;
	st.shared.b32 	[%r236+80], %r193;
	st.shared.b32 	[%r236+4304], %r194;
	st.shared.b32 	[%r236+96], %r195;
	st.shared.b32 	[%r236+4320], %r196;
	st.shared.b32 	[%r236+112], %r197;
	st.shared.b32 	[%r236+4336], %r198;
	st.shared.b32 	[%r236+128], %r199;
	st.shared.b32 	[%r236+4352], %r200;
	st.shared.b32 	[%r236+144], %r201;
	st.shared.b32 	[%r236+4368], %r202;
	st.shared.b32 	[%r236+160], %r203;
	st.shared.b32 	[%r236+4384], %r204;
	st.shared.b32 	[%r236+176], %r205;
	st.shared.b32 	[%r236+4400], %r206;
	st.shared.b32 	[%r236+192], %r207;
	st.shared.b32 	[%r236+4416], %r208;
	st.shared.b32 	[%r236+208], %r209;
	st.shared.b32 	[%r236+4432], %r210;
	st.shared.b32 	[%r236+224], %r211;
	st.shared.b32 	[%r236+4448], %r212;
	st.shared.b32 	[%r236+240], %r213;
	st.shared.b32 	[%r236+4464], %r214;
	bar.sync 	0;
	shl.b32 	%r237, %r4, 3;
	mad.lo.s32 	%r238, %r6, 264, %r237;
	shl.b32 	%r239, %r238, 1;
	add.s32 	%r240, %r235, %r239;
	ld.shared.v4.u32 	{%r141, %r142, %r143, %r144}, [%r240];
	ld.shared.v4.u32 	{%r145, %r146, %r147, %r148}, [%r240+8448];
	ld.shared.v4.u32 	{%r149, %r150, %r151, %r152}, [%r240+16896];
	ld.shared.v4.u32 	{%r153, %r154, %r155, %r156}, [%r240+25344];
	ld.shared.v4.u32 	{%r157, %r158, %r159, %r160}, [%r240+33792];
	ld.shared.v4.u32 	{%r161, %r162, %r163, %r164}, [%r240+42240];
	ld.shared.v4.u32 	{%r165, %r166, %r167, %r168}, [%r240+50688];
	ld.shared.v4.u32 	{%r169, %r170, %r171, %r172}, [%r240+59136];
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd45 + 0 ], { %r141, %r142, %r143, %r144 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd46 + 0 ], { %r145, %r146, %r147, %r148 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd47 + 0 ], { %r149, %r150, %r151, %r152 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd48 + 0 ], { %r153, %r154, %r155, %r156 };
	// end inline asm
	// begin inline asm
	@%p26 st.global.v4.b32 [ %rd49 + 0 ], { %r157, %r158, %r159, %r160 };
	// end inline asm
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd50 + 0 ], { %r161, %r162, %r163, %r164 };
	// end inline asm
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd51 + 0 ], { %r165, %r166, %r167, %r168 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd52 + 0 ], { %r169, %r170, %r171, %r172 };
	// end inline asm
	.loc	1 183 5                         // tutorial_profile.py:183:5
	// begin inline asm
	mov.u32 %r173, %clock;
	// end inline asm
	.loc	1 10 5                          // tutorial_profile.py:10:5
	and.b32  	%r241, %r3, 1073741696;
	and.b32  	%r242, %r3, 127;
	setp.eq.s32 	%p30, %r242, 0;
	shl.b32 	%r243, %r241, 2;
	add.s32 	%r174, %r102, %r243;
	// begin inline asm
	@%p30 st.shared.v2.b32 [ %r174 + 0 ], { %r258, %r41 };
	// end inline asm
	.loc	1 183 5                         // tutorial_profile.py:183:5
	add.s32 	%r177, %r174, 8;
	mov.b32 	%r178, -2147483648;
	// begin inline asm
	@%p30 st.shared.v2.b32 [ %r177 + 0 ], { %r178, %r173 };
	// end inline asm
	.loc	1 192 0                         // tutorial_profile.py:192:0
	bar.sync 	0;
	setp.ne.s32 	%p41, %r3, 0;
	// begin inline asm
	mov.u32 %r180, %ctaid.y;
	// end inline asm
	// begin inline asm
	mov.u32 %r181, %ctaid.z;
	// end inline asm
	// begin inline asm
	mov.u32 %r182, %smid;
	// end inline asm
	mov.u32 	%r244, %nctaid.x;
	mov.u32 	%r245, %nctaid.y;
	mad.lo.s32 	%r246, %r181, %r245, %r180;
	mad.lo.s32 	%r33, %r246, %r244, %r42;
	mul.lo.s32 	%r34, %r33, 546;
	shl.b32 	%r247, %r5, 1;
	add.s32 	%r248, %r247, %r34;
	add.s32 	%r249, %r248, 2;
	mul.wide.s32 	%rd70, %r249, 4;
	add.s64 	%rd71, %rd21, %rd70;
	st.global.u32 	[%rd71], %r182;
	mov.b32 	%r250, 4;
	st.global.u32 	[%rd71+4], %r250;
	@%p41 bra 	$L__BB0_6;
// %bb.4:
	mul.wide.s32 	%rd73, %r34, 4;
	add.s64 	%rd74, %rd21, %rd73;
	mov.b32 	%r252, -559038737;
	st.global.u32 	[%rd74], %r252;
	st.global.u32 	[%rd74+4], %r33;
	add.s32 	%r263, %r102, 4;
	cvt.u64.u32 	%rd15, %r34;
	mov.u64 	%rd81, -2;
$L__BB0_5:                              // =>This Inner Loop Header: Depth=1
	add.s64 	%rd75, %rd15, %rd81;
	ld.shared.v2.u32 	{%r254, %r255}, [%r263+-4];
	cvt.u32.u64 	%r256, %rd75;
	add.s32 	%r257, %r256, 36;
	mul.wide.s32 	%rd76, %r257, 4;
	add.s64 	%rd77, %rd21, %rd76;
	st.global.u32 	[%rd77], %r254;
	st.global.u32 	[%rd77+4], %r255;
	add.s64 	%rd81, %rd81, 2;
	add.s32 	%r263, %r263, 8;
	setp.lt.u64 	%p42, %rd81, 510;
	@%p42 bra 	$L__BB0_5;
$L__BB0_6:                              // %.loopexit
	.loc	1 276 4                         // tutorial_profile.py:276:4
	ret;
$L__tmp6:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/srir/tritonbench/tritonbench/operators/fp8_gemm/tutorial_profile.py"
	.file	2 "/home/srir/triton/python/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 116                                 // DW_AT_name
.b8 117
.b8 116
.b8 111
.b8 114
.b8 105
.b8 97
.b8 108
.b8 95
.b8 112
.b8 114
.b8 111
.b8 102
.b8 105
.b8 108
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 115
.b8 114
.b8 105
.b8 114
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 47
.b8 111
.b8 112
.b8 101
.b8 114
.b8 97
.b8 116
.b8 111
.b8 114
.b8 115
.b8 47
.b8 102
.b8 112
.b8 56
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x18 DW_TAG_subprogram
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 95
.b8 112
.b8 114
.b8 111
.b8 102
.b8 105
.b8 108
.b8 101
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7b:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x90:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 226                                 // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xa8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 227                                 // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 254                                 // DW_AT_call_line
.b8 33                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
