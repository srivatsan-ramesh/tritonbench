//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	matmul_kernel_tma_persistent_profile // -- Begin function matmul_kernel_tma_persistent_profile
.extern .shared .align 16 .b8 global_smem[];
                                        // @matmul_kernel_tma_persistent_profile
.visible .entry matmul_kernel_tma_persistent_profile(
	.param .align 64 .b8 matmul_kernel_tma_persistent_profile_param_0[128],
	.param .align 64 .b8 matmul_kernel_tma_persistent_profile_param_1[128],
	.param .align 64 .b8 matmul_kernel_tma_persistent_profile_param_2[128],
	.param .u32 matmul_kernel_tma_persistent_profile_param_3,
	.param .u32 matmul_kernel_tma_persistent_profile_param_4,
	.param .u32 matmul_kernel_tma_persistent_profile_param_5,
	.param .u64 matmul_kernel_tma_persistent_profile_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<61>;
	.reg .b16 	%rs<65>;
	.reg .b32 	%r<505>;
	.reg .f32 	%f<2475>;
	.reg .b64 	%rd<46>;
	.loc	1 199 0                         // persistent_profile.py:199:0
$L__func_begin0:
	.loc	1 199 0                         // persistent_profile.py:199:0

// %bb.0:
	mov.b64 	%rd10, matmul_kernel_tma_persistent_profile_param_0;
	mov.b64 	%rd13, matmul_kernel_tma_persistent_profile_param_1;
$L__tmp0:
	.loc	1 215 30                        // persistent_profile.py:215:30
	mov.u64 	%rd14, %rd13;
	ld.param.u32 	%r117, [matmul_kernel_tma_persistent_profile_param_3];
	cvta.param.u64 	%rd29, %rd14;
	ld.param.u32 	%r118, [matmul_kernel_tma_persistent_profile_param_4];
	mov.u64 	%rd15, %rd10;
	ld.param.u32 	%r119, [matmul_kernel_tma_persistent_profile_param_5];
	cvta.param.u64 	%rd28, %rd15;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r120, %r118, 255;
	add.s32 	%r121, %r117, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r122, %r121, 31;
	shr.u32 	%r123, %r122, 25;
	add.s32 	%r124, %r121, %r123;
	shr.s32 	%r2, %r124, 7;
	shr.s32 	%r125, %r120, 31;
	shr.u32 	%r126, %r125, 24;
	add.s32 	%r127, %r120, %r126;
	shr.s32 	%r128, %r127, 8;
$L__tmp2:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r130, %r119, 127;
$L__tmp3:
	.loc	1 219 28                        // persistent_profile.py:219:28
	mul.lo.s32 	%r131, %r128, %r2;
	.loc	1 221 32                        // persistent_profile.py:221:32
	shr.s32 	%r132, %r130, 31;
	shr.u32 	%r133, %r132, 25;
	add.s32 	%r134, %r130, %r133;
	shr.s32 	%r135, %r134, 7;
	mul.hi.s32 	%r136, %r131, 1041204193;
	.loc	1 222 31                        // persistent_profile.py:222:31
	shr.u32 	%r137, %r136, 31;
	shr.s32 	%r138, %r136, 5;
	add.s32 	%r139, %r138, %r137;
	mul.lo.s32 	%r140, %r139, 132;
	sub.s32 	%r141, %r131, %r140;
	.loc	1 222 19                        // persistent_profile.py:222:19
	setp.lt.s32 	%p16, %r1, %r141;
	.loc	1 222 7                         // persistent_profile.py:222:7
	selp.u32 	%r142, 1, 0, %p16;
	add.s32 	%r143, %r139, %r142;
	.loc	1 233 38                        // persistent_profile.py:233:38
	shl.b32 	%r6, %r128, 3;
	.loc	1 237 32                        // persistent_profile.py:237:32
	mul.lo.s32 	%r3, %r143, %r135;
	.loc	1 238 38                        // persistent_profile.py:238:38
	add.s32 	%r4, %r135, -1;
	.loc	1 237 22                        // persistent_profile.py:237:22
	mov.u32 	%r5, %tid.x;
	setp.eq.s32 	%p6, %r5, 0;
	mov.u32 	%r144, global_smem;
	add.s32 	%r94, %r144, 198656;
	// begin inline asm
	@%p6 mbarrier.init.shared::cta.b64 [%r94], 1;
	// end inline asm
	add.s32 	%r170, %r144, 198664;
	// begin inline asm
	@%p6 mbarrier.init.shared::cta.b64 [%r170], 1;
	// end inline asm
	add.s32 	%r191, %r144, 198672;
	// begin inline asm
	@%p6 mbarrier.init.shared::cta.b64 [%r191], 1;
	// end inline asm
	add.s32 	%r97, %r144, 198680;
	// begin inline asm
	@%p6 mbarrier.init.shared::cta.b64 [%r97], 1;
	// end inline asm
	setp.gt.s32 	%p17, %r3, 0;
	.loc	1 241 34                        // persistent_profile.py:241:34
	div.s32 	%r145, %r1, %r6;
	.loc	1 242 37                        // persistent_profile.py:242:37
	shl.b32 	%r146, %r145, 3;
	.loc	1 243 43                        // persistent_profile.py:243:43
	sub.s32 	%r147, %r2, %r146;
	.loc	1 243 56                        // persistent_profile.py:243:56
	min.s32 	%r148, %r147, 8;
	.loc	1 244 45                        // persistent_profile.py:244:45
	rem.s32 	%r149, %r1, %r148;
	.loc	1 244 35                        // persistent_profile.py:244:35
	add.s32 	%r150, %r146, %r149;
	.loc	1 245 31                        // persistent_profile.py:245:31
	mul.lo.s32 	%r151, %r145, %r6;
	sub.s32 	%r152, %r1, %r151;
	.loc	1 245 52                        // persistent_profile.py:245:52
	div.s32 	%r153, %r152, %r148;
	.loc	1 247 30                        // persistent_profile.py:247:30
	shl.b32 	%r490, %r150, 7;
	.loc	1 248 30                        // persistent_profile.py:248:30
	shl.b32 	%r488, %r153, 8;
	.loc	1 237 22                        // persistent_profile.py:237:22
	bar.sync 	0;
	and.pred  	%p10, %p6, %p17;
	// begin inline asm
	@%p10 mbarrier.arrive.expect_tx.shared.b64 _, [%r94], 49152;
	// end inline asm
	.loc	1 66 5                          // persistent_profile.py:66:5
	// begin inline asm
	mov.u32 %r99, %clock;
	// end inline asm
	.loc	1 253 73                        // persistent_profile.py:253:73
	shr.u32 	%r9, %r5, 5;
	shfl.sync.idx.b32	%r154, %r9, 0, 31, -1;
	// begin inline asm
	elect.sync _|%p11, 0xffffffff;
	// end inline asm
	and.pred  	%p18, %p17, %p11;
	setp.lt.u32 	%p19, %r5, 32;
	and.pred  	%p12, %p19, %p18;
	add.s32 	%r100, %r144, 2048;
	mov.b32 	%r101, 0;
	// begin inline asm
	@%p12 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r100], [%rd28, {%r101, %r490}], [%r94];
	// end inline asm
	.loc	1 68 5                          // persistent_profile.py:68:5
	// begin inline asm
	mov.u32 %r104, %clock;
	// end inline asm
	.loc	1 66 5                          // persistent_profile.py:66:5
	and.b32  	%r155, %r5, 127;
	setp.eq.s32 	%p13, %r155, 0;
	shl.b32 	%r156, %r5, 3;
	and.b32  	%r157, %r156, -1024;
	add.s32 	%r105, %r144, %r157;
	// begin inline asm
	@%p13 st.shared.v2.b32 [ %r105 + 0 ], { %r101, %r99 };
	// end inline asm
	.loc	1 68 5                          // persistent_profile.py:68:5
	add.s32 	%r108, %r105, 8;
	mov.b32 	%r109, -2147483648;
	// begin inline asm
	@%p13 st.shared.v2.b32 [ %r108 + 0 ], { %r109, %r104 };
	// end inline asm
	.loc	1 256 73                        // persistent_profile.py:256:73
	shfl.sync.idx.b32	%r158, %r9, 0, 31, -1;
	add.s32 	%r111, %r144, 67584;
	// begin inline asm
	@%p12 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r111], [%rd29, {%r101, %r488}], [%r94];
	// end inline asm
	.loc	1 238 0                         // persistent_profile.py:238:0
	setp.ne.s32 	%p20, %r4, 0;
	mov.b32 	%r480, 128;
	mov.b32 	%r479, 2;
	mov.u32 	%r484, %r1;
	mov.u32 	%r489, %r490;
	mov.u32 	%r487, %r488;
	.loc	1 239 11                        // persistent_profile.py:239:11
	@%p20 bra 	$L__BB0_2;
// %bb.1:
	.loc	1 240 23                        // persistent_profile.py:240:23
	add.s32 	%r484, %r1, 132;
	.loc	1 241 34                        // persistent_profile.py:241:34
	div.s32 	%r161, %r484, %r6;
	.loc	1 242 37                        // persistent_profile.py:242:37
	shl.b32 	%r162, %r161, 3;
	.loc	1 243 43                        // persistent_profile.py:243:43
	sub.s32 	%r163, %r2, %r162;
	.loc	1 243 56                        // persistent_profile.py:243:56
	min.s32 	%r164, %r163, 8;
	.loc	1 244 45                        // persistent_profile.py:244:45
	rem.s32 	%r165, %r484, %r164;
	.loc	1 244 35                        // persistent_profile.py:244:35
	add.s32 	%r166, %r162, %r165;
	.loc	1 245 31                        // persistent_profile.py:245:31
	mul.lo.s32 	%r167, %r161, %r6;
	sub.s32 	%r168, %r484, %r167;
	.loc	1 245 52                        // persistent_profile.py:245:52
	div.s32 	%r169, %r168, %r164;
	.loc	1 247 30                        // persistent_profile.py:247:30
	shl.b32 	%r489, %r166, 7;
	.loc	1 248 30                        // persistent_profile.py:248:30
	shl.b32 	%r487, %r169, 8;
	mov.b32 	%r479, 1;
	mov.u32 	%r480, %r101;
$L__BB0_2:
	.loc	1 237 22                        // persistent_profile.py:237:22
	setp.gt.s32 	%p24, %r3, 1;
	and.pred  	%p21, %p6, %p24;
	// begin inline asm
	@%p21 mbarrier.arrive.expect_tx.shared.b64 _, [%r170], 49152;
	// end inline asm
	.loc	1 253 73                        // persistent_profile.py:253:73
	shfl.sync.idx.b32	%r180, %r9, 0, 31, -1;
	and.pred  	%p27, %p24, %p11;
	and.pred  	%p22, %p19, %p27;
	add.s32 	%r171, %r144, 18432;
	// begin inline asm
	@%p22 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r171], [%rd28, {%r480, %r489}], [%r170];
	// end inline asm
	.loc	1 256 73                        // persistent_profile.py:256:73
	shfl.sync.idx.b32	%r181, %r9, 0, 31, -1;
	add.s32 	%r175, %r144, 100352;
	// begin inline asm
	@%p22 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r175], [%rd29, {%r480, %r487}], [%r170];
	// end inline asm
	.loc	1 238 28                        // persistent_profile.py:238:28
	setp.gt.u32 	%p28, %r4, 1;
	setp.lt.u32 	%p29, %r4, 2;
	.loc	1 238 44                        // persistent_profile.py:238:44
	selp.b32 	%r499, 0, %r479, %p29;
	mov.u32 	%r497, %r489;
	mov.u32 	%r496, %r487;
	.loc	1 239 11                        // persistent_profile.py:239:11
	@%p28 bra 	$L__BB0_4;
// %bb.3:
	.loc	1 240 23                        // persistent_profile.py:240:23
	add.s32 	%r484, %r484, 132;
	.loc	1 241 34                        // persistent_profile.py:241:34
	div.s32 	%r182, %r484, %r6;
	.loc	1 242 37                        // persistent_profile.py:242:37
	shl.b32 	%r183, %r182, 3;
	.loc	1 243 43                        // persistent_profile.py:243:43
	sub.s32 	%r184, %r2, %r183;
	.loc	1 243 56                        // persistent_profile.py:243:56
	min.s32 	%r185, %r184, 8;
	.loc	1 244 45                        // persistent_profile.py:244:45
	rem.s32 	%r186, %r484, %r185;
	.loc	1 244 35                        // persistent_profile.py:244:35
	add.s32 	%r187, %r183, %r186;
	.loc	1 245 31                        // persistent_profile.py:245:31
	mul.lo.s32 	%r188, %r182, %r6;
	sub.s32 	%r189, %r484, %r188;
	.loc	1 245 52                        // persistent_profile.py:245:52
	div.s32 	%r190, %r189, %r185;
	.loc	1 247 30                        // persistent_profile.py:247:30
	shl.b32 	%r497, %r187, 7;
	.loc	1 248 30                        // persistent_profile.py:248:30
	shl.b32 	%r496, %r190, 8;
$L__BB0_4:
	.loc	1 0 30                          // persistent_profile.py:0:30
	ld.param.u64 	%rd7, [matmul_kernel_tma_persistent_profile_param_6];
	.loc	1 237 22                        // persistent_profile.py:237:22
	setp.gt.s32 	%p33, %r3, 2;
	setp.lt.s32 	%p35, %r3, 1;
	.loc	1 250 22                        // persistent_profile.py:250:22
	shl.b32 	%r193, %r499, 7;
	.loc	1 237 22                        // persistent_profile.py:237:22
	and.pred  	%p30, %p6, %p33;
	// begin inline asm
	@%p30 mbarrier.arrive.expect_tx.shared.b64 _, [%r191], 49152;
	// end inline asm
	.loc	1 253 73                        // persistent_profile.py:253:73
	shfl.sync.idx.b32	%r201, %r9, 0, 31, -1;
	.loc	1 237 22                        // persistent_profile.py:237:22
	and.pred  	%p2, %p11, %p19;
	.loc	1 253 73                        // persistent_profile.py:253:73
	and.pred  	%p32, %p2, %p33;
	add.s32 	%r192, %r144, 34816;
	// begin inline asm
	@%p32 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r192], [%rd28, {%r193, %r497}], [%r191];
	// end inline asm
	.loc	1 256 73                        // persistent_profile.py:256:73
	shfl.sync.idx.b32	%r202, %r9, 0, 31, -1;
	add.s32 	%r196, %r144, 133120;
	// begin inline asm
	@%p32 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r196], [%rd29, {%r193, %r496}], [%r191];
	// end inline asm
	mov.f32 	%f2219, 0f00000000;
	mov.f32 	%f2220, %f2219;
	mov.f32 	%f2221, %f2219;
	mov.f32 	%f2222, %f2219;
	mov.f32 	%f2223, %f2219;
	mov.f32 	%f2224, %f2219;
	mov.f32 	%f2225, %f2219;
	mov.f32 	%f2226, %f2219;
	mov.f32 	%f2227, %f2219;
	mov.f32 	%f2228, %f2219;
	mov.f32 	%f2229, %f2219;
	mov.f32 	%f2230, %f2219;
	mov.f32 	%f2231, %f2219;
	mov.f32 	%f2232, %f2219;
	mov.f32 	%f2233, %f2219;
	mov.f32 	%f2234, %f2219;
	mov.f32 	%f2235, %f2219;
	mov.f32 	%f2236, %f2219;
	mov.f32 	%f2237, %f2219;
	mov.f32 	%f2238, %f2219;
	mov.f32 	%f2239, %f2219;
	mov.f32 	%f2240, %f2219;
	mov.f32 	%f2241, %f2219;
	mov.f32 	%f2242, %f2219;
	mov.f32 	%f2243, %f2219;
	mov.f32 	%f2244, %f2219;
	mov.f32 	%f2245, %f2219;
	mov.f32 	%f2246, %f2219;
	mov.f32 	%f2247, %f2219;
	mov.f32 	%f2248, %f2219;
	mov.f32 	%f2249, %f2219;
	mov.f32 	%f2250, %f2219;
	mov.f32 	%f2251, %f2219;
	mov.f32 	%f2252, %f2219;
	mov.f32 	%f2253, %f2219;
	mov.f32 	%f2254, %f2219;
	mov.f32 	%f2255, %f2219;
	mov.f32 	%f2256, %f2219;
	mov.f32 	%f2257, %f2219;
	mov.f32 	%f2258, %f2219;
	mov.f32 	%f2259, %f2219;
	mov.f32 	%f2260, %f2219;
	mov.f32 	%f2261, %f2219;
	mov.f32 	%f2262, %f2219;
	mov.f32 	%f2263, %f2219;
	mov.f32 	%f2264, %f2219;
	mov.f32 	%f2265, %f2219;
	mov.f32 	%f2266, %f2219;
	mov.f32 	%f2267, %f2219;
	mov.f32 	%f2268, %f2219;
	mov.f32 	%f2269, %f2219;
	mov.f32 	%f2270, %f2219;
	mov.f32 	%f2271, %f2219;
	mov.f32 	%f2272, %f2219;
	mov.f32 	%f2273, %f2219;
	mov.f32 	%f2274, %f2219;
	mov.f32 	%f2275, %f2219;
	mov.f32 	%f2276, %f2219;
	mov.f32 	%f2277, %f2219;
	mov.f32 	%f2278, %f2219;
	mov.f32 	%f2279, %f2219;
	mov.f32 	%f2280, %f2219;
	mov.f32 	%f2281, %f2219;
	mov.f32 	%f2282, %f2219;
	mov.f32 	%f2283, %f2219;
	mov.f32 	%f2284, %f2219;
	mov.f32 	%f2285, %f2219;
	mov.f32 	%f2286, %f2219;
	mov.f32 	%f2287, %f2219;
	mov.f32 	%f2288, %f2219;
	mov.f32 	%f2289, %f2219;
	mov.f32 	%f2290, %f2219;
	mov.f32 	%f2291, %f2219;
	mov.f32 	%f2292, %f2219;
	mov.f32 	%f2293, %f2219;
	mov.f32 	%f2294, %f2219;
	mov.f32 	%f2295, %f2219;
	mov.f32 	%f2296, %f2219;
	mov.f32 	%f2297, %f2219;
	mov.f32 	%f2298, %f2219;
	mov.f32 	%f2299, %f2219;
	mov.f32 	%f2300, %f2219;
	mov.f32 	%f2301, %f2219;
	mov.f32 	%f2302, %f2219;
	mov.f32 	%f2303, %f2219;
	mov.f32 	%f2304, %f2219;
	mov.f32 	%f2305, %f2219;
	mov.f32 	%f2306, %f2219;
	mov.f32 	%f2307, %f2219;
	mov.f32 	%f2308, %f2219;
	mov.f32 	%f2309, %f2219;
	mov.f32 	%f2310, %f2219;
	mov.f32 	%f2311, %f2219;
	mov.f32 	%f2312, %f2219;
	mov.f32 	%f2313, %f2219;
	mov.f32 	%f2314, %f2219;
	mov.f32 	%f2315, %f2219;
	mov.f32 	%f2316, %f2219;
	mov.f32 	%f2317, %f2219;
	mov.f32 	%f2318, %f2219;
	mov.f32 	%f2319, %f2219;
	mov.f32 	%f2320, %f2219;
	mov.f32 	%f2321, %f2219;
	mov.f32 	%f2322, %f2219;
	mov.f32 	%f2323, %f2219;
	mov.f32 	%f2324, %f2219;
	mov.f32 	%f2325, %f2219;
	mov.f32 	%f2326, %f2219;
	mov.f32 	%f2327, %f2219;
	mov.f32 	%f2328, %f2219;
	mov.f32 	%f2329, %f2219;
	mov.f32 	%f2330, %f2219;
	mov.f32 	%f2331, %f2219;
	mov.f32 	%f2332, %f2219;
	mov.f32 	%f2333, %f2219;
	mov.f32 	%f2334, %f2219;
	mov.f32 	%f2335, %f2219;
	mov.f32 	%f2336, %f2219;
	mov.f32 	%f2337, %f2219;
	mov.f32 	%f2338, %f2219;
	mov.f32 	%f2339, %f2219;
	mov.f32 	%f2340, %f2219;
	mov.f32 	%f2341, %f2219;
	mov.f32 	%f2342, %f2219;
	mov.f32 	%f2343, %f2219;
	mov.f32 	%f2344, %f2219;
	mov.f32 	%f2345, %f2219;
	mov.f32 	%f2346, %f2219;
	.loc	1 237 22                        // persistent_profile.py:237:22
	@%p35 bra 	$L__BB0_11;
// %bb.5:                               // %.lr.ph
	.loc	1 0 22                          // persistent_profile.py:0:22
	mov.b64 	%rd11, matmul_kernel_tma_persistent_profile_param_2;
	mov.u64 	%rd12, %rd11;
	cvta.param.u64 	%rd36, %rd12;
	shl.b32 	%r10, %r5, 1;
	selp.u32 	%r491, 1, 0, %p20;
	add.s32 	%r27, %r3, -3;
	and.b32  	%r28, %r9, 134217724;
	and.b32  	%r206, %r10, 6;
	bfe.s32 	%r207, %r5, 2, 1;
	and.b32  	%r208, %r207, 144;
	or.b32  	%r209, %r208, %r206;
	shl.b32 	%r210, %r5, 2;
	and.b32  	%r211, %r210, 32;
	or.b32  	%r212, %r209, %r211;
	and.b32  	%r213, %r210, 64;
	or.b32  	%r214, %r212, %r213;
	bfe.u32 	%r215, %r5, 3, 2;
	shr.u32 	%r216, %r5, 2;
	and.b32  	%r217, %r216, 56;
	or.b32  	%r218, %r215, %r217;
	shl.b32 	%r219, %r218, 8;
	or.b32  	%r220, %r214, %r219;
	add.s32 	%r222, %r144, 199680;
	add.s32 	%r29, %r222, %r220;
	add.s32 	%r31, %r29, 1024;
	or.b32  	%r223, %r206, 16;
	xor.b32  	%r224, %r223, %r208;
	or.b32  	%r225, %r211, %r224;
	or.b32  	%r226, %r225, %r213;
	or.b32  	%r227, %r226, %r219;
	add.s32 	%r32, %r222, %r227;
	or.b32  	%r228, %r206, 24;
	xor.b32  	%r229, %r228, %r208;
	or.b32  	%r230, %r211, %r229;
	or.b32  	%r231, %r230, %r213;
	or.b32  	%r232, %r231, %r219;
	add.s32 	%r34, %r222, %r232;
	or.b32  	%r233, %r209, 32;
	xor.b32  	%r234, %r233, %r211;
	or.b32  	%r235, %r234, %r213;
	or.b32  	%r236, %r235, %r219;
	add.s32 	%r36, %r222, %r236;
	or.b32  	%r237, %r209, 40;
	xor.b32  	%r238, %r237, %r211;
	or.b32  	%r239, %r238, %r213;
	or.b32  	%r240, %r239, %r219;
	add.s32 	%r38, %r222, %r240;
	or.b32  	%r241, %r206, 48;
	or.b32  	%r242, %r208, %r211;
	xor.b32  	%r243, %r242, %r241;
	or.b32  	%r244, %r243, %r213;
	or.b32  	%r245, %r244, %r219;
	add.s32 	%r40, %r222, %r245;
	or.b32  	%r246, %r206, 56;
	xor.b32  	%r247, %r242, %r246;
	or.b32  	%r248, %r247, %r213;
	or.b32  	%r249, %r248, %r219;
	add.s32 	%r42, %r222, %r249;
	or.b32  	%r250, %r212, 64;
	xor.b32  	%r251, %r250, %r213;
	or.b32  	%r252, %r251, %r219;
	add.s32 	%r44, %r222, %r252;
	or.b32  	%r253, %r212, 72;
	xor.b32  	%r254, %r253, %r213;
	or.b32  	%r255, %r254, %r219;
	add.s32 	%r46, %r222, %r255;
	or.b32  	%r256, %r206, 80;
	xor.b32  	%r257, %r256, %r208;
	or.b32  	%r258, %r257, %r211;
	xor.b32  	%r259, %r258, %r213;
	or.b32  	%r260, %r259, %r219;
	add.s32 	%r48, %r222, %r260;
	or.b32  	%r261, %r206, 88;
	xor.b32  	%r262, %r261, %r208;
	or.b32  	%r263, %r262, %r211;
	xor.b32  	%r264, %r263, %r213;
	or.b32  	%r265, %r264, %r219;
	add.s32 	%r50, %r222, %r265;
	or.b32  	%r266, %r209, 96;
	and.b32  	%r267, %r210, 96;
	xor.b32  	%r268, %r267, %r266;
	or.b32  	%r269, %r268, %r219;
	add.s32 	%r52, %r222, %r269;
	or.b32  	%r270, %r209, 104;
	xor.b32  	%r271, %r267, %r270;
	or.b32  	%r272, %r271, %r219;
	add.s32 	%r54, %r222, %r272;
	or.b32  	%r273, %r206, 112;
	or.b32  	%r274, %r267, %r208;
	xor.b32  	%r275, %r274, %r273;
	or.b32  	%r276, %r275, %r219;
	add.s32 	%r56, %r222, %r276;
	or.b32  	%r277, %r206, 120;
	xor.b32  	%r278, %r274, %r277;
	or.b32  	%r279, %r278, %r219;
	add.s32 	%r58, %r222, %r279;
	add.s32 	%r60, %r29, 16384;
	add.s32 	%r61, %r29, 17408;
	setp.lt.u32 	%p38, %r5, 64;
	and.pred  	%p52, %p38, %p11;
	mov.f32 	%f2219, 0f00000000;
	mov.pred 	%p60, 0;
	mov.b32 	%r495, 2;
	mov.b32 	%r494, -1;
	mov.b32 	%r492, 0;
	mov.u32 	%r493, %r492;
	mov.f32 	%f2220, %f2219;
	mov.f32 	%f2221, %f2219;
	mov.f32 	%f2222, %f2219;
	mov.f32 	%f2223, %f2219;
	mov.f32 	%f2224, %f2219;
	mov.f32 	%f2225, %f2219;
	mov.f32 	%f2226, %f2219;
	mov.f32 	%f2227, %f2219;
	mov.f32 	%f2228, %f2219;
	mov.f32 	%f2229, %f2219;
	mov.f32 	%f2230, %f2219;
	mov.f32 	%f2231, %f2219;
	mov.f32 	%f2232, %f2219;
	mov.f32 	%f2233, %f2219;
	mov.f32 	%f2234, %f2219;
	mov.f32 	%f2235, %f2219;
	mov.f32 	%f2236, %f2219;
	mov.f32 	%f2237, %f2219;
	mov.f32 	%f2238, %f2219;
	mov.f32 	%f2239, %f2219;
	mov.f32 	%f2240, %f2219;
	mov.f32 	%f2241, %f2219;
	mov.f32 	%f2242, %f2219;
	mov.f32 	%f2243, %f2219;
	mov.f32 	%f2244, %f2219;
	mov.f32 	%f2245, %f2219;
	mov.f32 	%f2246, %f2219;
	mov.f32 	%f2247, %f2219;
	mov.f32 	%f2248, %f2219;
	mov.f32 	%f2249, %f2219;
	mov.f32 	%f2250, %f2219;
	mov.f32 	%f2251, %f2219;
	mov.f32 	%f2252, %f2219;
	mov.f32 	%f2253, %f2219;
	mov.f32 	%f2254, %f2219;
	mov.f32 	%f2255, %f2219;
	mov.f32 	%f2256, %f2219;
	mov.f32 	%f2257, %f2219;
	mov.f32 	%f2258, %f2219;
	mov.f32 	%f2259, %f2219;
	mov.f32 	%f2260, %f2219;
	mov.f32 	%f2261, %f2219;
	mov.f32 	%f2262, %f2219;
	mov.f32 	%f2263, %f2219;
	mov.f32 	%f2264, %f2219;
	mov.f32 	%f2265, %f2219;
	mov.f32 	%f2266, %f2219;
	mov.f32 	%f2267, %f2219;
	mov.f32 	%f2268, %f2219;
	mov.f32 	%f2269, %f2219;
	mov.f32 	%f2270, %f2219;
	mov.f32 	%f2271, %f2219;
	mov.f32 	%f2272, %f2219;
	mov.f32 	%f2273, %f2219;
	mov.f32 	%f2274, %f2219;
	mov.f32 	%f2275, %f2219;
	mov.f32 	%f2276, %f2219;
	mov.f32 	%f2277, %f2219;
	mov.f32 	%f2278, %f2219;
	mov.f32 	%f2279, %f2219;
	mov.f32 	%f2280, %f2219;
	mov.f32 	%f2281, %f2219;
	mov.f32 	%f2282, %f2219;
	mov.f32 	%f2283, %f2219;
	mov.f32 	%f2284, %f2219;
	mov.f32 	%f2285, %f2219;
	mov.f32 	%f2286, %f2219;
	mov.f32 	%f2287, %f2219;
	mov.f32 	%f2288, %f2219;
	mov.f32 	%f2289, %f2219;
	mov.f32 	%f2290, %f2219;
	mov.f32 	%f2291, %f2219;
	mov.f32 	%f2292, %f2219;
	mov.f32 	%f2293, %f2219;
	mov.f32 	%f2294, %f2219;
	mov.f32 	%f2295, %f2219;
	mov.f32 	%f2296, %f2219;
	mov.f32 	%f2297, %f2219;
	mov.f32 	%f2298, %f2219;
	mov.f32 	%f2299, %f2219;
	mov.f32 	%f2300, %f2219;
	mov.f32 	%f2301, %f2219;
	mov.f32 	%f2302, %f2219;
	mov.f32 	%f2303, %f2219;
	mov.f32 	%f2304, %f2219;
	mov.f32 	%f2305, %f2219;
	mov.f32 	%f2306, %f2219;
	mov.f32 	%f2307, %f2219;
	mov.f32 	%f2308, %f2219;
	mov.f32 	%f2309, %f2219;
	mov.f32 	%f2310, %f2219;
	mov.f32 	%f2311, %f2219;
	mov.f32 	%f2312, %f2219;
	mov.f32 	%f2313, %f2219;
	mov.f32 	%f2314, %f2219;
	mov.f32 	%f2315, %f2219;
	mov.f32 	%f2316, %f2219;
	mov.f32 	%f2317, %f2219;
	mov.f32 	%f2318, %f2219;
	mov.f32 	%f2319, %f2219;
	mov.f32 	%f2320, %f2219;
	mov.f32 	%f2321, %f2219;
	mov.f32 	%f2322, %f2219;
	mov.f32 	%f2323, %f2219;
	mov.f32 	%f2324, %f2219;
	mov.f32 	%f2325, %f2219;
	mov.f32 	%f2326, %f2219;
	mov.f32 	%f2327, %f2219;
	mov.f32 	%f2328, %f2219;
	mov.f32 	%f2329, %f2219;
	mov.f32 	%f2330, %f2219;
	mov.f32 	%f2331, %f2219;
	mov.f32 	%f2332, %f2219;
	mov.f32 	%f2333, %f2219;
	mov.f32 	%f2334, %f2219;
	mov.f32 	%f2335, %f2219;
	mov.f32 	%f2336, %f2219;
	mov.f32 	%f2337, %f2219;
	mov.f32 	%f2338, %f2219;
	mov.f32 	%f2339, %f2219;
	mov.f32 	%f2340, %f2219;
	mov.f32 	%f2341, %f2219;
	mov.f32 	%f2342, %f2219;
	mov.f32 	%f2343, %f2219;
	mov.f32 	%f2344, %f2219;
	mov.f32 	%f2345, %f2219;
	mov.f32 	%f2346, %f2219;
	mov.u32 	%r500, %r492;
	mov.u32 	%r502, %r497;
	mov.u32 	%r503, %r496;
	bra.uni 	$L__BB0_6;
$L__BB0_10:                             //   in Loop: Header=BB0_6 Depth=1
	.loc	1 237 22                        // persistent_profile.py:237:22
	add.s32 	%r500, %r500, 1;
	setp.ne.s32 	%p53, %r3, %r500;
	mov.u32 	%r487, %r496;
	mov.u32 	%r488, %r62;
	mov.u32 	%r489, %r497;
	mov.u32 	%r490, %r64;
	mov.u32 	%r491, %r499;
	mov.u32 	%r492, %r66;
	mov.u32 	%r496, %r503;
	mov.u32 	%r497, %r502;
	mov.u32 	%r499, %r76;
	@%p53 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_11;
$L__BB0_6:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 22                          // persistent_profile.py:0:22
	mov.u32 	%r66, %r491;
	mov.u32 	%r64, %r489;
	mov.u32 	%r62, %r487;
	.loc	1 238 28                        // persistent_profile.py:238:28
	setp.eq.s32 	%p39, %r499, %r4;
	.loc	1 238 49                        // persistent_profile.py:238:49
	add.s32 	%r280, %r499, 1;
	.loc	1 238 44                        // persistent_profile.py:238:44
	selp.b32 	%r76, 0, %r280, %p39;
	.loc	1 239 17                        // persistent_profile.py:239:17
	setp.ne.s32 	%p40, %r76, 0;
	.loc	1 239 11                        // persistent_profile.py:239:11
	@%p40 bra 	$L__BB0_8;
// %bb.7:                               //   in Loop: Header=BB0_6 Depth=1
	.loc	1 240 23                        // persistent_profile.py:240:23
	add.s32 	%r484, %r484, 132;
	.loc	1 241 34                        // persistent_profile.py:241:34
	div.s32 	%r281, %r484, %r6;
	.loc	1 242 37                        // persistent_profile.py:242:37
	shl.b32 	%r282, %r281, 3;
	.loc	1 243 43                        // persistent_profile.py:243:43
	sub.s32 	%r283, %r2, %r282;
	.loc	1 243 56                        // persistent_profile.py:243:56
	min.s32 	%r284, %r283, 8;
	.loc	1 244 45                        // persistent_profile.py:244:45
	rem.s32 	%r285, %r484, %r284;
	.loc	1 244 35                        // persistent_profile.py:244:35
	add.s32 	%r286, %r282, %r285;
	.loc	1 245 31                        // persistent_profile.py:245:31
	mul.lo.s32 	%r287, %r281, %r6;
	sub.s32 	%r288, %r484, %r287;
	.loc	1 245 52                        // persistent_profile.py:245:52
	div.s32 	%r289, %r288, %r284;
	.loc	1 247 30                        // persistent_profile.py:247:30
	shl.b32 	%r502, %r286, 7;
	.loc	1 248 30                        // persistent_profile.py:248:30
	shl.b32 	%r503, %r289, 8;
$L__BB0_8:                              //   in Loop: Header=BB0_6 Depth=1
	.loc	1 237 22                        // persistent_profile.py:237:22
	setp.lt.s32 	%p48, %r500, %r27;
	add.s32 	%r301, %r494, 1;
	setp.gt.s32 	%p50, %r301, 3;
	selp.b32 	%r494, 0, %r301, %p50;
	selp.u32 	%r302, 1, 0, %p50;
	xor.b32  	%r493, %r493, %r302;
	shl.b32 	%r303, %r494, 3;
	add.s32 	%r290, %r94, %r303;
	// begin inline asm
	{                                                           
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r290], %r493;           
	@!P1 bra.uni waitLoop;                                      
	}                                                           
	
	// end inline asm
	.loc	1 256 73                        // persistent_profile.py:256:73
	shl.b32 	%r306, %r494, 15;
	add.s32 	%r85, %r111, %r306;
	.loc	1 253 73                        // persistent_profile.py:253:73
	shl.b32 	%r308, %r494, 14;
	add.s32 	%r86, %r100, %r308;
	.loc	1 258 37                        // persistent_profile.py:258:37
	shfl.sync.idx.b32	%r310, %r28, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r311, %r310, 7;
	and.b32  	%r312, %r311, 896;
	cvt.u64.u32 	%rd30, %r312;
	shr.u32 	%r313, %r86, 4;
	cvt.u64.u32 	%rd31, %r313;
	and.b64  	%rd32, %rd31, 16383;
	add.s64 	%rd33, %rd32, %rd30;
	or.b64  	%rd20, %rd33, 4611686293372403712;
	shr.u32 	%r314, %r85, 4;
	cvt.u64.u32 	%rd34, %r314;
	and.b64  	%rd35, %rd34, 16383;
	or.b64  	%rd21, %rd35, 4611686293439512576;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k32.f32.e4m3.e4m3 {%f2219,%f2220,%f2221,%f2222,%f2223,%f2224,%f2225,%f2226,%f2227,%f2228,%f2229,%f2230,%f2231,%f2232,%f2233,%f2234,%f2235,%f2236,%f2237,%f2238,%f2239,%f2240,%f2241,%f2242,%f2243,%f2244,%f2245,%f2246,%f2247,%f2248,%f2249,%f2250,%f2251,%f2252,%f2253,%f2254,%f2255,%f2256,%f2257,%f2258,%f2259,%f2260,%f2261,%f2262,%f2263,%f2264,%f2265,%f2266,%f2267,%f2268,%f2269,%f2270,%f2271,%f2272,%f2273,%f2274,%f2275,%f2276,%f2277,%f2278,%f2279,%f2280,%f2281,%f2282,%f2283,%f2284,%f2285,%f2286,%f2287,%f2288,%f2289,%f2290,%f2291,%f2292,%f2293,%f2294,%f2295,%f2296,%f2297,%f2298,%f2299,%f2300,%f2301,%f2302,%f2303,%f2304,%f2305,%f2306,%f2307,%f2308,%f2309,%f2310,%f2311,%f2312,%f2313,%f2314,%f2315,%f2316,%f2317,%f2318,%f2319,%f2320,%f2321,%f2322,%f2323,%f2324,%f2325,%f2326,%f2327,%f2328,%f2329,%f2330,%f2331,%f2332,%f2333,%f2334,%f2335,%f2336,%f2337,%f2338,%f2339,%f2340,%f2341,%f2342,%f2343,%f2344,%f2345,%f2346}, %rd20, %rd21, %p60, 1, 1;
	// end inline asm
	add.s64 	%rd22, %rd33, 4611686293372403714;
	add.s64 	%rd23, %rd35, 4611686293439512578;
	mov.pred 	%p42, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k32.f32.e4m3.e4m3 {%f2219,%f2220,%f2221,%f2222,%f2223,%f2224,%f2225,%f2226,%f2227,%f2228,%f2229,%f2230,%f2231,%f2232,%f2233,%f2234,%f2235,%f2236,%f2237,%f2238,%f2239,%f2240,%f2241,%f2242,%f2243,%f2244,%f2245,%f2246,%f2247,%f2248,%f2249,%f2250,%f2251,%f2252,%f2253,%f2254,%f2255,%f2256,%f2257,%f2258,%f2259,%f2260,%f2261,%f2262,%f2263,%f2264,%f2265,%f2266,%f2267,%f2268,%f2269,%f2270,%f2271,%f2272,%f2273,%f2274,%f2275,%f2276,%f2277,%f2278,%f2279,%f2280,%f2281,%f2282,%f2283,%f2284,%f2285,%f2286,%f2287,%f2288,%f2289,%f2290,%f2291,%f2292,%f2293,%f2294,%f2295,%f2296,%f2297,%f2298,%f2299,%f2300,%f2301,%f2302,%f2303,%f2304,%f2305,%f2306,%f2307,%f2308,%f2309,%f2310,%f2311,%f2312,%f2313,%f2314,%f2315,%f2316,%f2317,%f2318,%f2319,%f2320,%f2321,%f2322,%f2323,%f2324,%f2325,%f2326,%f2327,%f2328,%f2329,%f2330,%f2331,%f2332,%f2333,%f2334,%f2335,%f2336,%f2337,%f2338,%f2339,%f2340,%f2341,%f2342,%f2343,%f2344,%f2345,%f2346}, %rd22, %rd23, %p42, 1, 1;
	// end inline asm
	add.s64 	%rd24, %rd33, 4611686293372403716;
	add.s64 	%rd25, %rd35, 4611686293439512580;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k32.f32.e4m3.e4m3 {%f2219,%f2220,%f2221,%f2222,%f2223,%f2224,%f2225,%f2226,%f2227,%f2228,%f2229,%f2230,%f2231,%f2232,%f2233,%f2234,%f2235,%f2236,%f2237,%f2238,%f2239,%f2240,%f2241,%f2242,%f2243,%f2244,%f2245,%f2246,%f2247,%f2248,%f2249,%f2250,%f2251,%f2252,%f2253,%f2254,%f2255,%f2256,%f2257,%f2258,%f2259,%f2260,%f2261,%f2262,%f2263,%f2264,%f2265,%f2266,%f2267,%f2268,%f2269,%f2270,%f2271,%f2272,%f2273,%f2274,%f2275,%f2276,%f2277,%f2278,%f2279,%f2280,%f2281,%f2282,%f2283,%f2284,%f2285,%f2286,%f2287,%f2288,%f2289,%f2290,%f2291,%f2292,%f2293,%f2294,%f2295,%f2296,%f2297,%f2298,%f2299,%f2300,%f2301,%f2302,%f2303,%f2304,%f2305,%f2306,%f2307,%f2308,%f2309,%f2310,%f2311,%f2312,%f2313,%f2314,%f2315,%f2316,%f2317,%f2318,%f2319,%f2320,%f2321,%f2322,%f2323,%f2324,%f2325,%f2326,%f2327,%f2328,%f2329,%f2330,%f2331,%f2332,%f2333,%f2334,%f2335,%f2336,%f2337,%f2338,%f2339,%f2340,%f2341,%f2342,%f2343,%f2344,%f2345,%f2346}, %rd24, %rd25, %p42, 1, 1;
	// end inline asm
	add.s64 	%rd26, %rd33, 4611686293372403718;
	add.s64 	%rd27, %rd35, 4611686293439512582;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k32.f32.e4m3.e4m3 {%f2219,%f2220,%f2221,%f2222,%f2223,%f2224,%f2225,%f2226,%f2227,%f2228,%f2229,%f2230,%f2231,%f2232,%f2233,%f2234,%f2235,%f2236,%f2237,%f2238,%f2239,%f2240,%f2241,%f2242,%f2243,%f2244,%f2245,%f2246,%f2247,%f2248,%f2249,%f2250,%f2251,%f2252,%f2253,%f2254,%f2255,%f2256,%f2257,%f2258,%f2259,%f2260,%f2261,%f2262,%f2263,%f2264,%f2265,%f2266,%f2267,%f2268,%f2269,%f2270,%f2271,%f2272,%f2273,%f2274,%f2275,%f2276,%f2277,%f2278,%f2279,%f2280,%f2281,%f2282,%f2283,%f2284,%f2285,%f2286,%f2287,%f2288,%f2289,%f2290,%f2291,%f2292,%f2293,%f2294,%f2295,%f2296,%f2297,%f2298,%f2299,%f2300,%f2301,%f2302,%f2303,%f2304,%f2305,%f2306,%f2307,%f2308,%f2309,%f2310,%f2311,%f2312,%f2313,%f2314,%f2315,%f2316,%f2317,%f2318,%f2319,%f2320,%f2321,%f2322,%f2323,%f2324,%f2325,%f2326,%f2327,%f2328,%f2329,%f2330,%f2331,%f2332,%f2333,%f2334,%f2335,%f2336,%f2337,%f2338,%f2339,%f2340,%f2341,%f2342,%f2343,%f2344,%f2345,%f2346}, %rd26, %rd27, %p42, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%f1815, %r86;
	mov.b32 	%f1820, %r85;
	mov.f32 	%f1817, 0f00000001;
	mov.f32 	%f1822, 0f00000080;
	mov.f32 	%f1818, 0f00000000;
	mov.f32 	%f1544, %f1820;
	mov.f32 	%f1545, %f1817;
	mov.f32 	%f1539, %f1815;
	mov.f32 	%f1546, %f1822;
	mov.f32 	%f1540, %f1822;
	mov.f32 	%f1541, %f1817;
	mov.f32 	%f1548, %f1818;
	mov.f32 	%f1542, %f1818;
	mov.f32 	%f1543, %f1818;
	mov.f32 	%f1547, %f1818;
	// begin inline asm
	// wait for regs: %f2219,%f2220,%f2221,%f2222,%f2223,%f2224,%f2225,%f2226,%f2227,%f2228,%f2229,%f2230,%f2231,%f2232,%f2233,%f2234,%f2235,%f2236,%f2237,%f2238,%f2239,%f2240,%f2241,%f2242,%f2243,%f2244,%f2245,%f2246,%f2247,%f2248,%f2249,%f2250,%f2251,%f2252,%f2253,%f2254,%f2255,%f2256,%f2257,%f2258,%f2259,%f2260,%f2261,%f2262,%f2263,%f2264,%f2265,%f2266,%f2267,%f2268,%f2269,%f2270,%f2271,%f2272,%f2273,%f2274,%f2275,%f2276,%f2277,%f2278,%f2279,%f2280,%f2281,%f2282,%f2283,%f2284,%f2285,%f2286,%f2287,%f2288,%f2289,%f2290,%f2291,%f2292,%f2293,%f2294,%f2295,%f2296,%f2297,%f2298,%f2299,%f2300,%f2301,%f2302,%f2303,%f2304,%f2305,%f2306,%f2307,%f2308,%f2309,%f2310,%f2311,%f2312,%f2313,%f2314,%f2315,%f2316,%f2317,%f2318,%f2319,%f2320,%f2321,%f2322,%f2323,%f2324,%f2325,%f2326,%f2327,%f2328,%f2329,%f2330,%f2331,%f2332,%f2333,%f2334,%f2335,%f2336,%f2337,%f2338,%f2339,%f2340,%f2341,%f2342,%f2343,%f2344,%f2345,%f2346,%f1539,%f1540,%f1541,%f1542,%f1543,%f1544,%f1545,%f1546,%f1547,%f1548
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 237 22                        // persistent_profile.py:237:22
	add.s32 	%r315, %r495, 1;
	setp.lt.s32 	%p51, %r315, 4;
	selp.b32 	%r495, %r315, 0, %p51;
	.loc	1 250 22                        // persistent_profile.py:250:22
	shl.b32 	%r294, %r76, 7;
	.loc	1 237 22                        // persistent_profile.py:237:22
	shl.b32 	%r316, %r495, 3;
	add.s32 	%r292, %r94, %r316;
	and.pred  	%p45, %p6, %p48;
	// begin inline asm
	@%p45 mbarrier.arrive.expect_tx.shared.b64 _, [%r292], 49152;
	// end inline asm
	.loc	1 253 73                        // persistent_profile.py:253:73
	shl.b32 	%r317, %r495, 14;
	add.s32 	%r293, %r100, %r317;
	bar.sync 	0;
	shfl.sync.idx.b32	%r318, %r9, 0, 31, -1;
	and.pred  	%p46, %p48, %p2;
	// begin inline asm
	@%p46 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r293], [%rd28, {%r294, %r502}], [%r292];
	// end inline asm
	.loc	1 256 73                        // persistent_profile.py:256:73
	shl.b32 	%r319, %r495, 15;
	add.s32 	%r297, %r111, %r319;
	shfl.sync.idx.b32	%r320, %r9, 0, 31, -1;
	// begin inline asm
	@%p46 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r297], [%rd29, {%r294, %r503}], [%r292];
	// end inline asm
	.loc	1 260 17                        // persistent_profile.py:260:17
	setp.ne.s32 	%p60, %r492, %r4;
	.loc	1 260 11                        // persistent_profile.py:260:11
	@%p60 bra 	$L__BB0_10;
// %bb.9:                               //   in Loop: Header=BB0_6 Depth=1
	.loc	1 258 37                        // persistent_profile.py:258:37
	mov.f32 	%f1761, %f2293;
	mov.f32 	%f1768, %f2300;
	mov.f32 	%f1775, %f2307;
	mov.f32 	%f1692, %f2224;
	mov.f32 	%f1782, %f2314;
	mov.f32 	%f1699, %f2231;
	mov.f32 	%f1789, %f2321;
	mov.f32 	%f1706, %f2238;
	mov.f32 	%f1796, %f2328;
	mov.f32 	%f1713, %f2245;
	mov.f32 	%f1803, %f2335;
	mov.f32 	%f1720, %f2252;
	mov.f32 	%f1810, %f2342;
	mov.f32 	%f1727, %f2259;
	mov.f32 	%f1734, %f2266;
	mov.f32 	%f1741, %f2273;
	mov.f32 	%f1748, %f2280;
	mov.f32 	%f1755, %f2287;
	mov.f32 	%f1762, %f2294;
	mov.f32 	%f1769, %f2301;
	mov.f32 	%f1776, %f2308;
	mov.f32 	%f1693, %f2225;
	mov.f32 	%f1783, %f2315;
	mov.f32 	%f1700, %f2232;
	mov.f32 	%f1790, %f2322;
	mov.f32 	%f1707, %f2239;
	mov.f32 	%f1797, %f2329;
	mov.f32 	%f1714, %f2246;
	mov.f32 	%f1804, %f2336;
	mov.f32 	%f1721, %f2253;
	mov.f32 	%f1811, %f2343;
	mov.f32 	%f1728, %f2260;
	mov.f32 	%f1819, %f1818;
	mov.f32 	%f1823, %f1818;
	mov.f32 	%f1735, %f2267;
	mov.f32 	%f1742, %f2274;
	mov.f32 	%f1749, %f2281;
	mov.f32 	%f1756, %f2288;
	mov.f32 	%f1763, %f2295;
	mov.f32 	%f1770, %f2302;
	mov.f32 	%f1687, %f2219;
	mov.f32 	%f1777, %f2309;
	mov.f32 	%f1694, %f2226;
	mov.f32 	%f1784, %f2316;
	mov.f32 	%f1701, %f2233;
	mov.f32 	%f1791, %f2323;
	mov.f32 	%f1708, %f2240;
	mov.f32 	%f1798, %f2330;
	mov.f32 	%f1715, %f2247;
	mov.f32 	%f1805, %f2337;
	mov.f32 	%f1722, %f2254;
	mov.f32 	%f1812, %f2344;
	mov.f32 	%f1729, %f2261;
	mov.f32 	%f1736, %f2268;
	mov.f32 	%f1743, %f2275;
	mov.f32 	%f1750, %f2282;
	mov.f32 	%f1757, %f2289;
	mov.f32 	%f1821, %f1817;
	mov.f32 	%f1764, %f2296;
	mov.f32 	%f1771, %f2303;
	mov.f32 	%f1688, %f2220;
	mov.f32 	%f1778, %f2310;
	mov.f32 	%f1695, %f2227;
	mov.f32 	%f1785, %f2317;
	mov.f32 	%f1702, %f2234;
	mov.f32 	%f1792, %f2324;
	mov.f32 	%f1709, %f2241;
	mov.f32 	%f1799, %f2331;
	mov.f32 	%f1716, %f2248;
	mov.f32 	%f1806, %f2338;
	mov.f32 	%f1723, %f2255;
	mov.f32 	%f1813, %f2345;
	mov.f32 	%f1730, %f2262;
	mov.f32 	%f1737, %f2269;
	mov.f32 	%f1744, %f2276;
	mov.f32 	%f1751, %f2283;
	mov.f32 	%f1758, %f2290;
	mov.f32 	%f1765, %f2297;
	mov.f32 	%f1772, %f2304;
	mov.f32 	%f1689, %f2221;
	mov.f32 	%f1779, %f2311;
	mov.f32 	%f1696, %f2228;
	mov.f32 	%f1786, %f2318;
	mov.f32 	%f1703, %f2235;
	mov.f32 	%f1793, %f2325;
	mov.f32 	%f1710, %f2242;
	mov.f32 	%f1800, %f2332;
	mov.f32 	%f1717, %f2249;
	mov.f32 	%f1807, %f2339;
	mov.f32 	%f1724, %f2256;
	mov.f32 	%f1814, %f2346;
	mov.f32 	%f1731, %f2263;
	mov.f32 	%f1738, %f2270;
	mov.f32 	%f1745, %f2277;
	mov.f32 	%f1752, %f2284;
	mov.f32 	%f1759, %f2291;
	mov.f32 	%f1766, %f2298;
	mov.f32 	%f1773, %f2305;
	mov.f32 	%f1690, %f2222;
	mov.f32 	%f1780, %f2312;
	mov.f32 	%f1697, %f2229;
	mov.f32 	%f1787, %f2319;
	mov.f32 	%f1704, %f2236;
	mov.f32 	%f1794, %f2326;
	mov.f32 	%f1711, %f2243;
	mov.f32 	%f1801, %f2333;
	mov.f32 	%f1718, %f2250;
	mov.f32 	%f1808, %f2340;
	mov.f32 	%f1725, %f2257;
	mov.f32 	%f1732, %f2264;
	mov.f32 	%f1739, %f2271;
	mov.f32 	%f1746, %f2278;
	mov.f32 	%f1753, %f2285;
	mov.f32 	%f1760, %f2292;
	mov.f32 	%f1824, %f1818;
	mov.f32 	%f1767, %f2299;
	mov.f32 	%f1774, %f2306;
	mov.f32 	%f1691, %f2223;
	mov.f32 	%f1781, %f2313;
	mov.f32 	%f1698, %f2230;
	mov.f32 	%f1788, %f2320;
	mov.f32 	%f1705, %f2237;
	mov.f32 	%f1795, %f2327;
	mov.f32 	%f1712, %f2244;
	mov.f32 	%f1802, %f2334;
	mov.f32 	%f1719, %f2251;
	mov.f32 	%f1809, %f2341;
	mov.f32 	%f1726, %f2258;
	mov.f32 	%f1816, %f1822;
	mov.f32 	%f1733, %f2265;
	mov.f32 	%f1740, %f2272;
	mov.f32 	%f1747, %f2279;
	mov.f32 	%f1754, %f2286;
	// begin inline asm
	// wait for regs: %f1687,%f1688,%f1689,%f1690,%f1691,%f1692,%f1693,%f1694,%f1695,%f1696,%f1697,%f1698,%f1699,%f1700,%f1701,%f1702,%f1703,%f1704,%f1705,%f1706,%f1707,%f1708,%f1709,%f1710,%f1711,%f1712,%f1713,%f1714,%f1715,%f1716,%f1717,%f1718,%f1719,%f1720,%f1721,%f1722,%f1723,%f1724,%f1725,%f1726,%f1727,%f1728,%f1729,%f1730,%f1731,%f1732,%f1733,%f1734,%f1735,%f1736,%f1737,%f1738,%f1739,%f1740,%f1741,%f1742,%f1743,%f1744,%f1745,%f1746,%f1747,%f1748,%f1749,%f1750,%f1751,%f1752,%f1753,%f1754,%f1755,%f1756,%f1757,%f1758,%f1759,%f1760,%f1761,%f1762,%f1763,%f1764,%f1765,%f1766,%f1767,%f1768,%f1769,%f1770,%f1771,%f1772,%f1773,%f1774,%f1775,%f1776,%f1777,%f1778,%f1779,%f1780,%f1781,%f1782,%f1783,%f1784,%f1785,%f1786,%f1787,%f1788,%f1789,%f1790,%f1791,%f1792,%f1793,%f1794,%f1795,%f1796,%f1797,%f1798,%f1799,%f1800,%f1801,%f1802,%f1803,%f1804,%f1805,%f1806,%f1807,%f1808,%f1809,%f1810,%f1811,%f1812,%f1813,%f1814,%f1815,%f1816,%f1817,%f1818,%f1819,%f1820,%f1821,%f1822,%f1823,%f1824
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 261 31                        // persistent_profile.py:261:31
	mov.b32 	%r321, %f1687;
	mov.b32 	%r322, %f1688;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs1, %r322, %r321; 

	// end inline asm
	mov.b32 	%r323, %f1689;
	mov.b32 	%r324, %f1690;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs2, %r324, %r323; 

	// end inline asm
	mov.b32 	%r325, %f1691;
	mov.b32 	%r326, %f1692;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs3, %r326, %r325; 

	// end inline asm
	mov.b32 	%r327, %f1693;
	mov.b32 	%r328, %f1694;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs4, %r328, %r327; 

	// end inline asm
	mov.b32 	%r329, %f1695;
	mov.b32 	%r330, %f1696;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs5, %r330, %r329; 

	// end inline asm
	mov.b32 	%r331, %f1697;
	mov.b32 	%r332, %f1698;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs6, %r332, %r331; 

	// end inline asm
	mov.b32 	%r333, %f1699;
	mov.b32 	%r334, %f1700;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs7, %r334, %r333; 

	// end inline asm
	mov.b32 	%r335, %f1701;
	mov.b32 	%r336, %f1702;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs8, %r336, %r335; 

	// end inline asm
	mov.b32 	%r337, %f1703;
	mov.b32 	%r338, %f1704;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs9, %r338, %r337; 

	// end inline asm
	mov.b32 	%r339, %f1705;
	mov.b32 	%r340, %f1706;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs10, %r340, %r339; 

	// end inline asm
	mov.b32 	%r341, %f1707;
	mov.b32 	%r342, %f1708;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs11, %r342, %r341; 

	// end inline asm
	mov.b32 	%r343, %f1709;
	mov.b32 	%r344, %f1710;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs12, %r344, %r343; 

	// end inline asm
	mov.b32 	%r345, %f1711;
	mov.b32 	%r346, %f1712;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs13, %r346, %r345; 

	// end inline asm
	mov.b32 	%r347, %f1713;
	mov.b32 	%r348, %f1714;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs14, %r348, %r347; 

	// end inline asm
	mov.b32 	%r349, %f1715;
	mov.b32 	%r350, %f1716;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs15, %r350, %r349; 

	// end inline asm
	mov.b32 	%r351, %f1717;
	mov.b32 	%r352, %f1718;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs16, %r352, %r351; 

	// end inline asm
	mov.b32 	%r353, %f1719;
	mov.b32 	%r354, %f1720;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs17, %r354, %r353; 

	// end inline asm
	mov.b32 	%r355, %f1721;
	mov.b32 	%r356, %f1722;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs18, %r356, %r355; 

	// end inline asm
	mov.b32 	%r357, %f1723;
	mov.b32 	%r358, %f1724;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs19, %r358, %r357; 

	// end inline asm
	mov.b32 	%r359, %f1725;
	mov.b32 	%r360, %f1726;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs20, %r360, %r359; 

	// end inline asm
	mov.b32 	%r361, %f1727;
	mov.b32 	%r362, %f1728;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs21, %r362, %r361; 

	// end inline asm
	mov.b32 	%r363, %f1729;
	mov.b32 	%r364, %f1730;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs22, %r364, %r363; 

	// end inline asm
	mov.b32 	%r365, %f1731;
	mov.b32 	%r366, %f1732;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs23, %r366, %r365; 

	// end inline asm
	mov.b32 	%r367, %f1733;
	mov.b32 	%r368, %f1734;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs24, %r368, %r367; 

	// end inline asm
	mov.b32 	%r369, %f1735;
	mov.b32 	%r370, %f1736;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs25, %r370, %r369; 

	// end inline asm
	mov.b32 	%r371, %f1737;
	mov.b32 	%r372, %f1738;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs26, %r372, %r371; 

	// end inline asm
	mov.b32 	%r373, %f1739;
	mov.b32 	%r374, %f1740;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs27, %r374, %r373; 

	// end inline asm
	mov.b32 	%r375, %f1741;
	mov.b32 	%r376, %f1742;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs28, %r376, %r375; 

	// end inline asm
	mov.b32 	%r377, %f1743;
	mov.b32 	%r378, %f1744;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs29, %r378, %r377; 

	// end inline asm
	mov.b32 	%r379, %f1745;
	mov.b32 	%r380, %f1746;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs30, %r380, %r379; 

	// end inline asm
	mov.b32 	%r381, %f1747;
	mov.b32 	%r382, %f1748;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs31, %r382, %r381; 

	// end inline asm
	mov.b32 	%r383, %f1749;
	mov.b32 	%r384, %f1750;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs32, %r384, %r383; 

	// end inline asm
	mov.b32 	%r385, %f1751;
	mov.b32 	%r386, %f1752;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs33, %r386, %r385; 

	// end inline asm
	mov.b32 	%r387, %f1753;
	mov.b32 	%r388, %f1754;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs34, %r388, %r387; 

	// end inline asm
	mov.b32 	%r389, %f1755;
	mov.b32 	%r390, %f1756;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs35, %r390, %r389; 

	// end inline asm
	mov.b32 	%r391, %f1757;
	mov.b32 	%r392, %f1758;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs36, %r392, %r391; 

	// end inline asm
	mov.b32 	%r393, %f1759;
	mov.b32 	%r394, %f1760;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs37, %r394, %r393; 

	// end inline asm
	mov.b32 	%r395, %f1761;
	mov.b32 	%r396, %f1762;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs38, %r396, %r395; 

	// end inline asm
	mov.b32 	%r397, %f1763;
	mov.b32 	%r398, %f1764;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs39, %r398, %r397; 

	// end inline asm
	mov.b32 	%r399, %f1765;
	mov.b32 	%r400, %f1766;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs40, %r400, %r399; 

	// end inline asm
	mov.b32 	%r401, %f1767;
	mov.b32 	%r402, %f1768;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs41, %r402, %r401; 

	// end inline asm
	mov.b32 	%r403, %f1769;
	mov.b32 	%r404, %f1770;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs42, %r404, %r403; 

	// end inline asm
	mov.b32 	%r405, %f1771;
	mov.b32 	%r406, %f1772;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs43, %r406, %r405; 

	// end inline asm
	mov.b32 	%r407, %f1773;
	mov.b32 	%r408, %f1774;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs44, %r408, %r407; 

	// end inline asm
	mov.b32 	%r409, %f1775;
	mov.b32 	%r410, %f1776;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs45, %r410, %r409; 

	// end inline asm
	mov.b32 	%r411, %f1777;
	mov.b32 	%r412, %f1778;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs46, %r412, %r411; 

	// end inline asm
	mov.b32 	%r413, %f1779;
	mov.b32 	%r414, %f1780;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs47, %r414, %r413; 

	// end inline asm
	mov.b32 	%r415, %f1781;
	mov.b32 	%r416, %f1782;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs48, %r416, %r415; 

	// end inline asm
	mov.b32 	%r417, %f1783;
	mov.b32 	%r418, %f1784;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs49, %r418, %r417; 

	// end inline asm
	mov.b32 	%r419, %f1785;
	mov.b32 	%r420, %f1786;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs50, %r420, %r419; 

	// end inline asm
	mov.b32 	%r421, %f1787;
	mov.b32 	%r422, %f1788;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs51, %r422, %r421; 

	// end inline asm
	mov.b32 	%r423, %f1789;
	mov.b32 	%r424, %f1790;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs52, %r424, %r423; 

	// end inline asm
	mov.b32 	%r425, %f1791;
	mov.b32 	%r426, %f1792;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs53, %r426, %r425; 

	// end inline asm
	mov.b32 	%r427, %f1793;
	mov.b32 	%r428, %f1794;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs54, %r428, %r427; 

	// end inline asm
	mov.b32 	%r429, %f1795;
	mov.b32 	%r430, %f1796;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs55, %r430, %r429; 

	// end inline asm
	mov.b32 	%r431, %f1797;
	mov.b32 	%r432, %f1798;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs56, %r432, %r431; 

	// end inline asm
	mov.b32 	%r433, %f1799;
	mov.b32 	%r434, %f1800;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs57, %r434, %r433; 

	// end inline asm
	mov.b32 	%r435, %f1801;
	mov.b32 	%r436, %f1802;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs58, %r436, %r435; 

	// end inline asm
	mov.b32 	%r437, %f1803;
	mov.b32 	%r438, %f1804;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs59, %r438, %r437; 

	// end inline asm
	mov.b32 	%r439, %f1805;
	mov.b32 	%r440, %f1806;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs60, %r440, %r439; 

	// end inline asm
	mov.b32 	%r441, %f1807;
	mov.b32 	%r442, %f1808;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs61, %r442, %r441; 

	// end inline asm
	mov.b32 	%r443, %f1809;
	mov.b32 	%r444, %f1810;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs62, %r444, %r443; 

	// end inline asm
	mov.b32 	%r445, %f1811;
	mov.b32 	%r446, %f1812;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs63, %r446, %r445; 

	// end inline asm
	mov.b32 	%r447, %f1813;
	mov.b32 	%r448, %f1814;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs64, %r448, %r447; 

	// end inline asm
	.loc	1 263 61                        // persistent_profile.py:263:61
	// begin inline asm
	cp.async.bulk.wait_group.read 0x0;
	// end inline asm
	st.shared.u16 	[%r29], %rs1;
	st.shared.u16 	[%r29+1024], %rs2;
	st.shared.u16 	[%r29+8], %rs3;
	st.shared.u16 	[%r31+8], %rs4;
	st.shared.u16 	[%r32], %rs5;
	st.shared.u16 	[%r32+1024], %rs6;
	st.shared.u16 	[%r34], %rs7;
	st.shared.u16 	[%r34+1024], %rs8;
	st.shared.u16 	[%r36], %rs9;
	st.shared.u16 	[%r36+1024], %rs10;
	st.shared.u16 	[%r38], %rs11;
	st.shared.u16 	[%r38+1024], %rs12;
	st.shared.u16 	[%r40], %rs13;
	st.shared.u16 	[%r40+1024], %rs14;
	st.shared.u16 	[%r42], %rs15;
	st.shared.u16 	[%r42+1024], %rs16;
	st.shared.u16 	[%r44], %rs17;
	st.shared.u16 	[%r44+1024], %rs18;
	st.shared.u16 	[%r46], %rs19;
	st.shared.u16 	[%r46+1024], %rs20;
	st.shared.u16 	[%r48], %rs21;
	st.shared.u16 	[%r48+1024], %rs22;
	st.shared.u16 	[%r50], %rs23;
	st.shared.u16 	[%r50+1024], %rs24;
	st.shared.u16 	[%r52], %rs25;
	st.shared.u16 	[%r52+1024], %rs26;
	st.shared.u16 	[%r54], %rs27;
	st.shared.u16 	[%r54+1024], %rs28;
	st.shared.u16 	[%r56], %rs29;
	st.shared.u16 	[%r56+1024], %rs30;
	st.shared.u16 	[%r58], %rs31;
	st.shared.u16 	[%r58+1024], %rs32;
	st.shared.u16 	[%r29+16384], %rs33;
	st.shared.u16 	[%r29+17408], %rs34;
	st.shared.u16 	[%r60+8], %rs35;
	st.shared.u16 	[%r61+8], %rs36;
	st.shared.u16 	[%r32+16384], %rs37;
	st.shared.u16 	[%r32+17408], %rs38;
	st.shared.u16 	[%r34+16384], %rs39;
	st.shared.u16 	[%r34+17408], %rs40;
	st.shared.u16 	[%r36+16384], %rs41;
	st.shared.u16 	[%r36+17408], %rs42;
	st.shared.u16 	[%r38+16384], %rs43;
	st.shared.u16 	[%r38+17408], %rs44;
	st.shared.u16 	[%r40+16384], %rs45;
	st.shared.u16 	[%r40+17408], %rs46;
	st.shared.u16 	[%r42+16384], %rs47;
	st.shared.u16 	[%r42+17408], %rs48;
	st.shared.u16 	[%r44+16384], %rs49;
	st.shared.u16 	[%r44+17408], %rs50;
	st.shared.u16 	[%r46+16384], %rs51;
	st.shared.u16 	[%r46+17408], %rs52;
	st.shared.u16 	[%r48+16384], %rs53;
	st.shared.u16 	[%r48+17408], %rs54;
	st.shared.u16 	[%r50+16384], %rs55;
	st.shared.u16 	[%r50+17408], %rs56;
	st.shared.u16 	[%r52+16384], %rs57;
	st.shared.u16 	[%r52+17408], %rs58;
	st.shared.u16 	[%r54+16384], %rs59;
	st.shared.u16 	[%r54+17408], %rs60;
	st.shared.u16 	[%r56+16384], %rs61;
	st.shared.u16 	[%r56+17408], %rs62;
	st.shared.u16 	[%r58+16384], %rs63;
	st.shared.u16 	[%r58+17408], %rs64;
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r452, %r9, 0, 31, -1;
	shl.b32 	%r453, %r452, 14;
	add.s32 	%r455, %r144, %r453;
	add.s32 	%r451, %r455, 199680;
	shl.b32 	%r456, %r452, 7;
	add.s32 	%r449, %r456, %r488;
	// begin inline asm
	@%p52 cp.async.bulk.tensor.2d.global.shared::cta.bulk_group [%rd36, {%r449, %r490}], [%r451];
	// end inline asm
	// begin inline asm
	cp.async.bulk.commit_group ;
	// end inline asm
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %._crit_edge
	.loc	1 237 22                        // persistent_profile.py:237:22
	setp.ne.s32 	%p58, %r5, 0;
	// begin inline asm
	cp.async.bulk.wait_group.read 0x0;
	// end inline asm
	// begin inline asm
	// wait for regs: %f2219,%f2220,%f2221,%f2222,%f2223,%f2224,%f2225,%f2226,%f2227,%f2228,%f2229,%f2230,%f2231,%f2232,%f2233,%f2234,%f2235,%f2236,%f2237,%f2238,%f2239,%f2240,%f2241,%f2242,%f2243,%f2244,%f2245,%f2246,%f2247,%f2248,%f2249,%f2250,%f2251,%f2252,%f2253,%f2254,%f2255,%f2256,%f2257,%f2258,%f2259,%f2260,%f2261,%f2262,%f2263,%f2264,%f2265,%f2266,%f2267,%f2268,%f2269,%f2270,%f2271,%f2272,%f2273,%f2274,%f2275,%f2276,%f2277,%f2278,%f2279,%f2280,%f2281,%f2282,%f2283,%f2284,%f2285,%f2286,%f2287,%f2288,%f2289,%f2290,%f2291,%f2292,%f2293,%f2294,%f2295,%f2296,%f2297,%f2298,%f2299,%f2300,%f2301,%f2302,%f2303,%f2304,%f2305,%f2306,%f2307,%f2308,%f2309,%f2310,%f2311,%f2312,%f2313,%f2314,%f2315,%f2316,%f2317,%f2318,%f2319,%f2320,%f2321,%f2322,%f2323,%f2324,%f2325,%f2326,%f2327,%f2328,%f2329,%f2330,%f2331,%f2332,%f2333,%f2334,%f2335,%f2336,%f2337,%f2338,%f2339,%f2340,%f2341,%f2342,%f2343,%f2344,%f2345,%f2346
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 mbarrier.inval.shared::cta.b64 [%r94];
	// end inline asm
	// begin inline asm
	@%p6 mbarrier.inval.shared::cta.b64 [%r170];
	// end inline asm
	// begin inline asm
	@%p6 mbarrier.inval.shared::cta.b64 [%r191];
	// end inline asm
	// begin inline asm
	@%p6 mbarrier.inval.shared::cta.b64 [%r97];
	// end inline asm
	.loc	1 199 0                         // persistent_profile.py:199:0
	bar.sync 	0;
	// begin inline asm
	mov.u32 %r461, %ctaid.y;
	// end inline asm
	// begin inline asm
	mov.u32 %r462, %ctaid.z;
	// end inline asm
	// begin inline asm
	mov.u32 %r463, %smid;
	// end inline asm
	mov.u32 	%r465, %nctaid.x;
	mov.u32 	%r466, %nctaid.y;
	mad.lo.s32 	%r467, %r462, %r466, %r461;
	mad.lo.s32 	%r89, %r467, %r465, %r1;
	mul.lo.s32 	%r90, %r89, 530;
	shl.b32 	%r468, %r9, 1;
	add.s32 	%r469, %r468, %r90;
	add.s32 	%r470, %r469, 2;
	mul.wide.s32 	%rd37, %r470, 4;
	add.s64 	%rd38, %rd7, %rd37;
	st.global.u32 	[%rd38], %r463;
	mov.b32 	%r471, 4;
	st.global.u32 	[%rd38+4], %r471;
	@%p58 bra 	$L__BB0_14;
// %bb.12:
	mul.wide.s32 	%rd40, %r90, 4;
	add.s64 	%rd41, %rd7, %rd40;
	mov.b32 	%r473, -559038737;
	st.global.u32 	[%rd41], %r473;
	st.global.u32 	[%rd41+4], %r89;
	add.s32 	%r504, %r144, 4;
	cvt.u64.u32 	%rd4, %r90;
	mov.u64 	%rd45, -2;
$L__BB0_13:                             // =>This Inner Loop Header: Depth=1
	add.s64 	%rd42, %rd4, %rd45;
	ld.shared.v2.u32 	{%r475, %r476}, [%r504+-4];
	cvt.u32.u64 	%r477, %rd42;
	add.s32 	%r478, %r477, 20;
	mul.wide.s32 	%rd43, %r478, 4;
	add.s64 	%rd44, %rd7, %rd43;
	st.global.u32 	[%rd44], %r475;
	st.global.u32 	[%rd44+4], %r476;
	add.s64 	%rd45, %rd45, 2;
	add.s32 	%r504, %r504, 8;
	setp.lt.u64 	%p59, %rd45, 510;
	@%p59 bra 	$L__BB0_13;
$L__BB0_14:                             // %.loopexit
	.loc	1 237 4                         // persistent_profile.py:237:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py"
	.file	2 "/home/srir/triton/python/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 207                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 112                                 // DW_AT_name
.b8 101
.b8 114
.b8 115
.b8 105
.b8 115
.b8 116
.b8 101
.b8 110
.b8 116
.b8 95
.b8 112
.b8 114
.b8 111
.b8 102
.b8 105
.b8 108
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 115
.b8 114
.b8 105
.b8 114
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 98
.b8 101
.b8 110
.b8 99
.b8 104
.b8 47
.b8 111
.b8 112
.b8 101
.b8 114
.b8 97
.b8 116
.b8 111
.b8 114
.b8 115
.b8 47
.b8 102
.b8 112
.b8 56
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x65:0x27 DW_TAG_subprogram
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 95
.b8 116
.b8 109
.b8 97
.b8 95
.b8 112
.b8 101
.b8 114
.b8 115
.b8 105
.b8 115
.b8 116
.b8 101
.b8 110
.b8 116
.b8 95
.b8 112
.b8 114
.b8 111
.b8 102
.b8 105
.b8 108
.b8 101
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8c:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 101                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa1:0x18 DW_TAG_inlined_subroutine
.b32 101                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 217                                 // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb9:0x18 DW_TAG_inlined_subroutine
.b32 101                                // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 218                                 // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
