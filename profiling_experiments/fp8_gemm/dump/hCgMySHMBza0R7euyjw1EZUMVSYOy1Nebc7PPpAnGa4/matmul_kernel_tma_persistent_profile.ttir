#loc = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0)
module {
  tt.func public @matmul_kernel_tma_persistent_profile(%arg0: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0), %arg1: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0), %arg2: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0), %arg6: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128x256xf32> loc(#loc1)
    %c255_i32 = arith.constant 255 : i32 loc(#loc1)
    %c127_i32 = arith.constant 127 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c132_i32 = arith.constant 132 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.addi %arg3, %c127_i32 : i32 loc(#loc46)
    %2 = arith.divsi %1, %c128_i32 : i32 loc(#loc47)
    %3 = arith.addi %arg4, %c255_i32 : i32 loc(#loc48)
    %4 = arith.divsi %3, %c256_i32 : i32 loc(#loc49)
    %5 = arith.addi %arg5, %c127_i32 : i32 loc(#loc50)
    %6 = arith.divsi %5, %c128_i32 : i32 loc(#loc51)
    %7 = arith.muli %2, %4 : i32 loc(#loc8)
    %8 = arith.divsi %7, %c132_i32 : i32 loc(#loc9)
    %9 = arith.remsi %7, %c132_i32 : i32 loc(#loc10)
    %10 = arith.cmpi slt, %0, %9 : i32 loc(#loc11)
    %11 = scf.if %10 -> (i32) {
      %17 = arith.addi %8, %c1_i32 : i32 loc(#loc13)
      scf.yield %17 : i32 loc(#loc13)
    } else {
      scf.yield %8 : i32 loc(#loc1)
    } loc(#loc12)
    %12 = arith.subi %0, %c132_i32 : i32 loc(#loc14)
    %13 = arith.muli %4, %c8_i32 : i32 loc(#loc15)
    %14 = arith.muli %6, %11 : i32 loc(#loc16)
    %15 = arith.subi %6, %c1_i32 : i32 loc(#loc17)
    %16:7 = scf.for %arg7 = %c0_i32 to %14 step %c1_i32 iter_args(%arg8 = %c-1_i32, %arg9 = %12, %arg10 = %c0_i32, %arg11 = %c0_i32, %arg12 = %c0_i32, %arg13 = %c0_i32, %arg14 = %cst) -> (i32, i32, i32, i32, i32, i32, tensor<128x256xf32>)  : i32 {
      %17 = arith.cmpi eq, %arg8, %15 : i32 loc(#loc19)
      %18 = arith.addi %arg8, %c1_i32 : i32 loc(#loc20)
      %19 = arith.select %17, %c0_i32, %18 : i32 loc(#loc21)
      %20 = arith.cmpi eq, %19, %c0_i32 : i32 loc(#loc22)
      %21:5 = scf.if %20 -> (i32, i32, i32, i32, i32) {
        %29 = arith.addi %arg9, %c132_i32 : i32 loc(#loc24)
        %30 = arith.divsi %29, %13 : i32 loc(#loc25)
        %31 = arith.muli %30, %c8_i32 : i32 loc(#loc26)
        %32 = arith.subi %2, %31 : i32 loc(#loc27)
        %33 = arith.minsi %32, %c8_i32 : i32 loc(#loc28)
        %34 = arith.remsi %29, %33 : i32 loc(#loc29)
        %35 = arith.addi %31, %34 : i32 loc(#loc30)
        %36 = arith.remsi %29, %13 : i32 loc(#loc31)
        %37 = arith.divsi %36, %33 : i32 loc(#loc32)
        %38 = arith.muli %35, %c128_i32 : i32 loc(#loc33)
        %39 = arith.muli %37, %c256_i32 : i32 loc(#loc34)
        scf.yield %29, %35, %37, %38, %39 : i32, i32, i32, i32, i32 loc(#loc34)
      } else {
        scf.yield %arg9, %arg10, %arg11, %arg12, %arg13 : i32, i32, i32, i32, i32 loc(#loc1)
      } loc(#loc23)
      %22 = arith.muli %19, %c128_i32 : i32 loc(#loc35)
      %23 = tt.experimental_descriptor_load %arg0[%21#3, %22] : !tt.ptr<i8, 0> -> tensor<128x128xf8E4M3FN> loc(#loc36)
      %24 = tt.experimental_descriptor_load %arg1[%21#4, %22] : !tt.ptr<i8, 0> -> tensor<256x128xf8E4M3FN> loc(#loc37)
      %25 = tt.trans %24 {order = array<i32: 1, 0>} : tensor<256x128xf8E4M3FN> -> tensor<128x256xf8E4M3FN> loc(#loc38)
      %26 = tt.dot %23, %25, %arg14, inputPrecision = tf32 {maxNumImpreciseAcc = 1073741824 : i32} : tensor<128x128xf8E4M3FN> * tensor<128x256xf8E4M3FN> -> tensor<128x256xf32> loc(#loc39)
      %27 = arith.cmpi eq, %19, %15 : i32 loc(#loc40)
      %28 = arith.select %27, %cst, %26 : tensor<128x256xf32> loc(#loc41)
      scf.if %27 {
        %29 = tt.fp_to_fp %26, rounding = rtne : tensor<128x256xf32> -> tensor<128x256xf8E4M3FN> loc(#loc42)
        tt.experimental_descriptor_store %arg2[%21#3, %21#4], %29 : !tt.ptr<i8, 0>, tensor<128x256xf8E4M3FN> loc(#loc43)
      } loc(#loc41)
      scf.yield %19, %21#0, %21#1, %21#2, %21#3, %21#4, %28 : i32, i32, i32, i32, i32, i32, tensor<128x256xf32> loc(#loc44)
    } loc(#loc18)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":215:30)
#loc3 = loc("/home/srir/triton/python/triton/language/standard.py":40:22)
#loc4 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":216:27)
#loc5 = loc("/home/srir/triton/python/triton/language/standard.py":40:28)
#loc6 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":217:27)
#loc7 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":218:25)
#loc8 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":219:28)
#loc9 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":221:32)
#loc10 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":222:31)
#loc11 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":222:19)
#loc12 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":222:7)
#loc13 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":223:24)
#loc14 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":225:26)
#loc15 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":233:38)
#loc16 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":237:32)
#loc17 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":238:38)
#loc18 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":237:22)
#loc19 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":238:28)
#loc20 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":238:49)
#loc21 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":238:44)
#loc22 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":239:17)
#loc23 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":239:11)
#loc24 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":240:23)
#loc25 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":241:34)
#loc26 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":242:37)
#loc27 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":243:43)
#loc28 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":243:56)
#loc29 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":244:45)
#loc30 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":244:35)
#loc31 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":245:31)
#loc32 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":245:52)
#loc33 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":247:30)
#loc34 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":248:30)
#loc35 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":250:22)
#loc36 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":253:73)
#loc37 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":256:73)
#loc38 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":258:32)
#loc39 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":258:37)
#loc40 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":260:17)
#loc41 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":260:11)
#loc42 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":261:31)
#loc43 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":263:61)
#loc44 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":260:8)
#loc45 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":237:4)
#loc46 = loc(callsite(#loc3 at #loc4))
#loc47 = loc(callsite(#loc5 at #loc4))
#loc48 = loc(callsite(#loc3 at #loc6))
#loc49 = loc(callsite(#loc5 at #loc6))
#loc50 = loc(callsite(#loc3 at #loc7))
#loc51 = loc(callsite(#loc5 at #loc7))
