#loc = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0)
#mma = #triton_gpu.nvidia_mma<{versionMajor = 3, versionMinor = 0, warpsPerCTA = [8, 1], instrShape = [16, 256, 32]}>
#shared = #triton_gpu.shared<{vec = 16, perPhase = 1, maxPhase = 8, order = [1, 0], hasLeadingOffset = true}>
#shared1 = #triton_gpu.shared<{vec = 1, perPhase = 1, maxPhase = 1, order = [0], hasLeadingOffset = false}>
#shared2 = #triton_gpu.shared<{vec = 16, perPhase = 1, maxPhase = 8, order = [0, 1], hasLeadingOffset = true}>
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, "triton_gpu.proton-slots" = 256 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @matmul_kernel_tma_persistent_profile(%arg0: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0), %arg1: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0), %arg2: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0), %arg6: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":199:0)) attributes {noinline = false} {
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %false = arith.constant false loc(#loc1)
    %c132_i32 = arith.constant 132 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c127_i32 = arith.constant 127 : i32 loc(#loc1)
    %c255_i32 = arith.constant 255 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<128x256xf32, #mma> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.addi %arg3, %c127_i32 : i32 loc(#loc44)
    %2 = arith.divsi %1, %c128_i32 : i32 loc(#loc45)
    %3 = arith.addi %arg4, %c255_i32 : i32 loc(#loc46)
    %4 = arith.divsi %3, %c256_i32 : i32 loc(#loc47)
    %5 = arith.addi %arg5, %c127_i32 : i32 loc(#loc48)
    %6 = arith.divsi %5, %c128_i32 : i32 loc(#loc49)
    %7 = arith.muli %2, %4 : i32 loc(#loc8)
    %8 = arith.divsi %7, %c132_i32 : i32 loc(#loc9)
    %9 = arith.remsi %7, %c132_i32 : i32 loc(#loc10)
    %10 = arith.cmpi slt, %0, %9 : i32 loc(#loc11)
    %11 = scf.if %10 -> (i32) {
      %56 = arith.addi %8, %c1_i32 : i32 loc(#loc13)
      scf.yield %56 : i32 loc(#loc13)
    } else {
      scf.yield %8 : i32 loc(#loc1)
    } loc(#loc12)
    %12 = arith.muli %4, %c8_i32 : i32 loc(#loc14)
    %13 = arith.muli %6, %11 : i32 loc(#loc15)
    %14 = arith.subi %6, %c1_i32 : i32 loc(#loc16)
    %15 = triton_gpu.local_alloc  : () -> !tt.memdesc<4x128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc17)
    %16 = triton_gpu.local_alloc  : () -> !tt.memdesc<4x256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc18)
    %17 = triton_gpu.local_alloc  : () -> !tt.memdesc<4xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    %18 = triton_gpu.memdesc_subview %17[%c0_i32] : !tt.memdesc<4xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    triton_nvidia_gpu.init_barrier %18, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    %19 = triton_gpu.memdesc_subview %17[%c1_i32] : !tt.memdesc<4xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    triton_nvidia_gpu.init_barrier %19, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    %20 = triton_gpu.memdesc_subview %17[%c2_i32] : !tt.memdesc<4xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    triton_nvidia_gpu.init_barrier %20, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    %21 = triton_gpu.memdesc_subview %17[%c3_i32] : !tt.memdesc<4xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    triton_nvidia_gpu.init_barrier %21, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    %22 = arith.cmpi sgt, %13, %c0_i32 : i32 loc(#loc19)
    %23 = arith.divsi %0, %12 : i32 loc(#loc20)
    %24 = arith.muli %23, %c8_i32 : i32 loc(#loc21)
    %25 = arith.subi %2, %24 : i32 loc(#loc22)
    %26 = arith.minsi %25, %c8_i32 : i32 loc(#loc23)
    %27 = arith.remsi %0, %26 : i32 loc(#loc24)
    %28 = arith.addi %24, %27 : i32 loc(#loc25)
    %29 = arith.remsi %0, %12 : i32 loc(#loc26)
    %30 = arith.divsi %29, %26 : i32 loc(#loc27)
    %31 = arith.muli %28, %c128_i32 : i32 loc(#loc28)
    %32 = arith.muli %30, %c256_i32 : i32 loc(#loc29)
    triton_nvidia_gpu.barrier_expect %18, 49152, %22 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    %33 = triton_gpu.memdesc_subview %15[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc17)
    tt.proton_record <0, "start", "cycle", "warpgroup">
    triton_nvidia_gpu.async_tma_copy_global_to_local %arg0[%31, %c0_i32] %33, %18, %22 : <i8, 0>, <1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> <128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc17)
    tt.proton_record <0, "end", "cycle", "warpgroup">
    %34 = triton_gpu.memdesc_subview %16[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<4x256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc18)
    triton_nvidia_gpu.async_tma_copy_global_to_local %arg1[%32, %c0_i32] %34, %18, %22 : <i8, 0>, <1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> <256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc18)
    %35 = arith.cmpi sgt, %13, %c1_i32 : i32 loc(#loc19)
    %36 = arith.cmpi ne, %14, %c0_i32 : i32 loc(#loc50)
    %37 = arith.extui %36 : i1 to i32 loc(#loc30)
    %38 = arith.cmpi eq, %37, %c0_i32 : i32 loc(#loc32)
    %39:3 = scf.if %38 -> (i32, i32, i32) {
      %56 = arith.addi %0, %c132_i32 : i32 loc(#loc34)
      %57 = arith.divsi %56, %12 : i32 loc(#loc20)
      %58 = arith.muli %57, %c8_i32 : i32 loc(#loc21)
      %59 = arith.subi %2, %58 : i32 loc(#loc22)
      %60 = arith.minsi %59, %c8_i32 : i32 loc(#loc23)
      %61 = arith.remsi %56, %60 : i32 loc(#loc24)
      %62 = arith.addi %58, %61 : i32 loc(#loc25)
      %63 = arith.remsi %56, %12 : i32 loc(#loc26)
      %64 = arith.divsi %63, %60 : i32 loc(#loc27)
      %65 = arith.muli %62, %c128_i32 : i32 loc(#loc28)
      %66 = arith.muli %64, %c256_i32 : i32 loc(#loc29)
      scf.yield %56, %65, %66 : i32, i32, i32 loc(#loc29)
    } else {
      scf.yield %0, %31, %32 : i32, i32, i32 loc(#loc1)
    } loc(#loc33)
    %40 = arith.muli %37, %c128_i32 : i32 loc(#loc35)
    triton_nvidia_gpu.barrier_expect %19, 49152, %35 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    %41 = triton_gpu.memdesc_subview %15[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc17)
    triton_nvidia_gpu.async_tma_copy_global_to_local %arg0[%39#1, %40] %41, %19, %35 : <i8, 0>, <1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> <128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc17)
    %42 = triton_gpu.memdesc_subview %16[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<4x256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc18)
    triton_nvidia_gpu.async_tma_copy_global_to_local %arg1[%39#2, %40] %42, %19, %35 : <i8, 0>, <1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> <256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc18)
    %43 = arith.cmpi sgt, %13, %c2_i32 : i32 loc(#loc19)
    %44 = arith.cmpi eq, %37, %14 : i32 loc(#loc31)
    %45 = arith.addi %37, %c1_i32 : i32 loc(#loc36)
    %46 = arith.select %44, %c0_i32, %45 : i32 loc(#loc30)
    %47 = arith.cmpi eq, %46, %c0_i32 : i32 loc(#loc32)
    %48:3 = scf.if %47 -> (i32, i32, i32) {
      %56 = arith.addi %39#0, %c132_i32 : i32 loc(#loc34)
      %57 = arith.divsi %56, %12 : i32 loc(#loc20)
      %58 = arith.muli %57, %c8_i32 : i32 loc(#loc21)
      %59 = arith.subi %2, %58 : i32 loc(#loc22)
      %60 = arith.minsi %59, %c8_i32 : i32 loc(#loc23)
      %61 = arith.remsi %56, %60 : i32 loc(#loc24)
      %62 = arith.addi %58, %61 : i32 loc(#loc25)
      %63 = arith.remsi %56, %12 : i32 loc(#loc26)
      %64 = arith.divsi %63, %60 : i32 loc(#loc27)
      %65 = arith.muli %62, %c128_i32 : i32 loc(#loc28)
      %66 = arith.muli %64, %c256_i32 : i32 loc(#loc29)
      scf.yield %56, %65, %66 : i32, i32, i32 loc(#loc29)
    } else {
      scf.yield %39#0, %39#1, %39#2 : i32, i32, i32 loc(#loc1)
    } loc(#loc33)
    %49 = arith.muli %46, %c128_i32 : i32 loc(#loc35)
    triton_nvidia_gpu.barrier_expect %20, 49152, %43 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    %50 = triton_gpu.memdesc_subview %15[%c2_i32, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc17)
    triton_nvidia_gpu.async_tma_copy_global_to_local %arg0[%48#1, %49] %50, %20, %43 : <i8, 0>, <1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> <128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc17)
    %51 = triton_gpu.memdesc_subview %16[%c2_i32, %c0_i32, %c0_i32] : !tt.memdesc<4x256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc18)
    triton_nvidia_gpu.async_tma_copy_global_to_local %arg1[%48#2, %49] %51, %20, %43 : <i8, 0>, <1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> <256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc18)
    %52 = triton_gpu.local_alloc  : () -> !tt.memdesc<128x256xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc37)
    %53:18 = scf.for %arg7 = %c0_i32 to %13 step %c1_i32 iter_args(%arg8 = %46, %arg9 = %48#0, %arg10 = %48#1, %arg11 = %48#2, %arg12 = %cst, %arg13 = %false, %arg14 = %c2_i32, %arg15 = %c-1_i32, %arg16 = %c0_i32, %arg17 = %c0_i32, %arg18 = %37, %arg19 = %46, %arg20 = %31, %arg21 = %39#1, %arg22 = %48#1, %arg23 = %32, %arg24 = %39#2, %arg25 = %48#2) -> (i32, i32, i32, i32, tensor<128x256xf32, #mma>, i1, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)  : i32 {
      %56 = arith.subi %13, %c3_i32 : i32 loc(#loc19)
      %57 = arith.cmpi slt, %arg7, %56 : i32 loc(#loc19)
      %58 = arith.cmpi eq, %arg8, %14 : i32 loc(#loc31)
      %59 = arith.addi %arg8, %c1_i32 : i32 loc(#loc36)
      %60 = arith.select %58, %c0_i32, %59 : i32 loc(#loc30)
      %61 = arith.cmpi eq, %60, %c0_i32 : i32 loc(#loc32)
      %62:3 = scf.if %61 -> (i32, i32, i32) {
        %83 = arith.addi %arg9, %c132_i32 : i32 loc(#loc34)
        %84 = arith.divsi %83, %12 : i32 loc(#loc20)
        %85 = arith.muli %84, %c8_i32 : i32 loc(#loc21)
        %86 = arith.subi %2, %85 : i32 loc(#loc22)
        %87 = arith.minsi %86, %c8_i32 : i32 loc(#loc23)
        %88 = arith.remsi %83, %87 : i32 loc(#loc24)
        %89 = arith.addi %85, %88 : i32 loc(#loc25)
        %90 = arith.remsi %83, %12 : i32 loc(#loc26)
        %91 = arith.divsi %90, %87 : i32 loc(#loc27)
        %92 = arith.muli %89, %c128_i32 : i32 loc(#loc28)
        %93 = arith.muli %91, %c256_i32 : i32 loc(#loc29)
        scf.yield %83, %92, %93 : i32, i32, i32 loc(#loc29)
      } else {
        scf.yield %arg9, %arg10, %arg11 : i32, i32, i32 loc(#loc1)
      } loc(#loc33)
      %63 = arith.addi %arg15, %c1_i32 : i32 loc(#loc19)
      %64 = arith.cmpi slt, %63, %c4_i32 : i32 loc(#loc19)
      %65 = arith.select %64, %63, %c0_i32 : i32 loc(#loc19)
      %66 = arith.xori %arg16, %c1_i32 : i32 loc(#loc19)
      %67 = arith.select %64, %arg16, %66 : i32 loc(#loc19)
      %68 = triton_gpu.memdesc_subview %17[%65] : !tt.memdesc<4xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
      triton_nvidia_gpu.wait_barrier %68, %67 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
      %69 = triton_gpu.memdesc_subview %16[%65, %c0_i32, %c0_i32] : !tt.memdesc<4x256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc18)
      %70 = tt.trans %69 {order = array<i32: 1, 0>} : !tt.memdesc<256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x256xf8E4M3FN, #shared2, #triton_gpu.shared_memory, mutable> loc(#loc38)
      %71 = triton_gpu.memdesc_subview %15[%65, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc17)
      %72 = triton_nvidia_gpu.warp_group_dot %71, %70, %arg12, %arg13 {inputPrecision = 0 : i32, isAsync = true, maxNumImpreciseAcc = 1073741824 : i32} : !tt.memdesc<128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> * !tt.memdesc<128x256xf8E4M3FN, #shared2, #triton_gpu.shared_memory, mutable> -> tensor<128x256xf32, #mma> loc(#loc39)
      %73:3 = triton_nvidia_gpu.warp_group_dot_wait %72, %71, %70 {pendings = 1 : i32} : tensor<128x256xf32, #mma>, !tt.memdesc<128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable>, !tt.memdesc<128x256xf8E4M3FN, #shared2, #triton_gpu.shared_memory, mutable> loc(#loc39)
      %74 = arith.addi %arg14, %c1_i32 : i32 loc(#loc19)
      %75 = arith.cmpi slt, %74, %c4_i32 : i32 loc(#loc19)
      %76 = arith.select %75, %74, %c0_i32 : i32 loc(#loc19)
      %77 = arith.muli %60, %c128_i32 : i32 loc(#loc35)
      %78 = triton_gpu.memdesc_subview %17[%76] : !tt.memdesc<4xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
      triton_nvidia_gpu.barrier_expect %78, 49152, %57 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
      %79 = triton_gpu.memdesc_subview %15[%76, %c0_i32, %c0_i32] : !tt.memdesc<4x128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc17)
      triton_nvidia_gpu.async_tma_copy_global_to_local %arg0[%62#1, %77] %79, %78, %57 : <i8, 0>, <1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> <128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc17)
      %80 = triton_gpu.memdesc_subview %16[%76, %c0_i32, %c0_i32] : !tt.memdesc<4x256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc18)
      triton_nvidia_gpu.async_tma_copy_global_to_local %arg1[%62#2, %77] %80, %78, %57 : <i8, 0>, <1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> <256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc18)
      %81 = arith.cmpi eq, %arg17, %14 : i32 loc(#loc40)
      %82 = arith.cmpi ne, %arg17, %14 : i32 loc(#loc51)
      scf.if %81 {
        %83:3 = triton_nvidia_gpu.warp_group_dot_wait %73#0, %71, %70 {pendings = 0 : i32} : tensor<128x256xf32, #mma>, !tt.memdesc<128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable>, !tt.memdesc<128x256xf8E4M3FN, #shared2, #triton_gpu.shared_memory, mutable> loc(#loc39)
        %84 = tt.fp_to_fp %83#0, rounding = rtne : tensor<128x256xf32, #mma> -> tensor<128x256xf8E4M3FN, #mma> loc(#loc42)
        triton_nvidia_gpu.async_tma_store_wait {pendings = 0 : i32} loc(#loc37)
        triton_gpu.local_store %84, %52 : tensor<128x256xf8E4M3FN, #mma> -> !tt.memdesc<128x256xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc37)
        triton_nvidia_gpu.fence_async_shared {bCluster = false} loc(#loc37)
        triton_nvidia_gpu.async_tma_copy_local_to_global %arg2[%arg20, %arg23] %52 : <i8, 0>, <128x256xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc37)
      } loc(#loc41)
      scf.yield %60, %62#0, %62#1, %62#2, %73#0, %82, %76, %65, %67, %arg18, %arg19, %60, %arg21, %arg22, %62#1, %arg24, %arg25, %62#2 : i32, i32, i32, i32, tensor<128x256xf32, #mma>, i1, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 loc(#loc19)
    } loc(#loc19)
    triton_nvidia_gpu.async_tma_store_wait {pendings = 0 : i32} loc(#loc19)
    triton_gpu.local_dealloc %52 : !tt.memdesc<128x256xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc19)
    %54 = triton_nvidia_gpu.warp_group_dot_wait %53#4 {pendings = 0 : i32} : tensor<128x256xf32, #mma> loc(#loc19)
    %55 = triton_gpu.async_wait  {num = 0 : i32} loc(#loc19)
    triton_nvidia_gpu.inval_barrier %18 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    triton_nvidia_gpu.inval_barrier %19 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    triton_nvidia_gpu.inval_barrier %20 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    triton_nvidia_gpu.inval_barrier %21 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc19)
    triton_gpu.local_dealloc %15 : !tt.memdesc<4x128x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc19)
    triton_gpu.local_dealloc %16 : !tt.memdesc<4x256x128xf8E4M3FN, #shared, #triton_gpu.shared_memory, mutable> loc(#loc19)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":215:30)
#loc3 = loc("/home/srir/triton/python/triton/language/standard.py":40:22)
#loc4 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":216:27)
#loc5 = loc("/home/srir/triton/python/triton/language/standard.py":40:28)
#loc6 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":217:27)
#loc7 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":218:25)
#loc8 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":219:28)
#loc9 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":221:32)
#loc10 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":222:31)
#loc11 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":222:19)
#loc12 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":222:7)
#loc13 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":223:24)
#loc14 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":233:38)
#loc15 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":237:32)
#loc16 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":238:38)
#loc17 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":253:73)
#loc18 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":256:73)
#loc19 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":237:22)
#loc20 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":241:34)
#loc21 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":242:37)
#loc22 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":243:43)
#loc23 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":243:56)
#loc24 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":244:45)
#loc25 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":244:35)
#loc26 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":245:31)
#loc27 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":245:52)
#loc28 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":247:30)
#loc29 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":248:30)
#loc30 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":238:44)
#loc31 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":238:28)
#loc32 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":239:17)
#loc33 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":239:11)
#loc34 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":240:23)
#loc35 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":250:22)
#loc36 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":238:49)
#loc37 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":263:61)
#loc38 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":258:32)
#loc39 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":258:37)
#loc40 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":260:17)
#loc41 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":260:11)
#loc42 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":261:31)
#loc43 = loc("/home/srir/tritonbench/tritonbench/operators/fp8_gemm/persistent_profile.py":237:4)
#loc44 = loc(callsite(#loc3 at #loc4))
#loc45 = loc(callsite(#loc5 at #loc4))
#loc46 = loc(callsite(#loc3 at #loc6))
#loc47 = loc(callsite(#loc5 at #loc6))
#loc48 = loc(callsite(#loc3 at #loc7))
#loc49 = loc(callsite(#loc5 at #loc7))
#loc50 = loc(fused[#loc30, #loc31])
#loc51 = loc(fused[#loc41, #loc40])
