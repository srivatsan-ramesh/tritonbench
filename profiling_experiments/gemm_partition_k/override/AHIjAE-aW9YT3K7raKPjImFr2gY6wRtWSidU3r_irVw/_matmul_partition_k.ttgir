#blocked = #triton_gpu.blocked<{sizePerThread = [1, 8], threadsPerWarp = [4, 8], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1, 1], threadsPerWarp = [32, 1, 1], warpsPerCTA = [1, 2, 1], order = [0, 1, 2]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [1, 8], threadsPerWarp = [8, 4], warpsPerCTA = [2, 1], order = [1, 0]}>
#loc = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0)
#mma = #triton_gpu.nvidia_mma<{versionMajor = 2, versionMinor = 0, warpsPerCTA = [2, 1], instrShape = [16, 8]}>
#shared = #triton_gpu.shared<{vec = 8, perPhase = 1, maxPhase = 8, order = [1, 0], hasLeadingOffset = false}>
#shared1 = #triton_gpu.shared<{vec = 8, perPhase = 2, maxPhase = 4, order = [1, 0], hasLeadingOffset = false}>
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, "triton_gpu.proton-slots" = 256 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @_matmul_partition_k(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0), %arg12: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":30:0)) attributes {noinline = false} {
    tt.proton_record <0, "start", "cycle", "warp">
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %cst = arith.constant dense<64> : tensor<32x64xi32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c63_i32 = arith.constant 63 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<32x32xf32, #mma> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = tt.get_program_id z : i32 loc(#loc4)
    %3 = arith.muli %0, %c32_i32 : i32 loc(#loc5)
    %4 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc6)
    %5 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> loc(#loc6)
    %6 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> loc(#loc6)
    %7 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> loc(#loc6)
    %8 = tt.splat %3 : i32 -> tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc7)
    %9 = tt.splat %3 : i32 -> tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> loc(#loc7)
    %10 = arith.addi %8, %4 : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc7)
    %11 = arith.addi %9, %5 : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> loc(#loc7)
    %12 = tt.splat %arg3 : i32 -> tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc8)
    %13 = arith.remsi %10, %12 : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc8)
    %14 = arith.muli %1, %c32_i32 : i32 loc(#loc9)
    %15 = tt.splat %14 : i32 -> tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> loc(#loc10)
    %16 = tt.splat %14 : i32 -> tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> loc(#loc10)
    %17 = arith.addi %15, %6 : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> loc(#loc10)
    %18 = arith.addi %16, %7 : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> loc(#loc10)
    %19 = tt.splat %arg4 : i32 -> tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> loc(#loc11)
    %20 = arith.remsi %17, %19 : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> loc(#loc11)
    %21 = arith.muli %2, %arg7 : i32 loc(#loc12)
    %22 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc13)
    %23 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc13)
    %24 = tt.splat %21 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc14)
    %25 = tt.splat %21 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc14)
    %26 = arith.addi %24, %22 : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc14)
    %27 = arith.addi %25, %23 : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc14)
    %28 = tt.splat %arg5 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc15)
    %29 = tt.splat %arg5 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc15)
    %30 = arith.remsi %26, %28 : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc15)
    %31 = arith.remsi %27, %29 : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc15)
    %32 = tt.expand_dims %13 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc16)
    %33 = tt.splat %arg8 : i32 -> tensor<32x1xi32, #blocked> loc(#loc17)
    %34 = arith.muli %32, %33 : tensor<32x1xi32, #blocked> loc(#loc17)
    %35 = tt.expand_dims %30 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc18)
    %36 = tt.broadcast %34 : tensor<32x1xi32, #blocked> -> tensor<32x64xi32, #blocked> loc(#loc19)
    %37 = tt.broadcast %35 : tensor<1x64xi32, #blocked> -> tensor<32x64xi32, #blocked> loc(#loc19)
    %38 = arith.addi %36, %37 : tensor<32x64xi32, #blocked> loc(#loc19)
    %39 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<32x64x!tt.ptr<f16>, #blocked> loc(#loc20)
    %40 = tt.addptr %39, %38 : tensor<32x64x!tt.ptr<f16>, #blocked>, tensor<32x64xi32, #blocked> loc(#loc20)
    %41 = tt.expand_dims %31 {axis = 1 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<64x1xi32, #blocked2> loc(#loc21)
    %42 = tt.splat %arg9 : i32 -> tensor<64x1xi32, #blocked2> loc(#loc22)
    %43 = arith.muli %41, %42 : tensor<64x1xi32, #blocked2> loc(#loc22)
    %44 = tt.expand_dims %20 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> -> tensor<1x32xi32, #blocked2> loc(#loc23)
    %45 = tt.broadcast %43 : tensor<64x1xi32, #blocked2> -> tensor<64x32xi32, #blocked2> loc(#loc24)
    %46 = tt.broadcast %44 : tensor<1x32xi32, #blocked2> -> tensor<64x32xi32, #blocked2> loc(#loc24)
    %47 = arith.addi %45, %46 : tensor<64x32xi32, #blocked2> loc(#loc24)
    %48 = tt.splat %arg1 : !tt.ptr<f16> -> tensor<64x32x!tt.ptr<f16>, #blocked2> loc(#loc25)
    %49 = tt.addptr %48, %47 : tensor<64x32x!tt.ptr<f16>, #blocked2>, tensor<64x32xi32, #blocked2> loc(#loc25)
    tt.proton_record <0, "end", "cycle", "warp">
    tt.proton_record <1, "start", "cycle", "warp">
    %50 = arith.addi %arg7, %c63_i32 : i32 loc(#loc47)
    %51 = arith.divsi %50, %c64_i32 : i32 loc(#loc48)
    %52 = arith.muli %arg9, %c64_i32 : i32 loc(#loc29)
    %53 = tt.splat %52 : i32 -> tensor<64x32xi32, #blocked2> loc(#loc30)
    %54 = triton_gpu.local_alloc  : () -> !tt.memdesc<3x64x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc31)
    %55 = arith.cmpi sgt, %51, %c0_i32 : i32 loc(#loc32)
    %56 = triton_gpu.memdesc_subview %54[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<64x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc31)
    %57 = tt.splat %55 : i1 -> tensor<64x32xi1, #blocked2> loc(#loc32)
    %58 = triton_gpu.async_copy_global_to_local %49, %56 mask %57 : tensor<64x32x!tt.ptr<f16>, #blocked2> -> <64x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc31)
    %59 = triton_gpu.async_commit_group %58 loc(#loc31)
    %60 = arith.cmpi sgt, %51, %c1_i32 : i32 loc(#loc32)
    %61 = tt.addptr %49, %53 : tensor<64x32x!tt.ptr<f16>, #blocked2>, tensor<64x32xi32, #blocked2> loc(#loc30)
    %62 = triton_gpu.memdesc_subview %54[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<64x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc31)
    %63 = tt.splat %60 : i1 -> tensor<64x32xi1, #blocked2> loc(#loc32)
    %64 = triton_gpu.async_copy_global_to_local %61, %62 mask %63 : tensor<64x32x!tt.ptr<f16>, #blocked2> -> <64x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc31)
    %65 = triton_gpu.async_commit_group %64 loc(#loc31)
    %66 = arith.cmpi sgt, %51, %c2_i32 : i32 loc(#loc32)
    %67 = tt.addptr %61, %53 : tensor<64x32x!tt.ptr<f16>, #blocked2>, tensor<64x32xi32, #blocked2> loc(#loc30)
    %68 = triton_gpu.memdesc_subview %54[%c2_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<64x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc31)
    %69 = tt.splat %66 : i1 -> tensor<64x32xi1, #blocked2> loc(#loc32)
    %70 = triton_gpu.async_copy_global_to_local %67, %68 mask %69 : tensor<64x32x!tt.ptr<f16>, #blocked2> -> <64x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc31)
    %71 = triton_gpu.async_commit_group %70 loc(#loc31)
    %72 = triton_gpu.async_wait %59 {num = 2 : i32} loc(#loc31)
    %73:8 = scf.for %arg13 = %c0_i32 to %51 step %c1_i32 iter_args(%arg14 = %cst_0, %arg15 = %40, %arg16 = %67, %arg17 = %c2_i32, %arg18 = %c0_i32, %arg19 = %56, %arg20 = %65, %arg21 = %71) -> (tensor<32x32xf32, #mma>, tensor<32x64x!tt.ptr<f16>, #blocked>, tensor<64x32x!tt.ptr<f16>, #blocked2>, i32, i32, !tt.memdesc<64x32xf16, #shared, #triton_gpu.shared_memory, mutable>, !triton_gpu.async.token, !triton_gpu.async.token)  : i32 {
      %93 = arith.subi %51, %c3_i32 : i32 loc(#loc32)
      %94 = arith.cmpi slt, %arg13, %93 : i32 loc(#loc32)
      %95 = tt.load %arg15 : tensor<32x64x!tt.ptr<f16>, #blocked> loc(#loc33)
      %96 = triton_gpu.local_alloc %95 : (tensor<32x64xf16, #blocked>) -> !tt.memdesc<32x64xf16, #shared1, #triton_gpu.shared_memory> loc(#loc33)
      %97 = triton_gpu.local_load %96 : !tt.memdesc<32x64xf16, #shared1, #triton_gpu.shared_memory> -> tensor<32x64xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 2}>> loc(#loc33)
      %98 = triton_gpu.local_load %arg19 : !tt.memdesc<64x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> tensor<64x32xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 2}>> loc(#loc31)
      %99 = tt.dot %97, %98, %arg14, inputPrecision = tf32 : tensor<32x64xf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma, kWidth = 2}>> * tensor<64x32xf16, #triton_gpu.dot_op<{opIdx = 1, parent = #mma, kWidth = 2}>> -> tensor<32x32xf32, #mma> loc(#loc34)
      %100 = tt.addptr %arg15, %cst : tensor<32x64x!tt.ptr<f16>, #blocked>, tensor<32x64xi32, #blocked> loc(#loc35)
      %101 = tt.addptr %arg16, %53 : tensor<64x32x!tt.ptr<f16>, #blocked2>, tensor<64x32xi32, #blocked2> loc(#loc30)
      %102 = arith.addi %arg17, %c1_i32 : i32 loc(#loc32)
      %103 = arith.cmpi slt, %102, %c3_i32 : i32 loc(#loc32)
      %104 = arith.select %103, %102, %c0_i32 : i32 loc(#loc32)
      %105 = triton_gpu.memdesc_subview %54[%104, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<64x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc31)
      %106 = tt.splat %94 : i1 -> tensor<64x32xi1, #blocked2> loc(#loc32)
      %107 = triton_gpu.async_copy_global_to_local %101, %105 mask %106 : tensor<64x32x!tt.ptr<f16>, #blocked2> -> <64x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc31)
      %108 = triton_gpu.async_commit_group %107 loc(#loc31)
      %109 = arith.addi %arg18, %c1_i32 : i32 loc(#loc32)
      %110 = arith.cmpi slt, %109, %c3_i32 : i32 loc(#loc32)
      %111 = arith.select %110, %109, %c0_i32 : i32 loc(#loc32)
      %112 = triton_gpu.async_wait %arg20 {num = 2 : i32} loc(#loc31)
      %113 = triton_gpu.memdesc_subview %54[%111, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<64x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc31)
      scf.yield %99, %100, %101, %104, %111, %113, %arg21, %108 : tensor<32x32xf32, #mma>, tensor<32x64x!tt.ptr<f16>, #blocked>, tensor<64x32x!tt.ptr<f16>, #blocked2>, i32, i32, !tt.memdesc<64x32xf16, #shared, #triton_gpu.shared_memory, mutable>, !triton_gpu.async.token, !triton_gpu.async.token loc(#loc32)
    } loc(#loc32)
    %74 = triton_gpu.async_wait  {num = 0 : i32} loc(#loc32)
    triton_gpu.local_dealloc %54 : !tt.memdesc<3x64x32xf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc32)
    %75 = arith.truncf %73#0 : tensor<32x32xf32, #mma> to tensor<32x32xf16, #mma> loc(#loc36)
    tt.proton_record <1, "end", "cycle", "warp">
    tt.proton_record <2, "start", "cycle", "warp">
    %76 = tt.expand_dims %11 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> -> tensor<32x1xi32, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> loc(#loc37)
    %77 = tt.expand_dims %76 {axis = 2 : i32} : tensor<32x1xi32, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> -> tensor<32x1x1xi32, #blocked1> loc(#loc37)
    %78 = tt.splat %arg10 : i32 -> tensor<32x1x1xi32, #blocked1> loc(#loc38)
    %79 = arith.muli %78, %77 : tensor<32x1x1xi32, #blocked1> loc(#loc38)
    %80 = tt.splat %arg2 : !tt.ptr<f16> -> tensor<32x1x1x!tt.ptr<f16>, #blocked1> loc(#loc39)
    %81 = tt.addptr %80, %79 : tensor<32x1x1x!tt.ptr<f16>, #blocked1>, tensor<32x1x1xi32, #blocked1> loc(#loc39)
    %82 = tt.expand_dims %18 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> -> tensor<1x32xi32, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> loc(#loc40)
    %83 = tt.expand_dims %82 {axis = 2 : i32} : tensor<1x32xi32, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> -> tensor<1x32x1xi32, #blocked1> loc(#loc40)
    %84 = tt.splat %arg11 : i32 -> tensor<1x32x1xi32, #blocked1> loc(#loc41)
    %85 = arith.muli %84, %83 : tensor<1x32x1xi32, #blocked1> loc(#loc41)
    %86 = tt.broadcast %81 : tensor<32x1x1x!tt.ptr<f16>, #blocked1> -> tensor<32x32x1x!tt.ptr<f16>, #blocked1> loc(#loc42)
    %87 = tt.broadcast %85 : tensor<1x32x1xi32, #blocked1> -> tensor<32x32x1xi32, #blocked1> loc(#loc42)
    %88 = tt.addptr %86, %87 : tensor<32x32x1x!tt.ptr<f16>, #blocked1>, tensor<32x32x1xi32, #blocked1> loc(#loc42)
    %89 = tt.splat %2 : i32 -> tensor<32x32x1xi32, #blocked1> loc(#loc43)
    %90 = tt.addptr %88, %89 : tensor<32x32x1x!tt.ptr<f16>, #blocked1>, tensor<32x32x1xi32, #blocked1> loc(#loc43)
    %91 = triton_gpu.convert_layout %75 : tensor<32x32xf16, #mma> -> tensor<32x32xf16, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> loc(#loc44)
    %92 = tt.expand_dims %91 {axis = 2 : i32} : tensor<32x32xf16, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> -> tensor<32x32x1xf16, #blocked1> loc(#loc44)
    tt.store %90, %92 : tensor<32x32x1x!tt.ptr<f16>, #blocked1> loc(#loc45)
    tt.proton_record <2, "end", "cycle", "warp">
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":64:26)
#loc3 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":65:26)
#loc4 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":66:27)
#loc5 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":87:23)
#loc6 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":87:51)
#loc7 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":87:38)
#loc8 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":87:68)
#loc9 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":88:23)
#loc10 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":88:38)
#loc11 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":88:68)
#loc12 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":89:23)
#loc13 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":89:46)
#loc14 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":89:33)
#loc15 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":89:63)
#loc16 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":90:30)
#loc17 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":90:41)
#loc18 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":90:60)
#loc19 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":90:53)
#loc20 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":90:22)
#loc21 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":91:29)
#loc22 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":91:40)
#loc23 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":91:60)
#loc24 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":91:52)
#loc25 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":91:22)
#loc26 = loc("/home/srir/triton/python/triton/language/standard.py":40:22)
#loc27 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":99:39)
#loc28 = loc("/home/srir/triton/python/triton/language/standard.py":40:28)
#loc29 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":108:33)
#loc30 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":108:18)
#loc31 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":104:20)
#loc32 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":105:20)
#loc33 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":99:22)
#loc34 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":107:18)
#loc35 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":106:33)
#loc36 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":109:25)
#loc37 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":116:32)
#loc38 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":116:24)
#loc39 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":116:10)
#loc40 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":117:32)
#loc41 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":117:24)
#loc42 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":117:10)
#loc43 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":118:10)
#loc44 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":120:29)
#loc45 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":120:25)
#loc46 = loc("/home/srir/tritonbench/tritonbench/operators/gemm/partition_k_profile.py":120:4)
#loc47 = loc(callsite(#loc26 at #loc27))
#loc48 = loc(callsite(#loc28 at #loc27))
